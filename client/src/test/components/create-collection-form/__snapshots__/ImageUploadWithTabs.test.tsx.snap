// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderableListItem snapshots isLoading 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <ImageUploadWithTabs
          NUMBER_OF_IMAGES={0}
          handleImgDelete={[MockFunction]}
          handleImgDescChange={[MockFunction]}
          handleImgDrop={[MockFunction]}
          handleImgNameChange={[MockFunction]}
          handleImgRarityChange={[MockFunction]}
          imgObjs={Object {}}
          isLoading={true}
        >
          <ForwardRef(Box)
            sx={
              Object {
                "width": 1,
              }
            }
          >
            <Styled(div)
              as="div"
              className="MuiBox-root"
              sx={
                Object {
                  "width": 1,
                }
              }
              theme={
                Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "unit": "px",
                    "up": [Function],
                    "values": Object {
                      "lg": 1200,
                      "md": 900,
                      "sm": 600,
                      "xl": 1536,
                      "xs": 0,
                    },
                  },
                  "components": Object {},
                  "direction": "ltr",
                  "mixins": Object {
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#F0F0F0",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#c62828",
                      "light": "#ef5350",
                      "main": "#d32f2f",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#f5f5f5",
                      "A200": "#eeeeee",
                      "A400": "#bdbdbd",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#01579b",
                      "light": "#03a9f4",
                      "main": "#0288d1",
                    },
                    "mode": "light",
                    "primary": Object {
                      "100": "#b2ebf2",
                      "200": "#80deea",
                      "300": "#4dd0e1",
                      "400": "#26c6da",
                      "50": "#e0f7fa",
                      "500": "#00bcd4",
                      "600": "#00acc1",
                      "700": "#0097a7",
                      "800": "#00838f",
                      "900": "#006064",
                      "A100": "#84ffff",
                      "A200": "#18ffff",
                      "A400": "#00e5ff",
                      "A700": "#00b8d4",
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#0097a7",
                      "light": "#4dd0e1",
                      "main": "#00bcd4",
                    },
                    "secondary": Object {
                      "100": "#f8bbd0",
                      "200": "#f48fb1",
                      "300": "#f06292",
                      "400": "#ec407a",
                      "50": "#fce4ec",
                      "500": "#e91e63",
                      "600": "#d81b60",
                      "700": "#c2185b",
                      "800": "#ad1457",
                      "900": "#880e4f",
                      "A100": "#ff80ab",
                      "A200": "#ff4081",
                      "A400": "#f50057",
                      "A700": "#c51162",
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "#fff",
                      "dark": "#1b5e20",
                      "light": "#4caf50",
                      "main": "#2e7d32",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.6)",
                    },
                    "tonalOffset": 0.2,
                    "warning": Object {
                      "contrastText": "#fff",
                      "dark": "#e65100",
                      "light": "#ff9800",
                      "main": "#ed6c02",
                    },
                  },
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                  Symbol(mui.nested): false,
                }
              }
            >
              <Noop />
              <div
                className="MuiBox-root css-8atqhb"
              >
                <ImageUpload
                  NUMBER_OF_IMAGES={0}
                  handleImageDrop={[MockFunction]}
                >
                  <label
                    className="img-upload-label"
                    data-testid="img-upload-label"
                    htmlFor="upload-images"
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onKeyPress={[Function]}
                    style={
                      Object {
                        "background": "#fff",
                        "borderColor": "#00bcd4",
                        "borderRadius": 4,
                        "boxShadow": "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      }
                    }
                    tabIndex={0}
                  >
                    <ForwardRef(CloudUploadIcon)
                      className="img-upload-cloud"
                      color="primary"
                      fontSize="large"
                    >
                      <ForwardRef(SvgIcon)
                        className="img-upload-cloud"
                        color="primary"
                        data-testid="CloudUploadIcon"
                        fontSize="large"
                      >
                        <MuiSvgIconRoot
                          aria-hidden={true}
                          as="svg"
                          className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeLarge img-upload-cloud"
                          data-testid="CloudUploadIcon"
                          focusable="false"
                          ownerState={
                            Object {
                              "children": <path
                                d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                              />,
                              "className": "img-upload-cloud",
                              "color": "primary",
                              "component": "svg",
                              "data-testid": "CloudUploadIcon",
                              "fontSize": "large",
                              "viewBox": "0 0 24 24",
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <Noop />
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeLarge img-upload-cloud css-5cbsdu-MuiSvgIcon-root"
                            data-testid="CloudUploadIcon"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                            />
                          </svg>
                        </MuiSvgIconRoot>
                      </ForwardRef(SvgIcon)>
                    </ForwardRef(CloudUploadIcon)>
                    <ForwardRef(Typography)
                      align="center"
                      variant="h5"
                    >
                      <MuiTypographyRoot
                        as="h5"
                        className="MuiTypography-root MuiTypography-h5 MuiTypography-alignCenter"
                        ownerState={
                          Object {
                            "align": "center",
                            "children": "Upload your NFT collection image(s) here",
                            "className": undefined,
                            "color": undefined,
                            "component": undefined,
                            "gutterBottom": false,
                            "noWrap": false,
                            "paragraph": false,
                            "sx": Object {
                              "color": undefined,
                            },
                            "variant": "h5",
                            "variantMapping": Object {
                              "body1": "p",
                              "body2": "p",
                              "h1": "h1",
                              "h2": "h2",
                              "h3": "h3",
                              "h4": "h4",
                              "h5": "h5",
                              "h6": "h6",
                              "inherit": "p",
                              "subtitle1": "h6",
                              "subtitle2": "h6",
                            },
                          }
                        }
                        sx={
                          Object {
                            "color": undefined,
                          }
                        }
                      >
                        <Noop />
                        <h5
                          className="MuiTypography-root MuiTypography-h5 MuiTypography-alignCenter css-ph2xsj-MuiTypography-root"
                        >
                          Upload your NFT collection image(s) here
                        </h5>
                      </MuiTypographyRoot>
                    </ForwardRef(Typography)>
                  </label>
                  <input
                    accept="image/*"
                    className="img-upload-input"
                    data-testid="img-upload-input"
                    id="upload-images"
                    multiple={true}
                    onChange={[Function]}
                    type="file"
                  />
                </ImageUpload>
              </div>
            </Styled(div)>
          </ForwardRef(Box)>
        </ImageUploadWithTabs>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`OrderableListItem snapshots not isLoading and number of images > 0 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <ImageUploadWithTabs
          NUMBER_OF_IMAGES={1}
          handleImgDelete={[MockFunction]}
          handleImgDescChange={[MockFunction]}
          handleImgDrop={[MockFunction]}
          handleImgNameChange={[MockFunction]}
          handleImgRarityChange={[MockFunction]}
          imgObjs={
            Object {
              "test-id": Object {
                "image": File {},
                "name": "test-image",
                "url": "test-url",
              },
            }
          }
          isLoading={true}
        >
          <ForwardRef(Box)
            sx={
              Object {
                "width": 1,
              }
            }
          >
            <Styled(div)
              as="div"
              className="MuiBox-root"
              sx={
                Object {
                  "width": 1,
                }
              }
              theme={
                Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "unit": "px",
                    "up": [Function],
                    "values": Object {
                      "lg": 1200,
                      "md": 900,
                      "sm": 600,
                      "xl": 1536,
                      "xs": 0,
                    },
                  },
                  "components": Object {},
                  "direction": "ltr",
                  "mixins": Object {
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#F0F0F0",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#c62828",
                      "light": "#ef5350",
                      "main": "#d32f2f",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#f5f5f5",
                      "A200": "#eeeeee",
                      "A400": "#bdbdbd",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#01579b",
                      "light": "#03a9f4",
                      "main": "#0288d1",
                    },
                    "mode": "light",
                    "primary": Object {
                      "100": "#b2ebf2",
                      "200": "#80deea",
                      "300": "#4dd0e1",
                      "400": "#26c6da",
                      "50": "#e0f7fa",
                      "500": "#00bcd4",
                      "600": "#00acc1",
                      "700": "#0097a7",
                      "800": "#00838f",
                      "900": "#006064",
                      "A100": "#84ffff",
                      "A200": "#18ffff",
                      "A400": "#00e5ff",
                      "A700": "#00b8d4",
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#0097a7",
                      "light": "#4dd0e1",
                      "main": "#00bcd4",
                    },
                    "secondary": Object {
                      "100": "#f8bbd0",
                      "200": "#f48fb1",
                      "300": "#f06292",
                      "400": "#ec407a",
                      "50": "#fce4ec",
                      "500": "#e91e63",
                      "600": "#d81b60",
                      "700": "#c2185b",
                      "800": "#ad1457",
                      "900": "#880e4f",
                      "A100": "#ff80ab",
                      "A200": "#ff4081",
                      "A400": "#f50057",
                      "A700": "#c51162",
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "#fff",
                      "dark": "#1b5e20",
                      "light": "#4caf50",
                      "main": "#2e7d32",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.6)",
                    },
                    "tonalOffset": 0.2,
                    "warning": Object {
                      "contrastText": "#fff",
                      "dark": "#e65100",
                      "light": "#ff9800",
                      "main": "#ed6c02",
                    },
                  },
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                  Symbol(mui.nested): false,
                }
              }
            >
              <Noop />
              <div
                className="MuiBox-root css-8atqhb"
              >
                <ImageUpload
                  NUMBER_OF_IMAGES={1}
                  handleImageDrop={[MockFunction]}
                >
                  <label
                    className="img-upload-label"
                    data-testid="img-upload-label"
                    htmlFor="upload-images"
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onKeyPress={[Function]}
                    style={
                      Object {
                        "background": "#fff",
                        "borderColor": "#00bcd4",
                        "borderRadius": 4,
                        "boxShadow": "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      }
                    }
                    tabIndex={0}
                  >
                    <ForwardRef(CloudUploadIcon)
                      className="img-upload-cloud"
                      color="primary"
                      fontSize="large"
                    >
                      <ForwardRef(SvgIcon)
                        className="img-upload-cloud"
                        color="primary"
                        data-testid="CloudUploadIcon"
                        fontSize="large"
                      >
                        <MuiSvgIconRoot
                          aria-hidden={true}
                          as="svg"
                          className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeLarge img-upload-cloud"
                          data-testid="CloudUploadIcon"
                          focusable="false"
                          ownerState={
                            Object {
                              "children": <path
                                d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                              />,
                              "className": "img-upload-cloud",
                              "color": "primary",
                              "component": "svg",
                              "data-testid": "CloudUploadIcon",
                              "fontSize": "large",
                              "viewBox": "0 0 24 24",
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <Noop />
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeLarge img-upload-cloud css-5cbsdu-MuiSvgIcon-root"
                            data-testid="CloudUploadIcon"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                            />
                          </svg>
                        </MuiSvgIconRoot>
                      </ForwardRef(SvgIcon)>
                    </ForwardRef(CloudUploadIcon)>
                    Uploaded 1 image(s)
                    <ForwardRef(Typography)
                      align="center"
                      variant="h5"
                    >
                      <MuiTypographyRoot
                        as="h5"
                        className="MuiTypography-root MuiTypography-h5 MuiTypography-alignCenter"
                        ownerState={
                          Object {
                            "align": "center",
                            "children": "Upload your NFT collection image(s) here",
                            "className": undefined,
                            "color": undefined,
                            "component": undefined,
                            "gutterBottom": false,
                            "noWrap": false,
                            "paragraph": false,
                            "sx": Object {
                              "color": undefined,
                            },
                            "variant": "h5",
                            "variantMapping": Object {
                              "body1": "p",
                              "body2": "p",
                              "h1": "h1",
                              "h2": "h2",
                              "h3": "h3",
                              "h4": "h4",
                              "h5": "h5",
                              "h6": "h6",
                              "inherit": "p",
                              "subtitle1": "h6",
                              "subtitle2": "h6",
                            },
                          }
                        }
                        sx={
                          Object {
                            "color": undefined,
                          }
                        }
                      >
                        <Noop />
                        <h5
                          className="MuiTypography-root MuiTypography-h5 MuiTypography-alignCenter css-ph2xsj-MuiTypography-root"
                        >
                          Upload your NFT collection image(s) here
                        </h5>
                      </MuiTypographyRoot>
                    </ForwardRef(Typography)>
                  </label>
                  <input
                    accept="image/*"
                    className="img-upload-input"
                    data-testid="img-upload-input"
                    id="upload-images"
                    multiple={true}
                    onChange={[Function]}
                    type="file"
                  />
                </ImageUpload>
              </div>
            </Styled(div)>
          </ForwardRef(Box)>
          <ForwardRef(Paper)
            sx={
              Object {
                "width": 1,
              }
            }
          >
            <MuiPaperRoot
              as="div"
              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
              ownerState={
                Object {
                  "children": <VerticalTabs
                    NUMBER_OF_IMAGES={1}
                    handleImageDelete={[MockFunction]}
                    handleImgDescChange={[MockFunction]}
                    handleImgRarityChange={[MockFunction]}
                    handleNameChange={[MockFunction]}
                    imgObjs={
                      Object {
                        "test-id": Object {
                          "image": File {},
                          "name": "test-image",
                          "url": "test-url",
                        },
                      }
                    }
                    isLoading={true}
                  />,
                  "component": "div",
                  "elevation": 1,
                  "square": false,
                  "sx": Object {
                    "width": 1,
                  },
                  "variant": "elevation",
                }
              }
              sx={
                Object {
                  "width": 1,
                }
              }
            >
              <Noop />
              <div
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-u06erh-MuiPaper-root"
              >
                <VerticalTabs
                  NUMBER_OF_IMAGES={1}
                  handleImageDelete={[MockFunction]}
                  handleImgDescChange={[MockFunction]}
                  handleImgRarityChange={[MockFunction]}
                  handleNameChange={[MockFunction]}
                  imgObjs={
                    Object {
                      "test-id": Object {
                        "image": File {},
                        "name": "test-image",
                        "url": "test-url",
                      },
                    }
                  }
                  isLoading={true}
                >
                  <ForwardRef(Box)
                    sx={
                      Object {
                        "bgcolor": "background.paper",
                        "border": 1,
                        "borderRadius": 1,
                        "display": "flex",
                        "flexGrow": 1,
                        "height": "60vh",
                      }
                    }
                  >
                    <Styled(div)
                      as="div"
                      className="MuiBox-root"
                      sx={
                        Object {
                          "bgcolor": "background.paper",
                          "border": 1,
                          "borderRadius": 1,
                          "display": "flex",
                          "flexGrow": 1,
                          "height": "60vh",
                        }
                      }
                      theme={
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "unit": "px",
                            "up": [Function],
                            "values": Object {
                              "lg": 1200,
                              "md": 900,
                              "sm": 600,
                              "xl": 1536,
                              "xs": 0,
                            },
                          },
                          "components": Object {},
                          "direction": "ltr",
                          "mixins": Object {
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#F0F0F0",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#c62828",
                              "light": "#ef5350",
                              "main": "#d32f2f",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#f5f5f5",
                              "A200": "#eeeeee",
                              "A400": "#bdbdbd",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#01579b",
                              "light": "#03a9f4",
                              "main": "#0288d1",
                            },
                            "mode": "light",
                            "primary": Object {
                              "100": "#b2ebf2",
                              "200": "#80deea",
                              "300": "#4dd0e1",
                              "400": "#26c6da",
                              "50": "#e0f7fa",
                              "500": "#00bcd4",
                              "600": "#00acc1",
                              "700": "#0097a7",
                              "800": "#00838f",
                              "900": "#006064",
                              "A100": "#84ffff",
                              "A200": "#18ffff",
                              "A400": "#00e5ff",
                              "A700": "#00b8d4",
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#0097a7",
                              "light": "#4dd0e1",
                              "main": "#00bcd4",
                            },
                            "secondary": Object {
                              "100": "#f8bbd0",
                              "200": "#f48fb1",
                              "300": "#f06292",
                              "400": "#ec407a",
                              "50": "#fce4ec",
                              "500": "#e91e63",
                              "600": "#d81b60",
                              "700": "#c2185b",
                              "800": "#ad1457",
                              "900": "#880e4f",
                              "A100": "#ff80ab",
                              "A200": "#ff4081",
                              "A400": "#f50057",
                              "A700": "#c51162",
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "#fff",
                              "dark": "#1b5e20",
                              "light": "#4caf50",
                              "main": "#2e7d32",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.6)",
                            },
                            "tonalOffset": 0.2,
                            "warning": Object {
                              "contrastText": "#fff",
                              "dark": "#e65100",
                              "light": "#ff9800",
                              "main": "#ed6c02",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                          Symbol(mui.nested): false,
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiBox-root css-ulmull"
                      >
                        <ForwardRef(Tabs)
                          TabScrollButtonProps={
                            Object {
                              "sx": Object {
                                "color": [Function],
                              },
                            }
                          }
                          allowScrollButtonsMobile={true}
                          data-testid="tabs"
                          onChange={[Function]}
                          orientation="vertical"
                          selectionFollowsFocus={true}
                          sx={
                            Object {
                              "borderColor": "divider",
                              "borderRight": 1,
                            }
                          }
                          value={0}
                          variant="scrollable"
                        >
                          <MuiTabsRoot
                            as="div"
                            className="MuiTabs-root MuiTabs-vertical"
                            data-testid="tabs"
                            ownerState={
                              Object {
                                "TabScrollButtonProps": Object {
                                  "sx": Object {
                                    "color": [Function],
                                  },
                                },
                                "allowScrollButtonsMobile": true,
                                "centered": false,
                                "children": Array [
                                  <ForwardRef(Tab)
                                    aria-controls="vertical-tabpanel-0"
                                    id="vertical-tab-0"
                                    label="Image 1"
                                  />,
                                ],
                                "component": "div",
                                "data-testid": "tabs",
                                "fixed": false,
                                "hideScrollbar": true,
                                "indicatorColor": "primary",
                                "onChange": [Function],
                                "orientation": "vertical",
                                "scrollButtons": "auto",
                                "scrollButtonsHideMobile": false,
                                "scrollableX": false,
                                "scrollableY": true,
                                "selectionFollowsFocus": true,
                                "sx": Object {
                                  "borderColor": "divider",
                                  "borderRight": 1,
                                },
                                "textColor": "primary",
                                "value": 0,
                                "variant": "scrollable",
                                "vertical": true,
                                "visibleScrollbar": false,
                              }
                            }
                            sx={
                              Object {
                                "borderColor": "divider",
                                "borderRight": 1,
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiTabs-root MuiTabs-vertical css-2ynwu8-MuiTabs-root"
                              data-testid="tabs"
                            >
                              <MuiTabsScrollbarSize
                                className="MuiTabs-hideScrollbar"
                                onChange={[Function]}
                              >
                                <Noop />
                                <ScrollbarSize
                                  className="MuiTabs-hideScrollbar css-agdkjh-MuiTabs-scrollbarSize"
                                  onChange={[Function]}
                                >
                                  <div
                                    className="MuiTabs-hideScrollbar css-agdkjh-MuiTabs-scrollbarSize"
                                    style={
                                      Object {
                                        "height": 99,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": -9999,
                                        "width": 99,
                                      }
                                    }
                                  />
                                </ScrollbarSize>
                              </MuiTabsScrollbarSize>
                              <MuiTabsScroller
                                className="MuiTabs-scroller MuiTabs-hideScrollbar MuiTabs-scrollableY"
                                onScroll={[Function]}
                                ownerState={
                                  Object {
                                    "TabScrollButtonProps": Object {
                                      "sx": Object {
                                        "color": [Function],
                                      },
                                    },
                                    "allowScrollButtonsMobile": true,
                                    "centered": false,
                                    "children": Array [
                                      <ForwardRef(Tab)
                                        aria-controls="vertical-tabpanel-0"
                                        id="vertical-tab-0"
                                        label="Image 1"
                                      />,
                                    ],
                                    "component": "div",
                                    "data-testid": "tabs",
                                    "fixed": false,
                                    "hideScrollbar": true,
                                    "indicatorColor": "primary",
                                    "onChange": [Function],
                                    "orientation": "vertical",
                                    "scrollButtons": "auto",
                                    "scrollButtonsHideMobile": false,
                                    "scrollableX": false,
                                    "scrollableY": true,
                                    "selectionFollowsFocus": true,
                                    "sx": Object {
                                      "borderColor": "divider",
                                      "borderRight": 1,
                                    },
                                    "textColor": "primary",
                                    "value": 0,
                                    "variant": "scrollable",
                                    "vertical": true,
                                    "visibleScrollbar": false,
                                  }
                                }
                                style={
                                  Object {
                                    "marginRight": -0,
                                    "overflow": null,
                                  }
                                }
                              >
                                <Noop />
                                <div
                                  className="MuiTabs-scroller MuiTabs-hideScrollbar MuiTabs-scrollableY css-1cgx7kx-MuiTabs-scroller"
                                  onScroll={[Function]}
                                  style={
                                    Object {
                                      "marginRight": -0,
                                      "overflow": null,
                                    }
                                  }
                                >
                                  <MuiTabsFlexContainer
                                    aria-orientation="vertical"
                                    className="MuiTabs-flexContainer MuiTabs-flexContainerVertical"
                                    onKeyDown={[Function]}
                                    ownerState={
                                      Object {
                                        "TabScrollButtonProps": Object {
                                          "sx": Object {
                                            "color": [Function],
                                          },
                                        },
                                        "allowScrollButtonsMobile": true,
                                        "centered": false,
                                        "children": Array [
                                          <ForwardRef(Tab)
                                            aria-controls="vertical-tabpanel-0"
                                            id="vertical-tab-0"
                                            label="Image 1"
                                          />,
                                        ],
                                        "component": "div",
                                        "data-testid": "tabs",
                                        "fixed": false,
                                        "hideScrollbar": true,
                                        "indicatorColor": "primary",
                                        "onChange": [Function],
                                        "orientation": "vertical",
                                        "scrollButtons": "auto",
                                        "scrollButtonsHideMobile": false,
                                        "scrollableX": false,
                                        "scrollableY": true,
                                        "selectionFollowsFocus": true,
                                        "sx": Object {
                                          "borderColor": "divider",
                                          "borderRight": 1,
                                        },
                                        "textColor": "primary",
                                        "value": 0,
                                        "variant": "scrollable",
                                        "vertical": true,
                                        "visibleScrollbar": false,
                                      }
                                    }
                                    role="tablist"
                                  >
                                    <Noop />
                                    <div
                                      aria-orientation="vertical"
                                      className="MuiTabs-flexContainer MuiTabs-flexContainerVertical css-lfwcke-MuiTabs-flexContainer"
                                      onKeyDown={[Function]}
                                      role="tablist"
                                    >
                                      <ForwardRef(Tab)
                                        aria-controls="vertical-tabpanel-0"
                                        fullWidth={false}
                                        id="vertical-tab-0"
                                        indicator={false}
                                        key=".$test-id"
                                        label="Image 1"
                                        onChange={[Function]}
                                        selected={true}
                                        selectionFollowsFocus={true}
                                        textColor="primary"
                                        value={0}
                                      >
                                        <MuiTabRoot
                                          aria-controls="vertical-tabpanel-0"
                                          aria-selected={true}
                                          className="MuiTab-root MuiTab-textColorPrimary Mui-selected"
                                          disabled={false}
                                          focusRipple={true}
                                          id="vertical-tab-0"
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          ownerState={
                                            Object {
                                              "aria-controls": "vertical-tabpanel-0",
                                              "disableFocusRipple": false,
                                              "disabled": false,
                                              "fullWidth": false,
                                              "icon": false,
                                              "iconPosition": "top",
                                              "id": "vertical-tab-0",
                                              "indicator": false,
                                              "label": true,
                                              "onChange": [Function],
                                              "selected": true,
                                              "selectionFollowsFocus": true,
                                              "textColor": "primary",
                                              "value": 0,
                                              "wrapped": false,
                                            }
                                          }
                                          role="tab"
                                          tabIndex={0}
                                        >
                                          <Noop />
                                          <ForwardRef(ButtonBase)
                                            aria-controls="vertical-tabpanel-0"
                                            aria-selected={true}
                                            className="MuiTab-root MuiTab-textColorPrimary Mui-selected css-1f0lsou-MuiTab-root"
                                            disabled={false}
                                            focusRipple={true}
                                            id="vertical-tab-0"
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            role="tab"
                                            tabIndex={0}
                                          >
                                            <MuiButtonBaseRoot
                                              aria-controls="vertical-tabpanel-0"
                                              aria-selected={true}
                                              as="button"
                                              className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary Mui-selected css-1f0lsou-MuiTab-root"
                                              disabled={false}
                                              id="vertical-tab-0"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              ownerState={
                                                Object {
                                                  "aria-controls": "vertical-tabpanel-0",
                                                  "aria-selected": true,
                                                  "centerRipple": false,
                                                  "children": Array [
                                                    <React.Fragment>
                                                      Image 1
                                                    </React.Fragment>,
                                                    false,
                                                  ],
                                                  "className": "MuiTab-root MuiTab-textColorPrimary Mui-selected css-1f0lsou-MuiTab-root",
                                                  "component": "button",
                                                  "disableRipple": false,
                                                  "disableTouchRipple": false,
                                                  "disabled": false,
                                                  "focusRipple": true,
                                                  "focusVisible": false,
                                                  "id": "vertical-tab-0",
                                                  "onClick": [Function],
                                                  "onFocus": [Function],
                                                  "role": "tab",
                                                  "tabIndex": 0,
                                                }
                                              }
                                              role="tab"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <Noop />
                                              <button
                                                aria-controls="vertical-tabpanel-0"
                                                aria-selected={true}
                                                className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary Mui-selected css-10okca6-MuiButtonBase-root-MuiTab-root"
                                                disabled={false}
                                                id="vertical-tab-0"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onContextMenu={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="tab"
                                                tabIndex={0}
                                                type="button"
                                              >
                                                Image 1
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                >
                                                  <MuiTouchRippleRoot
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <Noop />
                                                    <span
                                                      className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </MuiTouchRippleRoot>
                                                </ForwardRef(TouchRipple)>
                                              </button>
                                            </MuiButtonBaseRoot>
                                          </ForwardRef(ButtonBase)>
                                        </MuiTabRoot>
                                      </ForwardRef(Tab)>
                                    </div>
                                  </MuiTabsFlexContainer>
                                  <MuiTabsIndicator
                                    className="MuiTabs-indicator"
                                    ownerState={
                                      Object {
                                        "TabScrollButtonProps": Object {
                                          "sx": Object {
                                            "color": [Function],
                                          },
                                        },
                                        "allowScrollButtonsMobile": true,
                                        "centered": false,
                                        "children": Array [
                                          <ForwardRef(Tab)
                                            aria-controls="vertical-tabpanel-0"
                                            id="vertical-tab-0"
                                            label="Image 1"
                                          />,
                                        ],
                                        "component": "div",
                                        "data-testid": "tabs",
                                        "fixed": false,
                                        "hideScrollbar": true,
                                        "indicatorColor": "primary",
                                        "onChange": [Function],
                                        "orientation": "vertical",
                                        "scrollButtons": "auto",
                                        "scrollButtonsHideMobile": false,
                                        "scrollableX": false,
                                        "scrollableY": true,
                                        "selectionFollowsFocus": true,
                                        "sx": Object {
                                          "borderColor": "divider",
                                          "borderRight": 1,
                                        },
                                        "textColor": "primary",
                                        "value": 0,
                                        "variant": "scrollable",
                                        "vertical": true,
                                        "visibleScrollbar": false,
                                      }
                                    }
                                    style={
                                      Object {
                                        "height": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <span
                                      className="MuiTabs-indicator css-1bctjhm-MuiTabs-indicator"
                                      style={
                                        Object {
                                          "height": 0,
                                          "top": 0,
                                        }
                                      }
                                    />
                                  </MuiTabsIndicator>
                                </div>
                              </MuiTabsScroller>
                            </div>
                          </MuiTabsRoot>
                        </ForwardRef(Tabs)>
                        <TabPanel
                          index={0}
                          key="test-id"
                          value={0}
                          vertical={true}
                        >
                          <ForwardRef(Box)
                            aria-labelledby="vertical--tab-0"
                            hidden={false}
                            id="vertical-tabpanel-0"
                            role="tabpanel"
                            sx={
                              Object {
                                "height": 1,
                                "width": 1,
                              }
                            }
                          >
                            <Styled(div)
                              aria-labelledby="vertical--tab-0"
                              as="div"
                              className="MuiBox-root"
                              hidden={false}
                              id="vertical-tabpanel-0"
                              role="tabpanel"
                              sx={
                                Object {
                                  "height": 1,
                                  "width": 1,
                                }
                              }
                              theme={
                                Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "unit": "px",
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1200,
                                      "md": 900,
                                      "sm": 600,
                                      "xl": 1536,
                                      "xs": 0,
                                    },
                                  },
                                  "components": Object {},
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#F0F0F0",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c62828",
                                      "light": "#ef5350",
                                      "main": "#d32f2f",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#f5f5f5",
                                      "A200": "#eeeeee",
                                      "A400": "#bdbdbd",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#01579b",
                                      "light": "#03a9f4",
                                      "main": "#0288d1",
                                    },
                                    "mode": "light",
                                    "primary": Object {
                                      "100": "#b2ebf2",
                                      "200": "#80deea",
                                      "300": "#4dd0e1",
                                      "400": "#26c6da",
                                      "50": "#e0f7fa",
                                      "500": "#00bcd4",
                                      "600": "#00acc1",
                                      "700": "#0097a7",
                                      "800": "#00838f",
                                      "900": "#006064",
                                      "A100": "#84ffff",
                                      "A200": "#18ffff",
                                      "A400": "#00e5ff",
                                      "A700": "#00b8d4",
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#0097a7",
                                      "light": "#4dd0e1",
                                      "main": "#00bcd4",
                                    },
                                    "secondary": Object {
                                      "100": "#f8bbd0",
                                      "200": "#f48fb1",
                                      "300": "#f06292",
                                      "400": "#ec407a",
                                      "50": "#fce4ec",
                                      "500": "#e91e63",
                                      "600": "#d81b60",
                                      "700": "#c2185b",
                                      "800": "#ad1457",
                                      "900": "#880e4f",
                                      "A100": "#ff80ab",
                                      "A200": "#ff4081",
                                      "A400": "#f50057",
                                      "A700": "#c51162",
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1b5e20",
                                      "light": "#4caf50",
                                      "main": "#2e7d32",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.6)",
                                    },
                                    "tonalOffset": 0.2,
                                    "warning": Object {
                                      "contrastText": "#fff",
                                      "dark": "#e65100",
                                      "light": "#ff9800",
                                      "main": "#ed6c02",
                                    },
                                  },
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                  Symbol(mui.nested): false,
                                }
                              }
                            >
                              <Noop />
                              <div
                                aria-labelledby="vertical--tab-0"
                                className="MuiBox-root css-uwwqev"
                                hidden={false}
                                id="vertical-tabpanel-0"
                                role="tabpanel"
                              >
                                <ForwardRef(Box)
                                  sx={
                                    Object {
                                      "alignItems": "center",
                                      "display": "flex",
                                      "flexDirection": "column",
                                      "gap": "10px",
                                      "height": 1,
                                      "overflowY": "auto",
                                      "padding": 3,
                                      "width": 1,
                                    }
                                  }
                                >
                                  <Styled(div)
                                    as="div"
                                    className="MuiBox-root"
                                    sx={
                                      Object {
                                        "alignItems": "center",
                                        "display": "flex",
                                        "flexDirection": "column",
                                        "gap": "10px",
                                        "height": 1,
                                        "overflowY": "auto",
                                        "padding": 3,
                                        "width": 1,
                                      }
                                    }
                                    theme={
                                      Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "unit": "px",
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1200,
                                            "md": 900,
                                            "sm": 600,
                                            "xl": 1536,
                                            "xs": 0,
                                          },
                                        },
                                        "components": Object {},
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "palette": Object {
                                          "action": Object {
                                            "activatedOpacity": 0.12,
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "disabledOpacity": 0.38,
                                            "focus": "rgba(0, 0, 0, 0.12)",
                                            "focusOpacity": 0.12,
                                            "hover": "rgba(0, 0, 0, 0.04)",
                                            "hoverOpacity": 0.04,
                                            "selected": "rgba(0, 0, 0, 0.08)",
                                            "selectedOpacity": 0.08,
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#F0F0F0",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c62828",
                                            "light": "#ef5350",
                                            "main": "#d32f2f",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#f5f5f5",
                                            "A200": "#eeeeee",
                                            "A400": "#bdbdbd",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#01579b",
                                            "light": "#03a9f4",
                                            "main": "#0288d1",
                                          },
                                          "mode": "light",
                                          "primary": Object {
                                            "100": "#b2ebf2",
                                            "200": "#80deea",
                                            "300": "#4dd0e1",
                                            "400": "#26c6da",
                                            "50": "#e0f7fa",
                                            "500": "#00bcd4",
                                            "600": "#00acc1",
                                            "700": "#0097a7",
                                            "800": "#00838f",
                                            "900": "#006064",
                                            "A100": "#84ffff",
                                            "A200": "#18ffff",
                                            "A400": "#00e5ff",
                                            "A700": "#00b8d4",
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#0097a7",
                                            "light": "#4dd0e1",
                                            "main": "#00bcd4",
                                          },
                                          "secondary": Object {
                                            "100": "#f8bbd0",
                                            "200": "#f48fb1",
                                            "300": "#f06292",
                                            "400": "#ec407a",
                                            "50": "#fce4ec",
                                            "500": "#e91e63",
                                            "600": "#d81b60",
                                            "700": "#c2185b",
                                            "800": "#ad1457",
                                            "900": "#880e4f",
                                            "A100": "#ff80ab",
                                            "A200": "#ff4081",
                                            "A400": "#f50057",
                                            "A700": "#c51162",
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1b5e20",
                                            "light": "#4caf50",
                                            "main": "#2e7d32",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.6)",
                                          },
                                          "tonalOffset": 0.2,
                                          "warning": Object {
                                            "contrastText": "#fff",
                                            "dark": "#e65100",
                                            "light": "#ff9800",
                                            "main": "#ed6c02",
                                          },
                                        },
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                        Symbol(mui.nested): false,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiBox-root css-wnhb9v"
                                    >
                                      <ForwardRef(Box)
                                        sx={
                                          Object {
                                            "alignItems": "center",
                                            "display": "flex",
                                            "gap": "10px",
                                            "width": 1,
                                          }
                                        }
                                      >
                                        <Styled(div)
                                          as="div"
                                          className="MuiBox-root"
                                          sx={
                                            Object {
                                              "alignItems": "center",
                                              "display": "flex",
                                              "gap": "10px",
                                              "width": 1,
                                            }
                                          }
                                          theme={
                                            Object {
                                              "breakpoints": Object {
                                                "between": [Function],
                                                "down": [Function],
                                                "keys": Array [
                                                  "xs",
                                                  "sm",
                                                  "md",
                                                  "lg",
                                                  "xl",
                                                ],
                                                "only": [Function],
                                                "unit": "px",
                                                "up": [Function],
                                                "values": Object {
                                                  "lg": 1200,
                                                  "md": 900,
                                                  "sm": 600,
                                                  "xl": 1536,
                                                  "xs": 0,
                                                },
                                              },
                                              "components": Object {},
                                              "direction": "ltr",
                                              "mixins": Object {
                                                "toolbar": Object {
                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                    "minHeight": 48,
                                                  },
                                                  "@media (min-width:600px)": Object {
                                                    "minHeight": 64,
                                                  },
                                                  "minHeight": 56,
                                                },
                                              },
                                              "palette": Object {
                                                "action": Object {
                                                  "activatedOpacity": 0.12,
                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                  "disabledOpacity": 0.38,
                                                  "focus": "rgba(0, 0, 0, 0.12)",
                                                  "focusOpacity": 0.12,
                                                  "hover": "rgba(0, 0, 0, 0.04)",
                                                  "hoverOpacity": 0.04,
                                                  "selected": "rgba(0, 0, 0, 0.08)",
                                                  "selectedOpacity": 0.08,
                                                },
                                                "augmentColor": [Function],
                                                "background": Object {
                                                  "default": "#F0F0F0",
                                                  "paper": "#fff",
                                                },
                                                "common": Object {
                                                  "black": "#000",
                                                  "white": "#fff",
                                                },
                                                "contrastThreshold": 3,
                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                "error": Object {
                                                  "contrastText": "#fff",
                                                  "dark": "#c62828",
                                                  "light": "#ef5350",
                                                  "main": "#d32f2f",
                                                },
                                                "getContrastText": [Function],
                                                "grey": Object {
                                                  "100": "#f5f5f5",
                                                  "200": "#eeeeee",
                                                  "300": "#e0e0e0",
                                                  "400": "#bdbdbd",
                                                  "50": "#fafafa",
                                                  "500": "#9e9e9e",
                                                  "600": "#757575",
                                                  "700": "#616161",
                                                  "800": "#424242",
                                                  "900": "#212121",
                                                  "A100": "#f5f5f5",
                                                  "A200": "#eeeeee",
                                                  "A400": "#bdbdbd",
                                                  "A700": "#616161",
                                                },
                                                "info": Object {
                                                  "contrastText": "#fff",
                                                  "dark": "#01579b",
                                                  "light": "#03a9f4",
                                                  "main": "#0288d1",
                                                },
                                                "mode": "light",
                                                "primary": Object {
                                                  "100": "#b2ebf2",
                                                  "200": "#80deea",
                                                  "300": "#4dd0e1",
                                                  "400": "#26c6da",
                                                  "50": "#e0f7fa",
                                                  "500": "#00bcd4",
                                                  "600": "#00acc1",
                                                  "700": "#0097a7",
                                                  "800": "#00838f",
                                                  "900": "#006064",
                                                  "A100": "#84ffff",
                                                  "A200": "#18ffff",
                                                  "A400": "#00e5ff",
                                                  "A700": "#00b8d4",
                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                  "dark": "#0097a7",
                                                  "light": "#4dd0e1",
                                                  "main": "#00bcd4",
                                                },
                                                "secondary": Object {
                                                  "100": "#f8bbd0",
                                                  "200": "#f48fb1",
                                                  "300": "#f06292",
                                                  "400": "#ec407a",
                                                  "50": "#fce4ec",
                                                  "500": "#e91e63",
                                                  "600": "#d81b60",
                                                  "700": "#c2185b",
                                                  "800": "#ad1457",
                                                  "900": "#880e4f",
                                                  "A100": "#ff80ab",
                                                  "A200": "#ff4081",
                                                  "A400": "#f50057",
                                                  "A700": "#c51162",
                                                  "contrastText": "#fff",
                                                  "dark": "#c51162",
                                                  "light": "#ff4081",
                                                  "main": "#f50057",
                                                },
                                                "success": Object {
                                                  "contrastText": "#fff",
                                                  "dark": "#1b5e20",
                                                  "light": "#4caf50",
                                                  "main": "#2e7d32",
                                                },
                                                "text": Object {
                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                                },
                                                "tonalOffset": 0.2,
                                                "warning": Object {
                                                  "contrastText": "#fff",
                                                  "dark": "#e65100",
                                                  "light": "#ff9800",
                                                  "main": "#ed6c02",
                                                },
                                              },
                                              "shadows": Array [
                                                "none",
                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                              ],
                                              "shape": Object {
                                                "borderRadius": 4,
                                              },
                                              "spacing": [Function],
                                              "transitions": Object {
                                                "create": [Function],
                                                "duration": Object {
                                                  "complex": 375,
                                                  "enteringScreen": 225,
                                                  "leavingScreen": 195,
                                                  "short": 250,
                                                  "shorter": 200,
                                                  "shortest": 150,
                                                  "standard": 300,
                                                },
                                                "easing": Object {
                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                },
                                                "getAutoHeightDuration": [Function],
                                              },
                                              "typography": Object {
                                                "body1": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "1rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0.00938em",
                                                  "lineHeight": 1.5,
                                                },
                                                "body2": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "0.875rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0.01071em",
                                                  "lineHeight": 1.43,
                                                },
                                                "button": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "0.875rem",
                                                  "fontWeight": 500,
                                                  "letterSpacing": "0.02857em",
                                                  "lineHeight": 1.75,
                                                  "textTransform": "uppercase",
                                                },
                                                "caption": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "0.75rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0.03333em",
                                                  "lineHeight": 1.66,
                                                },
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": 14,
                                                "fontWeightBold": 700,
                                                "fontWeightLight": 300,
                                                "fontWeightMedium": 500,
                                                "fontWeightRegular": 400,
                                                "h1": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "6rem",
                                                  "fontWeight": 300,
                                                  "letterSpacing": "-0.01562em",
                                                  "lineHeight": 1.167,
                                                },
                                                "h2": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "3.75rem",
                                                  "fontWeight": 300,
                                                  "letterSpacing": "-0.00833em",
                                                  "lineHeight": 1.2,
                                                },
                                                "h3": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "3rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0em",
                                                  "lineHeight": 1.167,
                                                },
                                                "h4": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "2.125rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0.00735em",
                                                  "lineHeight": 1.235,
                                                },
                                                "h5": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "1.5rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0em",
                                                  "lineHeight": 1.334,
                                                },
                                                "h6": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "1.25rem",
                                                  "fontWeight": 500,
                                                  "letterSpacing": "0.0075em",
                                                  "lineHeight": 1.6,
                                                },
                                                "htmlFontSize": 16,
                                                "overline": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "0.75rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0.08333em",
                                                  "lineHeight": 2.66,
                                                  "textTransform": "uppercase",
                                                },
                                                "pxToRem": [Function],
                                                "subtitle1": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "1rem",
                                                  "fontWeight": 400,
                                                  "letterSpacing": "0.00938em",
                                                  "lineHeight": 1.75,
                                                },
                                                "subtitle2": Object {
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": "0.875rem",
                                                  "fontWeight": 500,
                                                  "letterSpacing": "0.00714em",
                                                  "lineHeight": 1.57,
                                                },
                                              },
                                              "zIndex": Object {
                                                "appBar": 1100,
                                                "drawer": 1200,
                                                "mobileStepper": 1000,
                                                "modal": 1300,
                                                "snackbar": 1400,
                                                "speedDial": 1050,
                                                "tooltip": 1500,
                                              },
                                              Symbol(mui.nested): false,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <div
                                            className="MuiBox-root css-8h7i00"
                                          >
                                            <Input
                                              inputProps={
                                                Object {
                                                  "data-testid": "nft-name-input",
                                                }
                                              }
                                              label="Name"
                                              onChange={[Function]}
                                              placeholder="Enter a name for this NFT here"
                                              value="test-image"
                                            >
                                              <ForwardRef(TextField)
                                                fullWidth={true}
                                                inputProps={
                                                  Object {
                                                    "data-testid": "nft-name-input",
                                                  }
                                                }
                                                label="Name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this NFT here"
                                                value="test-image"
                                                variant="outlined"
                                              >
                                                <MuiTextFieldRoot
                                                  className="MuiTextField-root"
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  ownerState={
                                                    Object {
                                                      "InputProps": undefined,
                                                      "autoFocus": false,
                                                      "color": "primary",
                                                      "defaultValue": undefined,
                                                      "disabled": false,
                                                      "error": false,
                                                      "fullWidth": true,
                                                      "inputProps": Object {
                                                        "data-testid": "nft-name-input",
                                                      },
                                                      "label": "Name",
                                                      "multiline": false,
                                                      "name": undefined,
                                                      "onChange": [Function],
                                                      "onKeyPress": undefined,
                                                      "placeholder": "Enter a name for this NFT here",
                                                      "required": false,
                                                      "rows": undefined,
                                                      "select": false,
                                                      "sx": undefined,
                                                      "type": undefined,
                                                      "value": "test-image",
                                                      "variant": "outlined",
                                                    }
                                                  }
                                                  required={false}
                                                  variant="outlined"
                                                >
                                                  <Noop />
                                                  <ForwardRef(FormControl)
                                                    className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    variant="outlined"
                                                  >
                                                    <MuiFormControlRoot
                                                      as="div"
                                                      className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                      ownerState={
                                                        Object {
                                                          "children": Array [
                                                            <ForwardRef(InputLabel)>
                                                              Name
                                                            </ForwardRef(InputLabel)>,
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              inputProps={
                                                                Object {
                                                                  "data-testid": "nft-name-input",
                                                                }
                                                              }
                                                              label={
                                                                <React.Fragment>
                                                                  Name
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              placeholder="Enter a name for this NFT here"
                                                              value="test-image"
                                                            />,
                                                            undefined,
                                                          ],
                                                          "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                                          "color": "primary",
                                                          "component": "div",
                                                          "disabled": false,
                                                          "error": false,
                                                          "fullWidth": true,
                                                          "hiddenLabel": false,
                                                          "margin": "none",
                                                          "onKeyPress": undefined,
                                                          "required": false,
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                                      >
                                                        <ForwardRef(InputLabel)>
                                                          <MuiInputLabelRoot
                                                            classes={
                                                              Object {
                                                                "asterisk": "",
                                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                                              }
                                                            }
                                                            data-shrink={true}
                                                            ownerState={
                                                              Object {
                                                                "children": "Name",
                                                                "disableAnimation": false,
                                                                "formControl": Object {
                                                                  "adornedStart": false,
                                                                  "color": "primary",
                                                                  "disabled": false,
                                                                  "error": false,
                                                                  "filled": true,
                                                                  "focused": false,
                                                                  "fullWidth": true,
                                                                  "hiddenLabel": false,
                                                                  "onBlur": [Function],
                                                                  "onEmpty": [Function],
                                                                  "onFilled": [Function],
                                                                  "onFocus": [Function],
                                                                  "registerEffect": [Function],
                                                                  "required": false,
                                                                  "setAdornedStart": [Function],
                                                                  "size": "medium",
                                                                  "variant": "outlined",
                                                                },
                                                                "htmlFor": undefined,
                                                                "id": undefined,
                                                                "required": false,
                                                                "shrink": true,
                                                                "size": "medium",
                                                                "variant": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <ForwardRef(FormLabel)
                                                              className="css-1bzvmy4-MuiInputLabel-root"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "",
                                                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                                                }
                                                              }
                                                              data-shrink={true}
                                                            >
                                                              <MuiFormLabelRoot
                                                                as="label"
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary MuiFormLabel-filled css-1bzvmy4-MuiInputLabel-root"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "",
                                                                    "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                ownerState={
                                                                  Object {
                                                                    "children": "Name",
                                                                    "className": "css-1bzvmy4-MuiInputLabel-root",
                                                                    "classes": Object {
                                                                      "asterisk": "",
                                                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                                                    },
                                                                    "color": "primary",
                                                                    "component": "label",
                                                                    "data-shrink": true,
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": true,
                                                                    "focused": false,
                                                                    "htmlFor": undefined,
                                                                    "id": undefined,
                                                                    "required": false,
                                                                  }
                                                                }
                                                              >
                                                                <Noop />
                                                                <label
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary MuiFormLabel-filled css-qwb5gr-MuiFormLabel-root-MuiInputLabel-root"
                                                                  data-shrink={true}
                                                                >
                                                                  Name
                                                                </label>
                                                              </MuiFormLabelRoot>
                                                            </ForwardRef(FormLabel)>
                                                          </MuiInputLabelRoot>
                                                        </ForwardRef(InputLabel)>
                                                        <ForwardRef(OutlinedInput)
                                                          autoFocus={false}
                                                          fullWidth={true}
                                                          inputProps={
                                                            Object {
                                                              "data-testid": "nft-name-input",
                                                            }
                                                          }
                                                          label={
                                                            <React.Fragment>
                                                              Name
                                                            </React.Fragment>
                                                          }
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this NFT here"
                                                          value="test-image"
                                                        >
                                                          <ForwardRef(InputBase)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "input": "MuiOutlinedInput-input",
                                                                "notchedOutline": null,
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            components={
                                                              Object {
                                                                "Input": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "__emotion_base": "input",
                                                                  "__emotion_forwardProp": [Function],
                                                                  "__emotion_real": [Circular],
                                                                  "__emotion_styles": Array [
                                                                    "label:MuiInputBase-input;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    "label:MuiOutlinedInput-input;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "defaultProps": undefined,
                                                                  "render": [Function],
                                                                  "withComponent": [Function],
                                                                },
                                                                "Root": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "__emotion_base": "div",
                                                                  "__emotion_forwardProp": [Function],
                                                                  "__emotion_real": [Circular],
                                                                  "__emotion_styles": Array [
                                                                    "label:MuiInputBase-root;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    "label:MuiOutlinedInput-root;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "defaultProps": undefined,
                                                                  "render": [Function],
                                                                  "withComponent": [Function],
                                                                },
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            inputComponent="input"
                                                            inputProps={
                                                              Object {
                                                                "data-testid": "nft-name-input",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this NFT here"
                                                            renderSuffix={[Function]}
                                                            type="text"
                                                            value="test-image"
                                                          >
                                                            <GlobalStyles
                                                              styles={
                                                                Object {
                                                                  "@keyframes mui-auto-fill": Object {
                                                                    "from": Object {
                                                                      "display": "block",
                                                                    },
                                                                  },
                                                                  "@keyframes mui-auto-fill-cancel": Object {
                                                                    "from": Object {
                                                                      "display": "block",
                                                                    },
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <GlobalStyles
                                                                defaultTheme={
                                                                  Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "unit": "px",
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1200,
                                                                        "md": 900,
                                                                        "sm": 600,
                                                                        "xl": 1536,
                                                                        "xs": 0,
                                                                      },
                                                                    },
                                                                    "components": Object {},
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "activatedOpacity": 0.12,
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "disabledOpacity": 0.38,
                                                                        "focus": "rgba(0, 0, 0, 0.12)",
                                                                        "focusOpacity": 0.12,
                                                                        "hover": "rgba(0, 0, 0, 0.04)",
                                                                        "hoverOpacity": 0.04,
                                                                        "selected": "rgba(0, 0, 0, 0.08)",
                                                                        "selectedOpacity": 0.08,
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fff",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c62828",
                                                                        "light": "#ef5350",
                                                                        "main": "#d32f2f",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#f5f5f5",
                                                                        "A200": "#eeeeee",
                                                                        "A400": "#bdbdbd",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "info": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#01579b",
                                                                        "light": "#03a9f4",
                                                                        "main": "#0288d1",
                                                                      },
                                                                      "mode": "light",
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#1565c0",
                                                                        "light": "#42a5f5",
                                                                        "main": "#1976d2",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#7b1fa2",
                                                                        "light": "#ba68c8",
                                                                        "main": "#9c27b0",
                                                                      },
                                                                      "success": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#1b5e20",
                                                                        "light": "#4caf50",
                                                                        "main": "#2e7d32",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.6)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "warning": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#e65100",
                                                                        "light": "#ff9800",
                                                                        "main": "#ed6c02",
                                                                      },
                                                                    },
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": [Function],
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.43,
                                                                      },
                                                                      "button": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightBold": 700,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1.167,
                                                                      },
                                                                      "h2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1.2,
                                                                      },
                                                                      "h3": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.167,
                                                                      },
                                                                      "h4": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.235,
                                                                      },
                                                                      "h5": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.334,
                                                                      },
                                                                      "h6": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "htmlFontSize": 16,
                                                                      "overline": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "subtitle1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "speedDial": 1050,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  }
                                                                }
                                                                styles={
                                                                  Object {
                                                                    "@keyframes mui-auto-fill": Object {
                                                                      "from": Object {
                                                                        "display": "block",
                                                                      },
                                                                    },
                                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                                      "from": Object {
                                                                        "display": "block",
                                                                      },
                                                                    },
                                                                  }
                                                                }
                                                              >
                                                                <EmotionGlobal
                                                                  styles={
                                                                    Object {
                                                                      "@keyframes mui-auto-fill": Object {
                                                                        "from": Object {
                                                                          "display": "block",
                                                                        },
                                                                      },
                                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                                        "from": Object {
                                                                          "display": "block",
                                                                        },
                                                                      },
                                                                    }
                                                                  }
                                                                />
                                                              </GlobalStyles>
                                                            </GlobalStyles>
                                                            <MuiOutlinedInputRoot
                                                              className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                                              classes={
                                                                Object {
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              ownerState={
                                                                Object {
                                                                  "aria-describedby": undefined,
                                                                  "autoComplete": undefined,
                                                                  "autoFocus": false,
                                                                  "classes": Object {
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  },
                                                                  "color": "primary",
                                                                  "components": Object {
                                                                    "Input": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": "input",
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiInputBase-input;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        "label:MuiOutlinedInput-input;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    },
                                                                    "Root": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": "div",
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiInputBase-root;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        "label:MuiOutlinedInput-root;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    },
                                                                  },
                                                                  "defaultValue": undefined,
                                                                  "disabled": false,
                                                                  "endAdornment": undefined,
                                                                  "error": false,
                                                                  "focused": false,
                                                                  "formControl": Object {
                                                                    "adornedStart": false,
                                                                    "color": "primary",
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": true,
                                                                    "focused": false,
                                                                    "fullWidth": true,
                                                                    "hiddenLabel": false,
                                                                    "onBlur": [Function],
                                                                    "onEmpty": [Function],
                                                                    "onFilled": [Function],
                                                                    "onFocus": [Function],
                                                                    "registerEffect": [Function],
                                                                    "required": false,
                                                                    "setAdornedStart": [Function],
                                                                    "size": "medium",
                                                                    "variant": "outlined",
                                                                  },
                                                                  "fullWidth": true,
                                                                  "hiddenLabel": false,
                                                                  "id": undefined,
                                                                  "inputComponent": "input",
                                                                  "inputProps": Object {
                                                                    "data-testid": "nft-name-input",
                                                                  },
                                                                  "inputRef": undefined,
                                                                  "maxRows": undefined,
                                                                  "minRows": undefined,
                                                                  "multiline": false,
                                                                  "name": undefined,
                                                                  "onBlur": undefined,
                                                                  "onChange": [Function],
                                                                  "onFocus": undefined,
                                                                  "placeholder": "Enter a name for this NFT here",
                                                                  "renderSuffix": [Function],
                                                                  "rows": undefined,
                                                                  "size": "medium",
                                                                  "startAdornment": undefined,
                                                                  "type": "text",
                                                                  "value": "test-image",
                                                                }
                                                              }
                                                            >
                                                              <Noop />
                                                              <div
                                                                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                                                onClick={[Function]}
                                                              >
                                                                <MuiOutlinedInputInput
                                                                  aria-invalid={false}
                                                                  as="input"
                                                                  autoFocus={false}
                                                                  className="MuiOutlinedInput-input MuiInputBase-input"
                                                                  data-testid="nft-name-input"
                                                                  disabled={false}
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  ownerState={
                                                                    Object {
                                                                      "aria-describedby": undefined,
                                                                      "autoComplete": undefined,
                                                                      "autoFocus": false,
                                                                      "classes": Object {
                                                                        "input": "MuiOutlinedInput-input",
                                                                        "notchedOutline": null,
                                                                        "root": "MuiOutlinedInput-root",
                                                                      },
                                                                      "color": "primary",
                                                                      "components": Object {
                                                                        "Input": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": "input",
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiInputBase-input;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            "label:MuiOutlinedInput-input;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        },
                                                                        "Root": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": "div",
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiInputBase-root;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            "label:MuiOutlinedInput-root;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        },
                                                                      },
                                                                      "defaultValue": undefined,
                                                                      "disabled": false,
                                                                      "endAdornment": undefined,
                                                                      "error": false,
                                                                      "focused": false,
                                                                      "formControl": Object {
                                                                        "adornedStart": false,
                                                                        "color": "primary",
                                                                        "disabled": false,
                                                                        "error": false,
                                                                        "filled": true,
                                                                        "focused": false,
                                                                        "fullWidth": true,
                                                                        "hiddenLabel": false,
                                                                        "onBlur": [Function],
                                                                        "onEmpty": [Function],
                                                                        "onFilled": [Function],
                                                                        "onFocus": [Function],
                                                                        "registerEffect": [Function],
                                                                        "required": false,
                                                                        "setAdornedStart": [Function],
                                                                        "size": "medium",
                                                                        "variant": "outlined",
                                                                      },
                                                                      "fullWidth": true,
                                                                      "hiddenLabel": false,
                                                                      "id": undefined,
                                                                      "inputComponent": "input",
                                                                      "inputProps": Object {
                                                                        "data-testid": "nft-name-input",
                                                                      },
                                                                      "inputRef": undefined,
                                                                      "maxRows": undefined,
                                                                      "minRows": undefined,
                                                                      "multiline": false,
                                                                      "name": undefined,
                                                                      "onBlur": undefined,
                                                                      "onChange": [Function],
                                                                      "onFocus": undefined,
                                                                      "placeholder": "Enter a name for this NFT here",
                                                                      "renderSuffix": [Function],
                                                                      "rows": undefined,
                                                                      "size": "medium",
                                                                      "startAdornment": undefined,
                                                                      "type": "text",
                                                                      "value": "test-image",
                                                                    }
                                                                  }
                                                                  placeholder="Enter a name for this NFT here"
                                                                  required={false}
                                                                  type="text"
                                                                  value="test-image"
                                                                >
                                                                  <Noop />
                                                                  <input
                                                                    aria-invalid={false}
                                                                    autoFocus={false}
                                                                    className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                                                    data-testid="nft-name-input"
                                                                    disabled={false}
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    placeholder="Enter a name for this NFT here"
                                                                    required={false}
                                                                    type="text"
                                                                    value="test-image"
                                                                  />
                                                                </MuiOutlinedInputInput>
                                                                <MuiOutlinedInputNotchedOutline
                                                                  className="MuiOutlinedInput-notchedOutline"
                                                                  label={
                                                                    <React.Fragment>
                                                                      Name
                                                                    </React.Fragment>
                                                                  }
                                                                  notched={true}
                                                                >
                                                                  <Noop />
                                                                  <NotchedOutline
                                                                    className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                    label={
                                                                      <React.Fragment>
                                                                        Name
                                                                      </React.Fragment>
                                                                    }
                                                                    notched={true}
                                                                  >
                                                                    <Styled(fieldset)
                                                                      aria-hidden={true}
                                                                      className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                      ownerState={
                                                                        Object {
                                                                          "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                          "label": <React.Fragment>
                                                                            Name
                                                                          </React.Fragment>,
                                                                          "notched": true,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Noop />
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                                      >
                                                                        <Styled(legend)
                                                                          ownerState={
                                                                            Object {
                                                                              "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                              "label": <React.Fragment>
                                                                                Name
                                                                              </React.Fragment>,
                                                                              "notched": true,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Noop />
                                                                          <legend
                                                                            className="css-1z7n62"
                                                                          >
                                                                            <span>
                                                                              Name
                                                                            </span>
                                                                          </legend>
                                                                        </Styled(legend)>
                                                                      </fieldset>
                                                                    </Styled(fieldset)>
                                                                  </NotchedOutline>
                                                                </MuiOutlinedInputNotchedOutline>
                                                              </div>
                                                            </MuiOutlinedInputRoot>
                                                          </ForwardRef(InputBase)>
                                                        </ForwardRef(OutlinedInput)>
                                                      </div>
                                                    </MuiFormControlRoot>
                                                  </ForwardRef(FormControl)>
                                                </MuiTextFieldRoot>
                                              </ForwardRef(TextField)>
                                            </Input>
                                            <Input
                                              InputProps={
                                                Object {
                                                  "endAdornment": <ForwardRef(InputAdornment)
                                                    position="end"
                                                  >
                                                    <InfoTooltip
                                                      text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                    />
                                                  </ForwardRef(InputAdornment)>,
                                                  "inputProps": Object {
                                                    "max": "1.00",
                                                    "min": "0.00",
                                                    "step": "0.01",
                                                  },
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "data-testid": "nft-rarity-input",
                                                }
                                              }
                                              label="Rarity (0 to 1)"
                                              onChange={[Function]}
                                              placeholder="0"
                                              required={true}
                                              type="number"
                                            >
                                              <ForwardRef(TextField)
                                                InputProps={
                                                  Object {
                                                    "endAdornment": <ForwardRef(InputAdornment)
                                                      position="end"
                                                    >
                                                      <InfoTooltip
                                                        text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                      />
                                                    </ForwardRef(InputAdornment)>,
                                                    "inputProps": Object {
                                                      "max": "1.00",
                                                      "min": "0.00",
                                                      "step": "0.01",
                                                    },
                                                  }
                                                }
                                                fullWidth={true}
                                                inputProps={
                                                  Object {
                                                    "data-testid": "nft-rarity-input",
                                                  }
                                                }
                                                label="Rarity (0 to 1)"
                                                onChange={[Function]}
                                                placeholder="0"
                                                required={true}
                                                type="number"
                                                variant="outlined"
                                              >
                                                <MuiTextFieldRoot
                                                  className="MuiTextField-root"
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  ownerState={
                                                    Object {
                                                      "InputProps": Object {
                                                        "endAdornment": <ForwardRef(InputAdornment)
                                                          position="end"
                                                        >
                                                          <InfoTooltip
                                                            text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                          />
                                                        </ForwardRef(InputAdornment)>,
                                                        "inputProps": Object {
                                                          "max": "1.00",
                                                          "min": "0.00",
                                                          "step": "0.01",
                                                        },
                                                      },
                                                      "autoFocus": false,
                                                      "color": "primary",
                                                      "defaultValue": undefined,
                                                      "disabled": false,
                                                      "error": false,
                                                      "fullWidth": true,
                                                      "inputProps": Object {
                                                        "data-testid": "nft-rarity-input",
                                                      },
                                                      "label": "Rarity (0 to 1)",
                                                      "multiline": false,
                                                      "name": undefined,
                                                      "onChange": [Function],
                                                      "onKeyPress": undefined,
                                                      "placeholder": "0",
                                                      "required": true,
                                                      "rows": undefined,
                                                      "select": false,
                                                      "sx": undefined,
                                                      "type": "number",
                                                      "value": undefined,
                                                      "variant": "outlined",
                                                    }
                                                  }
                                                  required={true}
                                                  variant="outlined"
                                                >
                                                  <Noop />
                                                  <ForwardRef(FormControl)
                                                    className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={true}
                                                    variant="outlined"
                                                  >
                                                    <MuiFormControlRoot
                                                      as="div"
                                                      className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                      ownerState={
                                                        Object {
                                                          "children": Array [
                                                            <ForwardRef(InputLabel)>
                                                              Rarity (0 to 1)
                                                            </ForwardRef(InputLabel)>,
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              endAdornment={
                                                                <ForwardRef(InputAdornment)
                                                                  position="end"
                                                                >
                                                                  <InfoTooltip
                                                                    text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                  />
                                                                </ForwardRef(InputAdornment)>
                                                              }
                                                              fullWidth={true}
                                                              inputProps={
                                                                Object {
                                                                  "max": "1.00",
                                                                  "min": "0.00",
                                                                  "step": "0.01",
                                                                }
                                                              }
                                                              label={
                                                                <React.Fragment>
                                                                  Rarity (0 to 1)
                                                                   *
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              placeholder="0"
                                                              type="number"
                                                            />,
                                                            undefined,
                                                          ],
                                                          "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                                          "color": "primary",
                                                          "component": "div",
                                                          "disabled": false,
                                                          "error": false,
                                                          "fullWidth": true,
                                                          "hiddenLabel": false,
                                                          "margin": "none",
                                                          "onKeyPress": undefined,
                                                          "required": true,
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                                      >
                                                        <ForwardRef(InputLabel)>
                                                          <MuiInputLabelRoot
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                              }
                                                            }
                                                            data-shrink={false}
                                                            ownerState={
                                                              Object {
                                                                "children": "Rarity (0 to 1)",
                                                                "disableAnimation": false,
                                                                "formControl": Object {
                                                                  "adornedStart": false,
                                                                  "color": "primary",
                                                                  "disabled": false,
                                                                  "error": false,
                                                                  "filled": false,
                                                                  "focused": false,
                                                                  "fullWidth": true,
                                                                  "hiddenLabel": false,
                                                                  "onBlur": [Function],
                                                                  "onEmpty": [Function],
                                                                  "onFilled": [Function],
                                                                  "onFocus": [Function],
                                                                  "registerEffect": [Function],
                                                                  "required": true,
                                                                  "setAdornedStart": [Function],
                                                                  "size": "medium",
                                                                  "variant": "outlined",
                                                                },
                                                                "htmlFor": undefined,
                                                                "id": undefined,
                                                                "required": true,
                                                                "shrink": false,
                                                                "size": "medium",
                                                                "variant": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <ForwardRef(FormLabel)
                                                              className="css-1x92c1k-MuiInputLabel-root"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                            >
                                                              <MuiFormLabelRoot
                                                                as="label"
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                                ownerState={
                                                                  Object {
                                                                    "children": "Rarity (0 to 1)",
                                                                    "className": "css-1x92c1k-MuiInputLabel-root",
                                                                    "classes": Object {
                                                                      "asterisk": "MuiInputLabel-asterisk",
                                                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                                    },
                                                                    "color": "primary",
                                                                    "component": "label",
                                                                    "data-shrink": false,
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": false,
                                                                    "focused": false,
                                                                    "htmlFor": undefined,
                                                                    "id": undefined,
                                                                    "required": true,
                                                                  }
                                                                }
                                                              >
                                                                <Noop />
                                                                <label
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                                                  data-shrink={false}
                                                                >
                                                                  Rarity (0 to 1)
                                                                  <MuiFormLabelAsterisk
                                                                    aria-hidden={true}
                                                                    className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                                                    ownerState={
                                                                      Object {
                                                                        "children": "Rarity (0 to 1)",
                                                                        "className": "css-1x92c1k-MuiInputLabel-root",
                                                                        "classes": Object {
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                                        },
                                                                        "color": "primary",
                                                                        "component": "label",
                                                                        "data-shrink": false,
                                                                        "disabled": false,
                                                                        "error": false,
                                                                        "filled": false,
                                                                        "focused": false,
                                                                        "htmlFor": undefined,
                                                                        "id": undefined,
                                                                        "required": true,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Noop />
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                                                    >
                                                                       
                                                                      *
                                                                    </span>
                                                                  </MuiFormLabelAsterisk>
                                                                </label>
                                                              </MuiFormLabelRoot>
                                                            </ForwardRef(FormLabel)>
                                                          </MuiInputLabelRoot>
                                                        </ForwardRef(InputLabel)>
                                                        <ForwardRef(OutlinedInput)
                                                          autoFocus={false}
                                                          endAdornment={
                                                            <ForwardRef(InputAdornment)
                                                              position="end"
                                                            >
                                                              <InfoTooltip
                                                                text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                              />
                                                            </ForwardRef(InputAdornment)>
                                                          }
                                                          fullWidth={true}
                                                          inputProps={
                                                            Object {
                                                              "max": "1.00",
                                                              "min": "0.00",
                                                              "step": "0.01",
                                                            }
                                                          }
                                                          label={
                                                            <React.Fragment>
                                                              Rarity (0 to 1)
                                                               *
                                                            </React.Fragment>
                                                          }
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="0"
                                                          type="number"
                                                        >
                                                          <ForwardRef(InputBase)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "input": "MuiOutlinedInput-input",
                                                                "notchedOutline": null,
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            components={
                                                              Object {
                                                                "Input": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "__emotion_base": "input",
                                                                  "__emotion_forwardProp": [Function],
                                                                  "__emotion_real": [Circular],
                                                                  "__emotion_styles": Array [
                                                                    "label:MuiInputBase-input;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    "label:MuiOutlinedInput-input;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "defaultProps": undefined,
                                                                  "render": [Function],
                                                                  "withComponent": [Function],
                                                                },
                                                                "Root": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "__emotion_base": "div",
                                                                  "__emotion_forwardProp": [Function],
                                                                  "__emotion_real": [Circular],
                                                                  "__emotion_styles": Array [
                                                                    "label:MuiInputBase-root;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    "label:MuiOutlinedInput-root;",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "defaultProps": undefined,
                                                                  "render": [Function],
                                                                  "withComponent": [Function],
                                                                },
                                                              }
                                                            }
                                                            endAdornment={
                                                              <ForwardRef(InputAdornment)
                                                                position="end"
                                                              >
                                                                <InfoTooltip
                                                                  text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                />
                                                              </ForwardRef(InputAdornment)>
                                                            }
                                                            fullWidth={true}
                                                            inputComponent="input"
                                                            inputProps={
                                                              Object {
                                                                "max": "1.00",
                                                                "min": "0.00",
                                                                "step": "0.01",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            placeholder="0"
                                                            renderSuffix={[Function]}
                                                            type="number"
                                                          >
                                                            <GlobalStyles
                                                              styles={
                                                                Object {
                                                                  "@keyframes mui-auto-fill": Object {
                                                                    "from": Object {
                                                                      "display": "block",
                                                                    },
                                                                  },
                                                                  "@keyframes mui-auto-fill-cancel": Object {
                                                                    "from": Object {
                                                                      "display": "block",
                                                                    },
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <GlobalStyles
                                                                defaultTheme={
                                                                  Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "unit": "px",
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1200,
                                                                        "md": 900,
                                                                        "sm": 600,
                                                                        "xl": 1536,
                                                                        "xs": 0,
                                                                      },
                                                                    },
                                                                    "components": Object {},
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "activatedOpacity": 0.12,
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "disabledOpacity": 0.38,
                                                                        "focus": "rgba(0, 0, 0, 0.12)",
                                                                        "focusOpacity": 0.12,
                                                                        "hover": "rgba(0, 0, 0, 0.04)",
                                                                        "hoverOpacity": 0.04,
                                                                        "selected": "rgba(0, 0, 0, 0.08)",
                                                                        "selectedOpacity": 0.08,
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fff",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c62828",
                                                                        "light": "#ef5350",
                                                                        "main": "#d32f2f",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#f5f5f5",
                                                                        "A200": "#eeeeee",
                                                                        "A400": "#bdbdbd",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "info": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#01579b",
                                                                        "light": "#03a9f4",
                                                                        "main": "#0288d1",
                                                                      },
                                                                      "mode": "light",
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#1565c0",
                                                                        "light": "#42a5f5",
                                                                        "main": "#1976d2",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#7b1fa2",
                                                                        "light": "#ba68c8",
                                                                        "main": "#9c27b0",
                                                                      },
                                                                      "success": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#1b5e20",
                                                                        "light": "#4caf50",
                                                                        "main": "#2e7d32",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.6)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "warning": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#e65100",
                                                                        "light": "#ff9800",
                                                                        "main": "#ed6c02",
                                                                      },
                                                                    },
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": [Function],
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.43,
                                                                      },
                                                                      "button": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightBold": 700,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1.167,
                                                                      },
                                                                      "h2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1.2,
                                                                      },
                                                                      "h3": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.167,
                                                                      },
                                                                      "h4": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.235,
                                                                      },
                                                                      "h5": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.334,
                                                                      },
                                                                      "h6": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "htmlFontSize": 16,
                                                                      "overline": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "subtitle1": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "speedDial": 1050,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  }
                                                                }
                                                                styles={
                                                                  Object {
                                                                    "@keyframes mui-auto-fill": Object {
                                                                      "from": Object {
                                                                        "display": "block",
                                                                      },
                                                                    },
                                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                                      "from": Object {
                                                                        "display": "block",
                                                                      },
                                                                    },
                                                                  }
                                                                }
                                                              >
                                                                <EmotionGlobal
                                                                  styles={
                                                                    Object {
                                                                      "@keyframes mui-auto-fill": Object {
                                                                        "from": Object {
                                                                          "display": "block",
                                                                        },
                                                                      },
                                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                                        "from": Object {
                                                                          "display": "block",
                                                                        },
                                                                      },
                                                                    }
                                                                  }
                                                                />
                                                              </GlobalStyles>
                                                            </GlobalStyles>
                                                            <MuiOutlinedInputRoot
                                                              className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd"
                                                              classes={
                                                                Object {
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              ownerState={
                                                                Object {
                                                                  "aria-describedby": undefined,
                                                                  "autoComplete": undefined,
                                                                  "autoFocus": false,
                                                                  "classes": Object {
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  },
                                                                  "color": "primary",
                                                                  "components": Object {
                                                                    "Input": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": "input",
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiInputBase-input;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        "label:MuiOutlinedInput-input;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    },
                                                                    "Root": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": "div",
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiInputBase-root;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        "label:MuiOutlinedInput-root;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    },
                                                                  },
                                                                  "defaultValue": undefined,
                                                                  "disabled": false,
                                                                  "endAdornment": <ForwardRef(InputAdornment)
                                                                    position="end"
                                                                  >
                                                                    <InfoTooltip
                                                                      text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                    />
                                                                  </ForwardRef(InputAdornment)>,
                                                                  "error": false,
                                                                  "focused": false,
                                                                  "formControl": Object {
                                                                    "adornedStart": false,
                                                                    "color": "primary",
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": false,
                                                                    "focused": false,
                                                                    "fullWidth": true,
                                                                    "hiddenLabel": false,
                                                                    "onBlur": [Function],
                                                                    "onEmpty": [Function],
                                                                    "onFilled": [Function],
                                                                    "onFocus": [Function],
                                                                    "registerEffect": [Function],
                                                                    "required": true,
                                                                    "setAdornedStart": [Function],
                                                                    "size": "medium",
                                                                    "variant": "outlined",
                                                                  },
                                                                  "fullWidth": true,
                                                                  "hiddenLabel": false,
                                                                  "id": undefined,
                                                                  "inputComponent": "input",
                                                                  "inputProps": Object {
                                                                    "max": "1.00",
                                                                    "min": "0.00",
                                                                    "step": "0.01",
                                                                  },
                                                                  "inputRef": undefined,
                                                                  "maxRows": undefined,
                                                                  "minRows": undefined,
                                                                  "multiline": false,
                                                                  "name": undefined,
                                                                  "onBlur": undefined,
                                                                  "onChange": [Function],
                                                                  "onFocus": undefined,
                                                                  "placeholder": "0",
                                                                  "renderSuffix": [Function],
                                                                  "rows": undefined,
                                                                  "size": "medium",
                                                                  "startAdornment": undefined,
                                                                  "type": "number",
                                                                  "value": undefined,
                                                                }
                                                              }
                                                            >
                                                              <Noop />
                                                              <div
                                                                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd css-1gvv60k-MuiInputBase-root-MuiOutlinedInput-root"
                                                                onClick={[Function]}
                                                              >
                                                                <MuiOutlinedInputInput
                                                                  aria-invalid={false}
                                                                  as="input"
                                                                  autoFocus={false}
                                                                  className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                                                                  disabled={false}
                                                                  max="1.00"
                                                                  min="0.00"
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  ownerState={
                                                                    Object {
                                                                      "aria-describedby": undefined,
                                                                      "autoComplete": undefined,
                                                                      "autoFocus": false,
                                                                      "classes": Object {
                                                                        "input": "MuiOutlinedInput-input",
                                                                        "notchedOutline": null,
                                                                        "root": "MuiOutlinedInput-root",
                                                                      },
                                                                      "color": "primary",
                                                                      "components": Object {
                                                                        "Input": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": "input",
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiInputBase-input;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            "label:MuiOutlinedInput-input;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        },
                                                                        "Root": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": "div",
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiInputBase-root;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            "label:MuiOutlinedInput-root;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        },
                                                                      },
                                                                      "defaultValue": undefined,
                                                                      "disabled": false,
                                                                      "endAdornment": <ForwardRef(InputAdornment)
                                                                        position="end"
                                                                      >
                                                                        <InfoTooltip
                                                                          text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                        />
                                                                      </ForwardRef(InputAdornment)>,
                                                                      "error": false,
                                                                      "focused": false,
                                                                      "formControl": Object {
                                                                        "adornedStart": false,
                                                                        "color": "primary",
                                                                        "disabled": false,
                                                                        "error": false,
                                                                        "filled": false,
                                                                        "focused": false,
                                                                        "fullWidth": true,
                                                                        "hiddenLabel": false,
                                                                        "onBlur": [Function],
                                                                        "onEmpty": [Function],
                                                                        "onFilled": [Function],
                                                                        "onFocus": [Function],
                                                                        "registerEffect": [Function],
                                                                        "required": true,
                                                                        "setAdornedStart": [Function],
                                                                        "size": "medium",
                                                                        "variant": "outlined",
                                                                      },
                                                                      "fullWidth": true,
                                                                      "hiddenLabel": false,
                                                                      "id": undefined,
                                                                      "inputComponent": "input",
                                                                      "inputProps": Object {
                                                                        "max": "1.00",
                                                                        "min": "0.00",
                                                                        "step": "0.01",
                                                                      },
                                                                      "inputRef": undefined,
                                                                      "maxRows": undefined,
                                                                      "minRows": undefined,
                                                                      "multiline": false,
                                                                      "name": undefined,
                                                                      "onBlur": undefined,
                                                                      "onChange": [Function],
                                                                      "onFocus": undefined,
                                                                      "placeholder": "0",
                                                                      "renderSuffix": [Function],
                                                                      "rows": undefined,
                                                                      "size": "medium",
                                                                      "startAdornment": undefined,
                                                                      "type": "number",
                                                                      "value": undefined,
                                                                    }
                                                                  }
                                                                  placeholder="0"
                                                                  required={true}
                                                                  step="0.01"
                                                                  type="number"
                                                                >
                                                                  <Noop />
                                                                  <input
                                                                    aria-invalid={false}
                                                                    autoFocus={false}
                                                                    className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                                                    disabled={false}
                                                                    max="1.00"
                                                                    min="0.00"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    placeholder="0"
                                                                    required={true}
                                                                    step="0.01"
                                                                    type="number"
                                                                  />
                                                                </MuiOutlinedInputInput>
                                                                <ForwardRef(InputAdornment)
                                                                  position="end"
                                                                >
                                                                  <MuiInputAdornmentRoot
                                                                    as="div"
                                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                                                    ownerState={
                                                                      Object {
                                                                        "children": <InfoTooltip
                                                                          text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                        />,
                                                                        "disablePointerEvents": false,
                                                                        "hiddenLabel": false,
                                                                        "position": "end",
                                                                        "size": "medium",
                                                                        "variant": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Noop />
                                                                    <div
                                                                      className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                                                    >
                                                                      <InfoTooltip
                                                                        text="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                      >
                                                                        <ForwardRef(Tooltip)
                                                                          arrow={true}
                                                                          placement="top"
                                                                          title="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                        >
                                                                          <ForwardRef(InfoIcon)
                                                                            aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                            aria-labelledby={null}
                                                                            className=""
                                                                            color="primary"
                                                                            data-mui-internal-clone-element={true}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseOver={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchStart={[Function]}
                                                                          >
                                                                            <ForwardRef(SvgIcon)
                                                                              aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                              aria-labelledby={null}
                                                                              className=""
                                                                              color="primary"
                                                                              data-mui-internal-clone-element={true}
                                                                              data-testid="InfoIcon"
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseOver={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchStart={[Function]}
                                                                            >
                                                                              <MuiSvgIconRoot
                                                                                aria-hidden={true}
                                                                                aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                                aria-labelledby={null}
                                                                                as="svg"
                                                                                className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeMedium"
                                                                                data-mui-internal-clone-element={true}
                                                                                data-testid="InfoIcon"
                                                                                focusable="false"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseOver={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                ownerState={
                                                                                  Object {
                                                                                    "aria-label": "Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer.",
                                                                                    "aria-labelledby": null,
                                                                                    "children": <path
                                                                                      d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                                                                                    />,
                                                                                    "className": "",
                                                                                    "color": "primary",
                                                                                    "component": "svg",
                                                                                    "data-mui-internal-clone-element": true,
                                                                                    "data-testid": "InfoIcon",
                                                                                    "fontSize": "medium",
                                                                                    "onBlur": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "onMouseLeave": [Function],
                                                                                    "onMouseOver": [Function],
                                                                                    "onTouchEnd": [Function],
                                                                                    "onTouchStart": [Function],
                                                                                    "viewBox": "0 0 24 24",
                                                                                  }
                                                                                }
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <Noop />
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                                  aria-labelledby={null}
                                                                                  className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeMedium css-3b6oxn-MuiSvgIcon-root"
                                                                                  data-mui-internal-clone-element={true}
                                                                                  data-testid="InfoIcon"
                                                                                  focusable="false"
                                                                                  onBlur={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseOver={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                                                                                  />
                                                                                </svg>
                                                                              </MuiSvgIconRoot>
                                                                            </ForwardRef(SvgIcon)>
                                                                          </ForwardRef(InfoIcon)>
                                                                          <MuiTooltipPopper
                                                                            anchorEl={
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                                class="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeMedium css-3b6oxn-MuiSvgIcon-root"
                                                                                data-mui-internal-clone-element="true"
                                                                                data-testid="InfoIcon"
                                                                                focusable="false"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                                                                                />
                                                                              </svg>
                                                                            }
                                                                            as={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "propTypes": Object {
                                                                                  "anchorEl": [Function],
                                                                                  "children": [Function],
                                                                                  "container": [Function],
                                                                                  "disablePortal": [Function],
                                                                                  "keepMounted": [Function],
                                                                                  "modifiers": [Function],
                                                                                  "open": [Function],
                                                                                  "placement": [Function],
                                                                                  "popperOptions": [Function],
                                                                                  "popperRef": [Function],
                                                                                  "transition": [Function],
                                                                                },
                                                                                "render": [Function],
                                                                              }
                                                                            }
                                                                            className="MuiTooltip-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                                                                            id="mui-572045458"
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseOver={[Function]}
                                                                            open={false}
                                                                            ownerState={
                                                                              Object {
                                                                                "PopperComponentProp": undefined,
                                                                                "arrow": true,
                                                                                "children": <Memo
                                                                                  color="primary"
                                                                                />,
                                                                                "disableInteractive": false,
                                                                                "isRtl": false,
                                                                                "placement": "top",
                                                                                "title": "Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer.",
                                                                                "touch": false,
                                                                              }
                                                                            }
                                                                            placement="top"
                                                                            popperOptions={
                                                                              Object {
                                                                                "modifiers": Array [
                                                                                  Object {
                                                                                    "enabled": false,
                                                                                    "name": "arrow",
                                                                                    "options": Object {
                                                                                      "element": null,
                                                                                      "padding": 4,
                                                                                    },
                                                                                  },
                                                                                ],
                                                                              }
                                                                            }
                                                                            popperRef={
                                                                              Object {
                                                                                "current": undefined,
                                                                              }
                                                                            }
                                                                            transition={true}
                                                                          >
                                                                            <Noop />
                                                                            <ForwardRef(Popper)
                                                                              anchorEl={
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                                  class="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeMedium css-3b6oxn-MuiSvgIcon-root"
                                                                                  data-mui-internal-clone-element="true"
                                                                                  data-testid="InfoIcon"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                                                                                  />
                                                                                </svg>
                                                                              }
                                                                              className="MuiTooltip-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow css-pnutvq-MuiTooltip-popper"
                                                                              id="mui-572045458"
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseOver={[Function]}
                                                                              open={false}
                                                                              placement="top"
                                                                              popperOptions={
                                                                                Object {
                                                                                  "modifiers": Array [
                                                                                    Object {
                                                                                      "enabled": false,
                                                                                      "name": "arrow",
                                                                                      "options": Object {
                                                                                        "element": null,
                                                                                        "padding": 4,
                                                                                      },
                                                                                    },
                                                                                  ],
                                                                                }
                                                                              }
                                                                              popperRef={
                                                                                Object {
                                                                                  "current": undefined,
                                                                                }
                                                                              }
                                                                              transition={true}
                                                                            >
                                                                              <ForwardRef(PopperUnstyled)
                                                                                anchorEl={
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    aria-label="Add an associated likelihood ranging from 0 (Impossible) to 1 (Guaranteed)  for the chance that this image is randomly minted for this layer."
                                                                                    class="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeMedium css-3b6oxn-MuiSvgIcon-root"
                                                                                    data-mui-internal-clone-element="true"
                                                                                    data-testid="InfoIcon"
                                                                                    focusable="false"
                                                                                    viewBox="0 0 24 24"
                                                                                  >
                                                                                    <path
                                                                                      d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                                                                                    />
                                                                                  </svg>
                                                                                }
                                                                                className="MuiTooltip-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow css-pnutvq-MuiTooltip-popper"
                                                                                direction="ltr"
                                                                                id="mui-572045458"
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseOver={[Function]}
                                                                                open={false}
                                                                                placement="top"
                                                                                popperOptions={
                                                                                  Object {
                                                                                    "modifiers": Array [
                                                                                      Object {
                                                                                        "enabled": false,
                                                                                        "name": "arrow",
                                                                                        "options": Object {
                                                                                          "element": null,
                                                                                          "padding": 4,
                                                                                        },
                                                                                      },
                                                                                    ],
                                                                                  }
                                                                                }
                                                                                popperRef={
                                                                                  Object {
                                                                                    "current": undefined,
                                                                                  }
                                                                                }
                                                                                transition={true}
                                                                              />
                                                                            </ForwardRef(Popper)>
                                                                          </MuiTooltipPopper>
                                                                        </ForwardRef(Tooltip)>
                                                                      </InfoTooltip>
                                                                    </div>
                                                                  </MuiInputAdornmentRoot>
                                                                </ForwardRef(InputAdornment)>
                                                                <MuiOutlinedInputNotchedOutline
                                                                  className="MuiOutlinedInput-notchedOutline"
                                                                  label={
                                                                    <React.Fragment>
                                                                      Rarity (0 to 1)
                                                                       *
                                                                    </React.Fragment>
                                                                  }
                                                                  notched={false}
                                                                >
                                                                  <Noop />
                                                                  <NotchedOutline
                                                                    className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                    label={
                                                                      <React.Fragment>
                                                                        Rarity (0 to 1)
                                                                         *
                                                                      </React.Fragment>
                                                                    }
                                                                    notched={false}
                                                                  >
                                                                    <Styled(fieldset)
                                                                      aria-hidden={true}
                                                                      className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                      ownerState={
                                                                        Object {
                                                                          "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                          "label": <React.Fragment>
                                                                            Rarity (0 to 1)
                                                                             *
                                                                          </React.Fragment>,
                                                                          "notched": false,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Noop />
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                                      >
                                                                        <Styled(legend)
                                                                          ownerState={
                                                                            Object {
                                                                              "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                              "label": <React.Fragment>
                                                                                Rarity (0 to 1)
                                                                                 *
                                                                              </React.Fragment>,
                                                                              "notched": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Noop />
                                                                          <legend
                                                                            className="css-173wfxe"
                                                                          >
                                                                            <span>
                                                                              Rarity (0 to 1)
                                                                               *
                                                                            </span>
                                                                          </legend>
                                                                        </Styled(legend)>
                                                                      </fieldset>
                                                                    </Styled(fieldset)>
                                                                  </NotchedOutline>
                                                                </MuiOutlinedInputNotchedOutline>
                                                              </div>
                                                            </MuiOutlinedInputRoot>
                                                          </ForwardRef(InputBase)>
                                                        </ForwardRef(OutlinedInput)>
                                                      </div>
                                                    </MuiFormControlRoot>
                                                  </ForwardRef(FormControl)>
                                                </MuiTextFieldRoot>
                                              </ForwardRef(TextField)>
                                            </Input>
                                            <ForwardRef(IconButton)
                                              data-testid="delete-icon"
                                              disabled={true}
                                              onClick={[Function]}
                                            >
                                              <MuiIconButtonRoot
                                                centerRipple={true}
                                                className="MuiIconButton-root Mui-disabled MuiIconButton-sizeMedium"
                                                data-testid="delete-icon"
                                                disabled={true}
                                                focusRipple={true}
                                                onClick={[Function]}
                                                ownerState={
                                                  Object {
                                                    "children": <Memo
                                                      color="disabled"
                                                      fontSize="large"
                                                    />,
                                                    "color": "default",
                                                    "data-testid": "delete-icon",
                                                    "disableFocusRipple": false,
                                                    "disabled": true,
                                                    "edge": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root Mui-disabled MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root"
                                                  data-testid="delete-icon"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <MuiButtonBaseRoot
                                                    as="button"
                                                    className="MuiButtonBase-root Mui-disabled MuiIconButton-root Mui-disabled MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root"
                                                    data-testid="delete-icon"
                                                    disabled={true}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onContextMenu={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    ownerState={
                                                      Object {
                                                        "centerRipple": true,
                                                        "children": <Memo
                                                          color="disabled"
                                                          fontSize="large"
                                                        />,
                                                        "className": "MuiIconButton-root Mui-disabled MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root",
                                                        "component": "button",
                                                        "data-testid": "delete-icon",
                                                        "disableRipple": false,
                                                        "disableTouchRipple": false,
                                                        "disabled": true,
                                                        "focusRipple": true,
                                                        "focusVisible": false,
                                                        "onClick": [Function],
                                                        "tabIndex": 0,
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="button"
                                                  >
                                                    <Noop />
                                                    <button
                                                      className="MuiButtonBase-root Mui-disabled MuiIconButton-root Mui-disabled MuiIconButton-sizeMedium css-78trlr-MuiButtonBase-root-MuiIconButton-root"
                                                      data-testid="delete-icon"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onContextMenu={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      type="button"
                                                    >
                                                      <ForwardRef(DeleteIcon)
                                                        color="disabled"
                                                        fontSize="large"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          color="disabled"
                                                          data-testid="DeleteIcon"
                                                          fontSize="large"
                                                        >
                                                          <MuiSvgIconRoot
                                                            aria-hidden={true}
                                                            as="svg"
                                                            className="MuiSvgIcon-root MuiSvgIcon-colorDisabled MuiSvgIcon-fontSizeLarge"
                                                            data-testid="DeleteIcon"
                                                            focusable="false"
                                                            ownerState={
                                                              Object {
                                                                "children": <path
                                                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                                />,
                                                                "color": "disabled",
                                                                "component": "svg",
                                                                "data-testid": "DeleteIcon",
                                                                "fontSize": "large",
                                                                "viewBox": "0 0 24 24",
                                                              }
                                                            }
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <Noop />
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root MuiSvgIcon-colorDisabled MuiSvgIcon-fontSizeLarge css-98g8xu-MuiSvgIcon-root"
                                                              data-testid="DeleteIcon"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                              />
                                                            </svg>
                                                          </MuiSvgIconRoot>
                                                        </ForwardRef(SvgIcon)>
                                                      </ForwardRef(DeleteIcon)>
                                                    </button>
                                                  </MuiButtonBaseRoot>
                                                </ForwardRef(ButtonBase)>
                                              </MuiIconButtonRoot>
                                            </ForwardRef(IconButton)>
                                          </div>
                                        </Styled(div)>
                                      </ForwardRef(Box)>
                                      <Input
                                        inputProps={
                                          Object {
                                            "data-testid": "nft-description-input",
                                          }
                                        }
                                        label="Description"
                                        onChange={[Function]}
                                        placeholder="Enter a description for this image"
                                      >
                                        <ForwardRef(TextField)
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "nft-description-input",
                                            }
                                          }
                                          label="Description"
                                          onChange={[Function]}
                                          placeholder="Enter a description for this image"
                                          variant="outlined"
                                        >
                                          <MuiTextFieldRoot
                                            className="MuiTextField-root"
                                            color="primary"
                                            disabled={false}
                                            error={false}
                                            fullWidth={true}
                                            ownerState={
                                              Object {
                                                "InputProps": undefined,
                                                "autoFocus": false,
                                                "color": "primary",
                                                "defaultValue": undefined,
                                                "disabled": false,
                                                "error": false,
                                                "fullWidth": true,
                                                "inputProps": Object {
                                                  "data-testid": "nft-description-input",
                                                },
                                                "label": "Description",
                                                "multiline": false,
                                                "name": undefined,
                                                "onChange": [Function],
                                                "onKeyPress": undefined,
                                                "placeholder": "Enter a description for this image",
                                                "required": false,
                                                "rows": undefined,
                                                "select": false,
                                                "sx": undefined,
                                                "type": undefined,
                                                "value": undefined,
                                                "variant": "outlined",
                                              }
                                            }
                                            required={false}
                                            variant="outlined"
                                          >
                                            <Noop />
                                            <ForwardRef(FormControl)
                                              className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                              color="primary"
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              required={false}
                                              variant="outlined"
                                            >
                                              <MuiFormControlRoot
                                                as="div"
                                                className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                ownerState={
                                                  Object {
                                                    "children": Array [
                                                      <ForwardRef(InputLabel)>
                                                        Description
                                                      </ForwardRef(InputLabel)>,
                                                      <ForwardRef(OutlinedInput)
                                                        autoFocus={false}
                                                        fullWidth={true}
                                                        inputProps={
                                                          Object {
                                                            "data-testid": "nft-description-input",
                                                          }
                                                        }
                                                        label={
                                                          <React.Fragment>
                                                            Description
                                                          </React.Fragment>
                                                        }
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        placeholder="Enter a description for this image"
                                                      />,
                                                      undefined,
                                                    ],
                                                    "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                                    "color": "primary",
                                                    "component": "div",
                                                    "disabled": false,
                                                    "error": false,
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "margin": "none",
                                                    "onKeyPress": undefined,
                                                    "required": false,
                                                    "size": "medium",
                                                    "variant": "outlined",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                                >
                                                  <ForwardRef(InputLabel)>
                                                    <MuiInputLabelRoot
                                                      classes={
                                                        Object {
                                                          "asterisk": "",
                                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                        }
                                                      }
                                                      data-shrink={false}
                                                      ownerState={
                                                        Object {
                                                          "children": "Description",
                                                          "disableAnimation": false,
                                                          "formControl": Object {
                                                            "adornedStart": false,
                                                            "color": "primary",
                                                            "disabled": false,
                                                            "error": false,
                                                            "filled": false,
                                                            "focused": false,
                                                            "fullWidth": true,
                                                            "hiddenLabel": false,
                                                            "onBlur": [Function],
                                                            "onEmpty": [Function],
                                                            "onFilled": [Function],
                                                            "onFocus": [Function],
                                                            "registerEffect": [Function],
                                                            "required": false,
                                                            "setAdornedStart": [Function],
                                                            "size": "medium",
                                                            "variant": "outlined",
                                                          },
                                                          "htmlFor": undefined,
                                                          "id": undefined,
                                                          "required": false,
                                                          "shrink": false,
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <ForwardRef(FormLabel)
                                                        className="css-1x92c1k-MuiInputLabel-root"
                                                        classes={
                                                          Object {
                                                            "asterisk": "",
                                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                          }
                                                        }
                                                        data-shrink={false}
                                                      >
                                                        <MuiFormLabelRoot
                                                          as="label"
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                                                          classes={
                                                            Object {
                                                              "asterisk": "",
                                                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                            }
                                                          }
                                                          data-shrink={false}
                                                          ownerState={
                                                            Object {
                                                              "children": "Description",
                                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                                              "classes": Object {
                                                                "asterisk": "",
                                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                              },
                                                              "color": "primary",
                                                              "component": "label",
                                                              "data-shrink": false,
                                                              "disabled": false,
                                                              "error": false,
                                                              "filled": false,
                                                              "focused": false,
                                                              "htmlFor": undefined,
                                                              "id": undefined,
                                                              "required": false,
                                                            }
                                                          }
                                                        >
                                                          <Noop />
                                                          <label
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                                            data-shrink={false}
                                                          >
                                                            Description
                                                          </label>
                                                        </MuiFormLabelRoot>
                                                      </ForwardRef(FormLabel)>
                                                    </MuiInputLabelRoot>
                                                  </ForwardRef(InputLabel)>
                                                  <ForwardRef(OutlinedInput)
                                                    autoFocus={false}
                                                    fullWidth={true}
                                                    inputProps={
                                                      Object {
                                                        "data-testid": "nft-description-input",
                                                      }
                                                    }
                                                    label={
                                                      <React.Fragment>
                                                        Description
                                                      </React.Fragment>
                                                    }
                                                    multiline={false}
                                                    onChange={[Function]}
                                                    placeholder="Enter a description for this image"
                                                  >
                                                    <ForwardRef(InputBase)
                                                      autoFocus={false}
                                                      classes={
                                                        Object {
                                                          "input": "MuiOutlinedInput-input",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        }
                                                      }
                                                      components={
                                                        Object {
                                                          "Input": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "input",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                          "Root": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "div",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                        }
                                                      }
                                                      fullWidth={true}
                                                      inputComponent="input"
                                                      inputProps={
                                                        Object {
                                                          "data-testid": "nft-description-input",
                                                        }
                                                      }
                                                      multiline={false}
                                                      onChange={[Function]}
                                                      placeholder="Enter a description for this image"
                                                      renderSuffix={[Function]}
                                                      type="text"
                                                    >
                                                      <GlobalStyles
                                                        styles={
                                                          Object {
                                                            "@keyframes mui-auto-fill": Object {
                                                              "from": Object {
                                                                "display": "block",
                                                              },
                                                            },
                                                            "@keyframes mui-auto-fill-cancel": Object {
                                                              "from": Object {
                                                                "display": "block",
                                                              },
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <GlobalStyles
                                                          defaultTheme={
                                                            Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "unit": "px",
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1200,
                                                                  "md": 900,
                                                                  "sm": 600,
                                                                  "xl": 1536,
                                                                  "xs": 0,
                                                                },
                                                              },
                                                              "components": Object {},
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "activatedOpacity": 0.12,
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "disabledOpacity": 0.38,
                                                                  "focus": "rgba(0, 0, 0, 0.12)",
                                                                  "focusOpacity": 0.12,
                                                                  "hover": "rgba(0, 0, 0, 0.04)",
                                                                  "hoverOpacity": 0.04,
                                                                  "selected": "rgba(0, 0, 0, 0.08)",
                                                                  "selectedOpacity": 0.08,
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fff",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c62828",
                                                                  "light": "#ef5350",
                                                                  "main": "#d32f2f",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#f5f5f5",
                                                                  "A200": "#eeeeee",
                                                                  "A400": "#bdbdbd",
                                                                  "A700": "#616161",
                                                                },
                                                                "info": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#01579b",
                                                                  "light": "#03a9f4",
                                                                  "main": "#0288d1",
                                                                },
                                                                "mode": "light",
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#1565c0",
                                                                  "light": "#42a5f5",
                                                                  "main": "#1976d2",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#7b1fa2",
                                                                  "light": "#ba68c8",
                                                                  "main": "#9c27b0",
                                                                },
                                                                "success": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#1b5e20",
                                                                  "light": "#4caf50",
                                                                  "main": "#2e7d32",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "warning": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#e65100",
                                                                  "light": "#ff9800",
                                                                  "main": "#ed6c02",
                                                                },
                                                              },
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            }
                                                          }
                                                          styles={
                                                            Object {
                                                              "@keyframes mui-auto-fill": Object {
                                                                "from": Object {
                                                                  "display": "block",
                                                                },
                                                              },
                                                              "@keyframes mui-auto-fill-cancel": Object {
                                                                "from": Object {
                                                                  "display": "block",
                                                                },
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionGlobal
                                                            styles={
                                                              Object {
                                                                "@keyframes mui-auto-fill": Object {
                                                                  "from": Object {
                                                                    "display": "block",
                                                                  },
                                                                },
                                                                "@keyframes mui-auto-fill-cancel": Object {
                                                                  "from": Object {
                                                                    "display": "block",
                                                                  },
                                                                },
                                                              }
                                                            }
                                                          />
                                                        </GlobalStyles>
                                                      </GlobalStyles>
                                                      <MuiOutlinedInputRoot
                                                        className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                                        classes={
                                                          Object {
                                                            "input": "MuiOutlinedInput-input",
                                                            "notchedOutline": null,
                                                            "root": "MuiOutlinedInput-root",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        ownerState={
                                                          Object {
                                                            "aria-describedby": undefined,
                                                            "autoComplete": undefined,
                                                            "autoFocus": false,
                                                            "classes": Object {
                                                              "input": "MuiOutlinedInput-input",
                                                              "notchedOutline": null,
                                                              "root": "MuiOutlinedInput-root",
                                                            },
                                                            "color": "primary",
                                                            "components": Object {
                                                              "Input": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "__emotion_base": "input",
                                                                "__emotion_forwardProp": [Function],
                                                                "__emotion_real": [Circular],
                                                                "__emotion_styles": Array [
                                                                  "label:MuiInputBase-input;",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  "label:MuiOutlinedInput-input;",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "defaultProps": undefined,
                                                                "render": [Function],
                                                                "withComponent": [Function],
                                                              },
                                                              "Root": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "__emotion_base": "div",
                                                                "__emotion_forwardProp": [Function],
                                                                "__emotion_real": [Circular],
                                                                "__emotion_styles": Array [
                                                                  "label:MuiInputBase-root;",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  "label:MuiOutlinedInput-root;",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "defaultProps": undefined,
                                                                "render": [Function],
                                                                "withComponent": [Function],
                                                              },
                                                            },
                                                            "defaultValue": undefined,
                                                            "disabled": false,
                                                            "endAdornment": undefined,
                                                            "error": false,
                                                            "focused": false,
                                                            "formControl": Object {
                                                              "adornedStart": false,
                                                              "color": "primary",
                                                              "disabled": false,
                                                              "error": false,
                                                              "filled": false,
                                                              "focused": false,
                                                              "fullWidth": true,
                                                              "hiddenLabel": false,
                                                              "onBlur": [Function],
                                                              "onEmpty": [Function],
                                                              "onFilled": [Function],
                                                              "onFocus": [Function],
                                                              "registerEffect": [Function],
                                                              "required": false,
                                                              "setAdornedStart": [Function],
                                                              "size": "medium",
                                                              "variant": "outlined",
                                                            },
                                                            "fullWidth": true,
                                                            "hiddenLabel": false,
                                                            "id": undefined,
                                                            "inputComponent": "input",
                                                            "inputProps": Object {
                                                              "data-testid": "nft-description-input",
                                                            },
                                                            "inputRef": undefined,
                                                            "maxRows": undefined,
                                                            "minRows": undefined,
                                                            "multiline": false,
                                                            "name": undefined,
                                                            "onBlur": undefined,
                                                            "onChange": [Function],
                                                            "onFocus": undefined,
                                                            "placeholder": "Enter a description for this image",
                                                            "renderSuffix": [Function],
                                                            "rows": undefined,
                                                            "size": "medium",
                                                            "startAdornment": undefined,
                                                            "type": "text",
                                                            "value": undefined,
                                                          }
                                                        }
                                                      >
                                                        <Noop />
                                                        <div
                                                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                                          onClick={[Function]}
                                                        >
                                                          <MuiOutlinedInputInput
                                                            aria-invalid={false}
                                                            as="input"
                                                            autoFocus={false}
                                                            className="MuiOutlinedInput-input MuiInputBase-input"
                                                            data-testid="nft-description-input"
                                                            disabled={false}
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            ownerState={
                                                              Object {
                                                                "aria-describedby": undefined,
                                                                "autoComplete": undefined,
                                                                "autoFocus": false,
                                                                "classes": Object {
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                },
                                                                "color": "primary",
                                                                "components": Object {
                                                                  "Input": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "__emotion_base": "input",
                                                                    "__emotion_forwardProp": [Function],
                                                                    "__emotion_real": [Circular],
                                                                    "__emotion_styles": Array [
                                                                      "label:MuiInputBase-input;",
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      "label:MuiOutlinedInput-input;",
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "defaultProps": undefined,
                                                                    "render": [Function],
                                                                    "withComponent": [Function],
                                                                  },
                                                                  "Root": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "__emotion_base": "div",
                                                                    "__emotion_forwardProp": [Function],
                                                                    "__emotion_real": [Circular],
                                                                    "__emotion_styles": Array [
                                                                      "label:MuiInputBase-root;",
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      "label:MuiOutlinedInput-root;",
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "defaultProps": undefined,
                                                                    "render": [Function],
                                                                    "withComponent": [Function],
                                                                  },
                                                                },
                                                                "defaultValue": undefined,
                                                                "disabled": false,
                                                                "endAdornment": undefined,
                                                                "error": false,
                                                                "focused": false,
                                                                "formControl": Object {
                                                                  "adornedStart": false,
                                                                  "color": "primary",
                                                                  "disabled": false,
                                                                  "error": false,
                                                                  "filled": false,
                                                                  "focused": false,
                                                                  "fullWidth": true,
                                                                  "hiddenLabel": false,
                                                                  "onBlur": [Function],
                                                                  "onEmpty": [Function],
                                                                  "onFilled": [Function],
                                                                  "onFocus": [Function],
                                                                  "registerEffect": [Function],
                                                                  "required": false,
                                                                  "setAdornedStart": [Function],
                                                                  "size": "medium",
                                                                  "variant": "outlined",
                                                                },
                                                                "fullWidth": true,
                                                                "hiddenLabel": false,
                                                                "id": undefined,
                                                                "inputComponent": "input",
                                                                "inputProps": Object {
                                                                  "data-testid": "nft-description-input",
                                                                },
                                                                "inputRef": undefined,
                                                                "maxRows": undefined,
                                                                "minRows": undefined,
                                                                "multiline": false,
                                                                "name": undefined,
                                                                "onBlur": undefined,
                                                                "onChange": [Function],
                                                                "onFocus": undefined,
                                                                "placeholder": "Enter a description for this image",
                                                                "renderSuffix": [Function],
                                                                "rows": undefined,
                                                                "size": "medium",
                                                                "startAdornment": undefined,
                                                                "type": "text",
                                                                "value": undefined,
                                                              }
                                                            }
                                                            placeholder="Enter a description for this image"
                                                            required={false}
                                                            type="text"
                                                          >
                                                            <Noop />
                                                            <input
                                                              aria-invalid={false}
                                                              autoFocus={false}
                                                              className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                                              data-testid="nft-description-input"
                                                              disabled={false}
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Enter a description for this image"
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </MuiOutlinedInputInput>
                                                          <MuiOutlinedInputNotchedOutline
                                                            className="MuiOutlinedInput-notchedOutline"
                                                            label={
                                                              <React.Fragment>
                                                                Description
                                                              </React.Fragment>
                                                            }
                                                            notched={false}
                                                          >
                                                            <Noop />
                                                            <NotchedOutline
                                                              className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                              label={
                                                                <React.Fragment>
                                                                  Description
                                                                </React.Fragment>
                                                              }
                                                              notched={false}
                                                            >
                                                              <Styled(fieldset)
                                                                aria-hidden={true}
                                                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                ownerState={
                                                                  Object {
                                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                    "label": <React.Fragment>
                                                                      Description
                                                                    </React.Fragment>,
                                                                    "notched": false,
                                                                  }
                                                                }
                                                              >
                                                                <Noop />
                                                                <fieldset
                                                                  aria-hidden={true}
                                                                  className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                                >
                                                                  <Styled(legend)
                                                                    ownerState={
                                                                      Object {
                                                                        "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                        "label": <React.Fragment>
                                                                          Description
                                                                        </React.Fragment>,
                                                                        "notched": false,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Noop />
                                                                    <legend
                                                                      className="css-173wfxe"
                                                                    >
                                                                      <span>
                                                                        Description
                                                                      </span>
                                                                    </legend>
                                                                  </Styled(legend)>
                                                                </fieldset>
                                                              </Styled(fieldset)>
                                                            </NotchedOutline>
                                                          </MuiOutlinedInputNotchedOutline>
                                                        </div>
                                                      </MuiOutlinedInputRoot>
                                                    </ForwardRef(InputBase)>
                                                  </ForwardRef(OutlinedInput)>
                                                </div>
                                              </MuiFormControlRoot>
                                            </ForwardRef(FormControl)>
                                          </MuiTextFieldRoot>
                                        </ForwardRef(TextField)>
                                      </Input>
                                      <img
                                        alt="test.txt"
                                        src="test-url"
                                        width="100%"
                                      />
                                    </div>
                                  </Styled(div)>
                                </ForwardRef(Box)>
                              </div>
                            </Styled(div)>
                          </ForwardRef(Box)>
                        </TabPanel>
                      </div>
                    </Styled(div)>
                  </ForwardRef(Box)>
                </VerticalTabs>
              </div>
            </MuiPaperRoot>
          </ForwardRef(Paper)>
        </ImageUploadWithTabs>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;
