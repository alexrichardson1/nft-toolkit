// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderableListItem snapshot 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <OrderableList
          handleLayerRemoval={[MockFunction]}
          handleLayerReorder={[MockFunction]}
          items={
            Array [
              Object {
                "images": Object {},
                "layerId": "test-layer",
                "name": "test-name",
                "numberOfImages": 0,
              },
            ]
          }
        >
          <Memo(DndContext)
            collisionDetection={[Function]}
            onDragEnd={[MockFunction]}
            sensors={
              Array [
                Object {
                  "options": Object {},
                  "sensor": [Function],
                },
                Object {
                  "options": Object {
                    "coordinateGetter": [Function],
                  },
                  "sensor": [Function],
                },
              ]
            }
          >
            <SortableContext
              items={
                Array [
                  "test-layer",
                ]
              }
              strategy={[Function]}
            >
              <ForwardRef(List)
                sx={
                  Object {
                    "gap": 2,
                    "maxWidth": 1,
                    "overflow": "hidden",
                    "padding": 3,
                  }
                }
              >
                <MuiListRoot
                  as="ul"
                  className="MuiList-root MuiList-padding"
                  ownerState={
                    Object {
                      "children": Array [
                        <OrderableListItem
                          handleLayerRemoval={[MockFunction]}
                          id="test-layer"
                          layerName="test-name"
                        />,
                      ],
                      "component": "ul",
                      "dense": false,
                      "disablePadding": false,
                      "sx": Object {
                        "gap": 2,
                        "maxWidth": 1,
                        "overflow": "hidden",
                        "padding": 3,
                      },
                    }
                  }
                  sx={
                    Object {
                      "gap": 2,
                      "maxWidth": 1,
                      "overflow": "hidden",
                      "padding": 3,
                    }
                  }
                >
                  <Noop />
                  <ul
                    className="MuiList-root MuiList-padding css-f1wrvk-MuiList-root"
                  >
                    <OrderableListItem
                      handleLayerRemoval={[MockFunction]}
                      id="test-layer"
                      key="test-layer"
                      layerName="test-name"
                    >
                      <ForwardRef(ListItem)
                        style={
                          Object {
                            "transform": undefined,
                            "transition": undefined,
                          }
                        }
                        sx={
                          Object {
                            "bgcolor": "background.paper",
                            "boxShadow": [Function],
                            "mb": 1,
                            "textTransform": "uppercase",
                          }
                        }
                      >
                        <MuiListItemRoot
                          as="li"
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-padding"
                          disabled={false}
                          ownerState={
                            Object {
                              "alignItems": "center",
                              "autoFocus": false,
                              "button": false,
                              "children": Array [
                                <ForwardRef(ListItemText)
                                  primary="test-name"
                                />,
                                <ForwardRef(IconButton)
                                  aria-describedby="DndDescribedBy-0"
                                  aria-roledescription="sortable"
                                  onKeyDown={[Function]}
                                  onPointerDown={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Memo
                                    color="action"
                                    fontSize="large"
                                  />
                                </ForwardRef(IconButton)>,
                                <ForwardRef(IconButton)
                                  data-testid="delete-layer-btn"
                                  onClick={[Function]}
                                >
                                  <Memo
                                    color="error"
                                    fontSize="large"
                                  />
                                </ForwardRef(IconButton)>,
                              ],
                              "dense": false,
                              "disableGutters": false,
                              "disablePadding": false,
                              "disabled": false,
                              "divider": false,
                              "hasSecondaryAction": false,
                              "selected": false,
                              "style": Object {
                                "transform": undefined,
                                "transition": undefined,
                              },
                              "sx": Object {
                                "bgcolor": "background.paper",
                                "boxShadow": [Function],
                                "mb": 1,
                                "textTransform": "uppercase",
                              },
                            }
                          }
                          style={
                            Object {
                              "transform": undefined,
                              "transition": undefined,
                            }
                          }
                          sx={
                            Object {
                              "bgcolor": "background.paper",
                              "boxShadow": [Function],
                              "mb": 1,
                              "textTransform": "uppercase",
                            }
                          }
                        >
                          <Noop />
                          <li
                            className="MuiListItem-root MuiListItem-gutters MuiListItem-padding css-158orz0-MuiListItem-root"
                            disabled={false}
                            style={
                              Object {
                                "transform": undefined,
                                "transition": undefined,
                              }
                            }
                          >
                            <ForwardRef(ListItemText)
                              key=".0"
                              primary="test-name"
                            >
                              <MuiListItemTextRoot
                                className="MuiListItemText-root"
                                ownerState={
                                  Object {
                                    "dense": false,
                                    "disableTypography": false,
                                    "inset": false,
                                    "primary": true,
                                    "secondary": false,
                                  }
                                }
                              >
                                <Noop />
                                <div
                                  className="MuiListItemText-root css-tlelie-MuiListItemText-root"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiListItemText-primary"
                                    component="span"
                                    display="block"
                                    variant="body1"
                                  >
                                    <MuiTypographyRoot
                                      as="span"
                                      className="MuiTypography-root MuiTypography-body1 MuiListItemText-primary"
                                      ownerState={
                                        Object {
                                          "align": "inherit",
                                          "children": "test-name",
                                          "className": "MuiListItemText-primary",
                                          "color": undefined,
                                          "component": "span",
                                          "gutterBottom": false,
                                          "noWrap": false,
                                          "paragraph": false,
                                          "sx": Object {
                                            "color": undefined,
                                            "display": "block",
                                          },
                                          "variant": "body1",
                                          "variantMapping": Object {
                                            "body1": "p",
                                            "body2": "p",
                                            "h1": "h1",
                                            "h2": "h2",
                                            "h3": "h3",
                                            "h4": "h4",
                                            "h5": "h5",
                                            "h6": "h6",
                                            "inherit": "p",
                                            "subtitle1": "h6",
                                            "subtitle2": "h6",
                                          },
                                        }
                                      }
                                      sx={
                                        Object {
                                          "color": undefined,
                                          "display": "block",
                                        }
                                      }
                                    >
                                      <Noop />
                                      <span
                                        className="MuiTypography-root MuiTypography-body1 MuiListItemText-primary css-10hburv-MuiTypography-root"
                                      >
                                        test-name
                                      </span>
                                    </MuiTypographyRoot>
                                  </ForwardRef(Typography)>
                                </div>
                              </MuiListItemTextRoot>
                            </ForwardRef(ListItemText)>
                            <ForwardRef(IconButton)
                              aria-describedby="DndDescribedBy-0"
                              aria-roledescription="sortable"
                              key=".1"
                              onKeyDown={[Function]}
                              onPointerDown={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <MuiIconButtonRoot
                                aria-describedby="DndDescribedBy-0"
                                aria-roledescription="sortable"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-sizeMedium"
                                disabled={false}
                                focusRipple={true}
                                onKeyDown={[Function]}
                                onPointerDown={[Function]}
                                ownerState={
                                  Object {
                                    "aria-describedby": "DndDescribedBy-0",
                                    "aria-pressed": undefined,
                                    "aria-roledescription": "sortable",
                                    "children": <Memo
                                      color="action"
                                      fontSize="large"
                                    />,
                                    "color": "default",
                                    "disableFocusRipple": false,
                                    "disabled": false,
                                    "edge": false,
                                    "onKeyDown": [Function],
                                    "onPointerDown": [Function],
                                    "role": "button",
                                    "size": "medium",
                                    "tabIndex": 0,
                                  }
                                }
                                role="button"
                                tabIndex={0}
                              >
                                <Noop />
                                <ForwardRef(ButtonBase)
                                  aria-describedby="DndDescribedBy-0"
                                  aria-roledescription="sortable"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root"
                                  disabled={false}
                                  focusRipple={true}
                                  onKeyDown={[Function]}
                                  onPointerDown={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <MuiButtonBaseRoot
                                    aria-describedby="DndDescribedBy-0"
                                    aria-roledescription="sortable"
                                    as="button"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onPointerDown={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": "DndDescribedBy-0",
                                        "aria-pressed": undefined,
                                        "aria-roledescription": "sortable",
                                        "centerRipple": true,
                                        "children": <Memo
                                          color="action"
                                          fontSize="large"
                                        />,
                                        "className": "MuiIconButton-root MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root",
                                        "component": "button",
                                        "disableRipple": false,
                                        "disableTouchRipple": false,
                                        "disabled": false,
                                        "focusRipple": true,
                                        "focusVisible": false,
                                        "onKeyDown": [Function],
                                        "onPointerDown": [Function],
                                        "role": "button",
                                        "tabIndex": 0,
                                      }
                                    }
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <Noop />
                                    <button
                                      aria-describedby="DndDescribedBy-0"
                                      aria-roledescription="sortable"
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium css-78trlr-MuiButtonBase-root-MuiIconButton-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onPointerDown={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <ForwardRef(DragIndicatorIcon)
                                        color="action"
                                        fontSize="large"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="action"
                                          data-testid="DragIndicatorIcon"
                                          fontSize="large"
                                        >
                                          <MuiSvgIconRoot
                                            aria-hidden={true}
                                            as="svg"
                                            className="MuiSvgIcon-root MuiSvgIcon-colorAction MuiSvgIcon-fontSizeLarge"
                                            data-testid="DragIndicatorIcon"
                                            focusable="false"
                                            ownerState={
                                              Object {
                                                "children": <path
                                                  d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />,
                                                "color": "action",
                                                "component": "svg",
                                                "data-testid": "DragIndicatorIcon",
                                                "fontSize": "large",
                                                "viewBox": "0 0 24 24",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <Noop />
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiSvgIcon-colorAction MuiSvgIcon-fontSizeLarge css-p4wudk-MuiSvgIcon-root"
                                              data-testid="DragIndicatorIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                              />
                                            </svg>
                                          </MuiSvgIconRoot>
                                        </ForwardRef(SvgIcon)>
                                      </ForwardRef(DragIndicatorIcon)>
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                      >
                                        <MuiTouchRippleRoot
                                          className="MuiTouchRipple-root"
                                        >
                                          <Noop />
                                          <span
                                            className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </MuiTouchRippleRoot>
                                      </ForwardRef(TouchRipple)>
                                    </button>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </MuiIconButtonRoot>
                            </ForwardRef(IconButton)>
                            <ForwardRef(IconButton)
                              data-testid="delete-layer-btn"
                              key=".2"
                              onClick={[Function]}
                            >
                              <MuiIconButtonRoot
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-sizeMedium"
                                data-testid="delete-layer-btn"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                                ownerState={
                                  Object {
                                    "children": <Memo
                                      color="error"
                                      fontSize="large"
                                    />,
                                    "color": "default",
                                    "data-testid": "delete-layer-btn",
                                    "disableFocusRipple": false,
                                    "disabled": false,
                                    "edge": false,
                                    "onClick": [Function],
                                    "size": "medium",
                                  }
                                }
                              >
                                <Noop />
                                <ForwardRef(ButtonBase)
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root"
                                  data-testid="delete-layer-btn"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <MuiButtonBaseRoot
                                    as="button"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root"
                                    data-testid="delete-layer-btn"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onContextMenu={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    ownerState={
                                      Object {
                                        "centerRipple": true,
                                        "children": <Memo
                                          color="error"
                                          fontSize="large"
                                        />,
                                        "className": "MuiIconButton-root MuiIconButton-sizeMedium css-da3c9u-MuiIconButton-root",
                                        "component": "button",
                                        "data-testid": "delete-layer-btn",
                                        "disableRipple": false,
                                        "disableTouchRipple": false,
                                        "disabled": false,
                                        "focusRipple": true,
                                        "focusVisible": false,
                                        "onClick": [Function],
                                        "tabIndex": 0,
                                      }
                                    }
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <Noop />
                                    <button
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium css-78trlr-MuiButtonBase-root-MuiIconButton-root"
                                      data-testid="delete-layer-btn"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <ForwardRef(DeleteIcon)
                                        color="error"
                                        fontSize="large"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="error"
                                          data-testid="DeleteIcon"
                                          fontSize="large"
                                        >
                                          <MuiSvgIconRoot
                                            aria-hidden={true}
                                            as="svg"
                                            className="MuiSvgIcon-root MuiSvgIcon-colorError MuiSvgIcon-fontSizeLarge"
                                            data-testid="DeleteIcon"
                                            focusable="false"
                                            ownerState={
                                              Object {
                                                "children": <path
                                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                />,
                                                "color": "error",
                                                "component": "svg",
                                                "data-testid": "DeleteIcon",
                                                "fontSize": "large",
                                                "viewBox": "0 0 24 24",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <Noop />
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiSvgIcon-colorError MuiSvgIcon-fontSizeLarge css-1o657us-MuiSvgIcon-root"
                                              data-testid="DeleteIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                              />
                                            </svg>
                                          </MuiSvgIconRoot>
                                        </ForwardRef(SvgIcon)>
                                      </ForwardRef(DeleteIcon)>
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                      >
                                        <MuiTouchRippleRoot
                                          className="MuiTouchRipple-root"
                                        >
                                          <Noop />
                                          <span
                                            className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </MuiTouchRippleRoot>
                                      </ForwardRef(TouchRipple)>
                                    </button>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </MuiIconButtonRoot>
                            </ForwardRef(IconButton)>
                          </li>
                        </MuiListItemRoot>
                      </ForwardRef(ListItem)>
                    </OrderableListItem>
                  </ul>
                </MuiListRoot>
              </ForwardRef(List)>
            </SortableContext>
            <Accessibility
              hiddenTextDescribedById="DndDescribedBy-0"
              screenReaderInstructions={
                Object {
                  "draggable": "
    To pick up a draggable item, press the space bar.
    While dragging, use the arrow keys to move the item.
    Press space again to drop the item in its new position, or press escape to cancel.
  ",
                }
              }
            >
              <Portal
                containerInfo={
                  <body>
                    <div
                      id="DndDescribedBy-0"
                      style="display: none;"
                    >
                      
    To pick up a draggable item, press the space bar.
    While dragging, use the arrow keys to move the item.
    Press space again to drop the item in its new position, or press escape to cancel.
  
                    </div>
                    <div
                      aria-atomic="true"
                      aria-live="assertive"
                      id="DndLiveRegion-0"
                      role="status"
                      style="position: absolute; width: 1px; height: 1px; margin: -1px; border: 0px; padding: 0px; overflow: hidden; clip-path: inset(100%); white-space: nowrap;"
                    />
                  </body>
                }
              >
                <HiddenText
                  id="DndDescribedBy-0"
                  value="
    To pick up a draggable item, press the space bar.
    While dragging, use the arrow keys to move the item.
    Press space again to drop the item in its new position, or press escape to cancel.
  "
                >
                  <div
                    id="DndDescribedBy-0"
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                  >
                    
    To pick up a draggable item, press the space bar.
    While dragging, use the arrow keys to move the item.
    Press space again to drop the item in its new position, or press escape to cancel.
  
                  </div>
                </HiddenText>
                <LiveRegion
                  announcement=""
                  id="DndLiveRegion-0"
                >
                  <div
                    aria-atomic={true}
                    aria-live="assertive"
                    id="DndLiveRegion-0"
                    role="status"
                    style={
                      Object {
                        "border": 0,
                        "clip": "rect(0 0 0 0)",
                        "clipPath": "inset(100%)",
                        "height": 1,
                        "margin": -1,
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "absolute",
                        "whiteSpace": "nowrap",
                        "width": 1,
                      }
                    }
                  />
                </LiveRegion>
              </Portal>
            </Accessibility>
          </Memo(DndContext)>
        </OrderableList>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;
