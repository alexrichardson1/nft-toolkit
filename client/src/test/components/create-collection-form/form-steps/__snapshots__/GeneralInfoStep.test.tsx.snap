// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeneralInfoStep Step Number does not match when generative 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <NetworkProvider>
          <GeneralInfoStep
            generative={true}
            handleCollNameChange={[MockFunction]}
            handleDescriptionChange={[MockFunction]}
            handleMintPriceChange={[MockFunction]}
            handleMplaceRoyaltyChange={[MockFunction]}
            handleMplaceWantedChange={[MockFunction]}
            handleRedditChange={[MockFunction]}
            handleSymbolChange={[MockFunction]}
            handleTwitterChange={[MockFunction]}
            state={
              Object {
                "collectionName": "",
                "description": "",
                "generative": Object {
                  "layers": Array [],
                  "numberOfLayers": 0,
                  "numberOfTiers": 0,
                  "quantity": "1",
                  "tiers": Array [],
                  "totalTierRarity": 0,
                },
                "marketplace": Object {
                  "royalty": "",
                  "wanted": false,
                },
                "mintingPrice": "",
                "predictions": Object {
                  "collections": Array [],
                  "hype": -1,
                  "price": "0",
                },
                "redditHandle": "",
                "static": Object {
                  "images": Object {},
                  "numberOfImages": 0,
                },
                "symbol": "",
                "twitterHandle": "",
              }
            }
            stepNumber={0}
          />
        </NetworkProvider>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`GeneralInfoStep Step Number does not match when not generative 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <NetworkProvider>
          <GeneralInfoStep
            generative={false}
            handleCollNameChange={[MockFunction]}
            handleDescriptionChange={[MockFunction]}
            handleMintPriceChange={[MockFunction]}
            handleMplaceRoyaltyChange={[MockFunction]}
            handleMplaceWantedChange={[MockFunction]}
            handleRedditChange={[MockFunction]}
            handleSymbolChange={[MockFunction]}
            handleTwitterChange={[MockFunction]}
            state={
              Object {
                "collectionName": "",
                "description": "",
                "generative": Object {
                  "layers": Array [],
                  "numberOfLayers": 0,
                  "numberOfTiers": 0,
                  "quantity": "1",
                  "tiers": Array [],
                  "totalTierRarity": 0,
                },
                "marketplace": Object {
                  "royalty": "",
                  "wanted": false,
                },
                "mintingPrice": "",
                "predictions": Object {
                  "collections": Array [],
                  "hype": -1,
                  "price": "0",
                },
                "redditHandle": "",
                "static": Object {
                  "images": Object {},
                  "numberOfImages": 0,
                },
                "symbol": "",
                "twitterHandle": "",
              }
            }
            stepNumber={0}
          />
        </NetworkProvider>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`GeneralInfoStep Step Number matches with generative 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <NetworkProvider>
          <GeneralInfoStep
            generative={true}
            handleCollNameChange={[MockFunction]}
            handleDescriptionChange={[MockFunction]}
            handleMintPriceChange={[MockFunction]}
            handleMplaceRoyaltyChange={[MockFunction]}
            handleMplaceWantedChange={[MockFunction]}
            handleRedditChange={[MockFunction]}
            handleSymbolChange={[MockFunction]}
            handleTwitterChange={[MockFunction]}
            state={
              Object {
                "collectionName": "",
                "description": "",
                "generative": Object {
                  "layers": Array [],
                  "numberOfLayers": 0,
                  "numberOfTiers": 0,
                  "quantity": "1",
                  "tiers": Array [],
                  "totalTierRarity": 0,
                },
                "marketplace": Object {
                  "royalty": "",
                  "wanted": false,
                },
                "mintingPrice": "",
                "predictions": Object {
                  "collections": Array [],
                  "hype": -1,
                  "price": "0",
                },
                "redditHandle": "",
                "static": Object {
                  "images": Object {},
                  "numberOfImages": 0,
                },
                "symbol": "",
                "twitterHandle": "",
              }
            }
            stepNumber={4}
          >
            <Memo(PageHeader)
              text="Enter Collection Details Here"
            >
              <ForwardRef(Typography)
                color="secondary"
                component="div"
                gutterBottom={true}
                noWrap={true}
                textAlign="center"
                variant="h4"
              >
                <MuiTypographyRoot
                  as="div"
                  className="MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom MuiTypography-noWrap"
                  ownerState={
                    Object {
                      "align": "inherit",
                      "children": "Enter Collection Details Here",
                      "className": undefined,
                      "color": "secondary.main",
                      "component": "div",
                      "gutterBottom": true,
                      "noWrap": true,
                      "paragraph": false,
                      "sx": Object {
                        "color": "secondary.main",
                        "textAlign": "center",
                      },
                      "variant": "h4",
                      "variantMapping": Object {
                        "body1": "p",
                        "body2": "p",
                        "h1": "h1",
                        "h2": "h2",
                        "h3": "h3",
                        "h4": "h4",
                        "h5": "h5",
                        "h6": "h6",
                        "inherit": "p",
                        "subtitle1": "h6",
                        "subtitle2": "h6",
                      },
                    }
                  }
                  sx={
                    Object {
                      "color": "secondary.main",
                      "textAlign": "center",
                    }
                  }
                >
                  <Noop />
                  <div
                    className="MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom MuiTypography-noWrap css-sxtouj-MuiTypography-root"
                  >
                    Enter Collection Details Here
                  </div>
                </MuiTypographyRoot>
              </ForwardRef(Typography)>
            </Memo(PageHeader)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      inputProps={
                        Object {
                          "data-testid": "collection-name-input",
                        }
                      }
                      label="Collection Name"
                      onChange={[MockFunction]}
                      placeholder="Enter a collection name"
                      required={true}
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    inputProps={
                      Object {
                        "data-testid": "collection-name-input",
                      }
                    }
                    label="Collection Name"
                    onChange={[MockFunction]}
                    placeholder="Enter a collection name"
                    required={true}
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      inputProps={
                        Object {
                          "data-testid": "collection-name-input",
                        }
                      }
                      label="Collection Name"
                      onChange={[MockFunction]}
                      placeholder="Enter a collection name"
                      required={true}
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": Object {
                              "data-testid": "collection-name-input",
                            },
                            "label": "Collection Name",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter a collection name",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Collection Name
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "data-testid": "collection-name-input",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Collection Name
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a collection name"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Collection Name",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Collection Name",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Collection Name
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Collection Name",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "collection-name-input",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Collection Name
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a collection name"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "data-testid": "collection-name-input",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a collection name"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "data-testid": "collection-name-input",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter a collection name",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        data-testid="collection-name-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "data-testid": "collection-name-input",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter a collection name",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter a collection name"
                                        required={true}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          data-testid="collection-name-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter a collection name"
                                          required={true}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Collection Name
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Collection Name
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Collection Name
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Collection Name
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Collection Name
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      inputProps={
                        Object {
                          "data-testid": "symbol-input",
                        }
                      }
                      label="Symbol"
                      onChange={[MockFunction]}
                      placeholder="Enter a symbol"
                      required={true}
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    inputProps={
                      Object {
                        "data-testid": "symbol-input",
                      }
                    }
                    label="Symbol"
                    onChange={[MockFunction]}
                    placeholder="Enter a symbol"
                    required={true}
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      inputProps={
                        Object {
                          "data-testid": "symbol-input",
                        }
                      }
                      label="Symbol"
                      onChange={[MockFunction]}
                      placeholder="Enter a symbol"
                      required={true}
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": Object {
                              "data-testid": "symbol-input",
                            },
                            "label": "Symbol",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter a symbol",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Symbol
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "data-testid": "symbol-input",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Symbol
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a symbol"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Symbol",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Symbol",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Symbol
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Symbol",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "symbol-input",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Symbol
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a symbol"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "data-testid": "symbol-input",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a symbol"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "data-testid": "symbol-input",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter a symbol",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        data-testid="symbol-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "data-testid": "symbol-input",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter a symbol",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter a symbol"
                                        required={true}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          data-testid="symbol-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter a symbol"
                                          required={true}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Symbol
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Symbol
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Symbol
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Symbol
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Symbol
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      inputProps={
                        Object {
                          "data-testid": "description-input",
                        }
                      }
                      label="Description"
                      multiline={true}
                      onChange={[MockFunction]}
                      placeholder="Enter a description"
                      required={true}
                      rows={4}
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    inputProps={
                      Object {
                        "data-testid": "description-input",
                      }
                    }
                    label="Description"
                    multiline={true}
                    onChange={[MockFunction]}
                    placeholder="Enter a description"
                    required={true}
                    rows={4}
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      inputProps={
                        Object {
                          "data-testid": "description-input",
                        }
                      }
                      label="Description"
                      multiline={true}
                      onChange={[MockFunction]}
                      placeholder="Enter a description"
                      required={true}
                      rows={4}
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": Object {
                              "data-testid": "description-input",
                            },
                            "label": "Description",
                            "multiline": true,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter a description",
                            "required": true,
                            "rows": 4,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Description
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "data-testid": "description-input",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Description
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={true}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a description"
                                    rows={4}
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Description",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Description",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Description
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Description",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "description-input",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Description
                                     *
                                  </React.Fragment>
                                }
                                multiline={true}
                                onChange={[MockFunction]}
                                placeholder="Enter a description"
                                rows={4}
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "data-testid": "description-input",
                                    }
                                  }
                                  multiline={true}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a description"
                                  renderSuffix={[Function]}
                                  rows={4}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "data-testid": "description-input",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": true,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter a description",
                                        "renderSuffix": [Function],
                                        "rows": 4,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline css-rixlp9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "className": [Function],
                                              "maxRows": [Function],
                                              "minRows": [Function],
                                              "onChange": [Function],
                                              "placeholder": [Function],
                                              "style": [Function],
                                              "value": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline"
                                        data-testid="description-input"
                                        disabled={false}
                                        maxRows={4}
                                        minRows={4}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "data-testid": "description-input",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": true,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter a description",
                                            "renderSuffix": [Function],
                                            "rows": 4,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter a description"
                                        required={true}
                                        rows={4}
                                        value=""
                                      >
                                        <Noop />
                                        <ForwardRef(TextareaAutosize)
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                          data-testid="description-input"
                                          disabled={false}
                                          maxRows={4}
                                          minRows={4}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter a description"
                                          required={true}
                                          rows={4}
                                          value=""
                                        >
                                          <textarea
                                            aria-invalid={false}
                                            autoFocus={false}
                                            className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                            data-testid="description-input"
                                            disabled={false}
                                            onAnimationStart={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            placeholder="Enter a description"
                                            required={true}
                                            rows={4}
                                            style={
                                              Object {
                                                "height": 0,
                                                "overflow": "hidden",
                                              }
                                            }
                                            value=""
                                          />
                                          <textarea
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                            readOnly={true}
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "hidden",
                                                "padding": 0,
                                                "position": "absolute",
                                                "top": 0,
                                                "transform": "translateZ(0)",
                                                "visibility": "hidden",
                                              }
                                            }
                                            tabIndex={-1}
                                          />
                                        </ForwardRef(TextareaAutosize)>
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Description
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Description
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Description
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Description
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Description
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      InputProps={
                        Object {
                          "endAdornment": <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <Memo(SvgIcon)
                              alt="Ethereum"
                              height={25}
                              icon="ethereum-logo.svg"
                              width={25}
                            />
                          </ForwardRef(InputAdornment)>,
                          "inputProps": Object {
                            "min": 0,
                            "step": "any",
                          },
                        }
                      }
                      label="Minting Price"
                      onChange={[MockFunction]}
                      placeholder="0"
                      required={true}
                      type="number"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    InputProps={
                      Object {
                        "endAdornment": <ForwardRef(InputAdornment)
                          position="end"
                        >
                          <Memo(SvgIcon)
                            alt="Ethereum"
                            height={25}
                            icon="ethereum-logo.svg"
                            width={25}
                          />
                        </ForwardRef(InputAdornment)>,
                        "inputProps": Object {
                          "min": 0,
                          "step": "any",
                        },
                      }
                    }
                    label="Minting Price"
                    onChange={[MockFunction]}
                    placeholder="0"
                    required={true}
                    type="number"
                    value=""
                  >
                    <ForwardRef(TextField)
                      InputProps={
                        Object {
                          "endAdornment": <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <Memo(SvgIcon)
                              alt="Ethereum"
                              height={25}
                              icon="ethereum-logo.svg"
                              width={25}
                            />
                          </ForwardRef(InputAdornment)>,
                          "inputProps": Object {
                            "min": 0,
                            "step": "any",
                          },
                        }
                      }
                      fullWidth={true}
                      label="Minting Price"
                      onChange={[MockFunction]}
                      placeholder="0"
                      required={true}
                      type="number"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": Object {
                              "endAdornment": <ForwardRef(InputAdornment)
                                position="end"
                              >
                                <Memo(SvgIcon)
                                  alt="Ethereum"
                                  height={25}
                                  icon="ethereum-logo.svg"
                                  width={25}
                                />
                              </ForwardRef(InputAdornment)>,
                              "inputProps": Object {
                                "min": 0,
                                "step": "any",
                              },
                            },
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Minting Price",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "0",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": "number",
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Minting Price
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    endAdornment={
                                      <ForwardRef(InputAdornment)
                                        position="end"
                                      >
                                        <Memo(SvgIcon)
                                          alt="Ethereum"
                                          height={25}
                                          icon="ethereum-logo.svg"
                                          width={25}
                                        />
                                      </ForwardRef(InputAdornment)>
                                    }
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "min": 0,
                                        "step": "any",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Minting Price
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="0"
                                    type="number"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Minting Price",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Minting Price",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Minting Price
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Minting Price",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                endAdornment={
                                  <ForwardRef(InputAdornment)
                                    position="end"
                                  >
                                    <Memo(SvgIcon)
                                      alt="Ethereum"
                                      height={25}
                                      icon="ethereum-logo.svg"
                                      width={25}
                                    />
                                  </ForwardRef(InputAdornment)>
                                }
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "min": 0,
                                    "step": "any",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Minting Price
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="0"
                                type="number"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  endAdornment={
                                    <ForwardRef(InputAdornment)
                                      position="end"
                                    >
                                      <Memo(SvgIcon)
                                        alt="Ethereum"
                                        height={25}
                                        icon="ethereum-logo.svg"
                                        width={25}
                                      />
                                    </ForwardRef(InputAdornment)>
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "min": 0,
                                      "step": "any",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="0"
                                  renderSuffix={[Function]}
                                  type="number"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": <ForwardRef(InputAdornment)
                                          position="end"
                                        >
                                          <Memo(SvgIcon)
                                            alt="Ethereum"
                                            height={25}
                                            icon="ethereum-logo.svg"
                                            width={25}
                                          />
                                        </ForwardRef(InputAdornment)>,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "min": 0,
                                          "step": "any",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "0",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "number",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd css-1gvv60k-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                                        disabled={false}
                                        min={0}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": <ForwardRef(InputAdornment)
                                              position="end"
                                            >
                                              <Memo(SvgIcon)
                                                alt="Ethereum"
                                                height={25}
                                                icon="ethereum-logo.svg"
                                                width={25}
                                              />
                                            </ForwardRef(InputAdornment)>,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "min": 0,
                                              "step": "any",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "0",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "number",
                                            "value": "",
                                          }
                                        }
                                        placeholder="0"
                                        required={true}
                                        step="any"
                                        type="number"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          min={0}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="0"
                                          required={true}
                                          step="any"
                                          type="number"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <ForwardRef(InputAdornment)
                                        position="end"
                                      >
                                        <MuiInputAdornmentRoot
                                          as="div"
                                          className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                          ownerState={
                                            Object {
                                              "children": <Memo(SvgIcon)
                                                alt="Ethereum"
                                                height={25}
                                                icon="ethereum-logo.svg"
                                                width={25}
                                              />,
                                              "disablePointerEvents": false,
                                              "hiddenLabel": false,
                                              "position": "end",
                                              "size": "medium",
                                              "variant": "outlined",
                                            }
                                          }
                                        >
                                          <Noop />
                                          <div
                                            className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                          >
                                            <Memo(SvgIcon)
                                              alt="Ethereum"
                                              height={25}
                                              icon="ethereum-logo.svg"
                                              width={25}
                                            >
                                              <img
                                                alt="Ethereum"
                                                height={25}
                                                src="ethereum-logo.svg"
                                                style={
                                                  Object {
                                                    "margin": "0",
                                                  }
                                                }
                                                width={25}
                                              />
                                            </Memo(SvgIcon)>
                                          </div>
                                        </MuiInputAdornmentRoot>
                                      </ForwardRef(InputAdornment)>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Minting Price
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Minting Price
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Minting Price
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Minting Price
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Minting Price
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      label="Twitter Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Twitter handle here"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    label="Twitter Handle"
                    onChange={[MockFunction]}
                    placeholder="Enter your Twitter handle here"
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      label="Twitter Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Twitter handle here"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Twitter Handle",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter your Twitter handle here",
                            "required": false,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={false}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={false}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Twitter Handle
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    label={
                                      <React.Fragment>
                                        Twitter Handle
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter your Twitter handle here"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": false,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Twitter Handle",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": false,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": false,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Twitter Handle",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Twitter Handle
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                label={
                                  <React.Fragment>
                                    Twitter Handle
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter your Twitter handle here"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter your Twitter handle here"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": undefined,
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter your Twitter handle here",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": false,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": undefined,
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter your Twitter handle here",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter your Twitter handle here"
                                        required={false}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter your Twitter handle here"
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Twitter Handle
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Twitter Handle
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Twitter Handle
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Twitter Handle
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Twitter Handle
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      label="Reddit Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Reddit subreddit"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    label="Reddit Handle"
                    onChange={[MockFunction]}
                    placeholder="Enter your Reddit subreddit"
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      label="Reddit Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Reddit subreddit"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Reddit Handle",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter your Reddit subreddit",
                            "required": false,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={false}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={false}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Reddit Handle
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    label={
                                      <React.Fragment>
                                        Reddit Handle
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter your Reddit subreddit"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": false,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Reddit Handle",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": false,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": false,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Reddit Handle",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Reddit Handle
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                label={
                                  <React.Fragment>
                                    Reddit Handle
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter your Reddit subreddit"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter your Reddit subreddit"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": undefined,
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter your Reddit subreddit",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": false,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": undefined,
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter your Reddit subreddit",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter your Reddit subreddit"
                                        required={false}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter your Reddit subreddit"
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Reddit Handle
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Reddit Handle
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Reddit Handle
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Reddit Handle
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Reddit Handle
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      InputProps={
                        Object {
                          "inputProps": Object {
                            "max": 100,
                            "min": 0,
                          },
                        }
                      }
                      label="Royalty (%)"
                      onChange={[MockFunction]}
                      placeholder="% on all sales to go to creator"
                      required={true}
                      type="number"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    InputProps={
                      Object {
                        "inputProps": Object {
                          "max": 100,
                          "min": 0,
                        },
                      }
                    }
                    label="Royalty (%)"
                    onChange={[MockFunction]}
                    placeholder="% on all sales to go to creator"
                    required={true}
                    type="number"
                    value=""
                  >
                    <ForwardRef(TextField)
                      InputProps={
                        Object {
                          "inputProps": Object {
                            "max": 100,
                            "min": 0,
                          },
                        }
                      }
                      fullWidth={true}
                      label="Royalty (%)"
                      onChange={[MockFunction]}
                      placeholder="% on all sales to go to creator"
                      required={true}
                      type="number"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": Object {
                              "inputProps": Object {
                                "max": 100,
                                "min": 0,
                              },
                            },
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Royalty (%)",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "% on all sales to go to creator",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": "number",
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Royalty (%)
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": 100,
                                        "min": 0,
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Royalty (%)
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="% on all sales to go to creator"
                                    type="number"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Royalty (%)",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Royalty (%)",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Royalty (%)
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Royalty (%)",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "max": 100,
                                    "min": 0,
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Royalty (%)
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="% on all sales to go to creator"
                                type="number"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "max": 100,
                                      "min": 0,
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="% on all sales to go to creator"
                                  renderSuffix={[Function]}
                                  type="number"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "max": 100,
                                          "min": 0,
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "% on all sales to go to creator",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "number",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        disabled={false}
                                        max={100}
                                        min={0}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "max": 100,
                                              "min": 0,
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "% on all sales to go to creator",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "number",
                                            "value": "",
                                          }
                                        }
                                        placeholder="% on all sales to go to creator"
                                        required={true}
                                        type="number"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          max={100}
                                          min={0}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="% on all sales to go to creator"
                                          required={true}
                                          type="number"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Royalty (%)
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Royalty (%)
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Royalty (%)
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Royalty (%)
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Royalty (%)
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(FormGroup)>
              <MuiFormGroupRoot
                className="MuiFormGroup-root"
                ownerState={
                  Object {
                    "children": <ForwardRef(FormControlLabel)
                      control={
                        <ForwardRef(Checkbox)
                          checked={false}
                          onChange={[MockFunction]}
                        />
                      }
                      label="Select to deploy your own Marketplace"
                      onKeyPress={[Function]}
                    />,
                    "row": false,
                  }
                }
              >
                <Noop />
                <div
                  className="MuiFormGroup-root css-dmmspl-MuiFormGroup-root"
                >
                  <ForwardRef(FormControlLabel)
                    control={
                      <ForwardRef(Checkbox)
                        checked={false}
                        onChange={[MockFunction]}
                      />
                    }
                    label="Select to deploy your own Marketplace"
                    onKeyPress={[Function]}
                  >
                    <MuiFormControlLabelRoot
                      className="MuiFormControlLabel-root MuiFormControlLabel-labelPlacementEnd"
                      onKeyPress={[Function]}
                      ownerState={
                        Object {
                          "control": <ForwardRef(Checkbox)
                            checked={false}
                            onChange={[MockFunction]}
                          />,
                          "disabled": undefined,
                          "label": "Select to deploy your own Marketplace",
                          "labelPlacement": "end",
                          "onKeyPress": [Function],
                        }
                      }
                    >
                      <Noop />
                      <label
                        className="MuiFormControlLabel-root MuiFormControlLabel-labelPlacementEnd css-j204z7-MuiFormControlLabel-root"
                        onKeyPress={[Function]}
                      >
                        <ForwardRef(Checkbox)
                          checked={false}
                          onChange={[MockFunction]}
                        >
                          <MuiCheckboxRoot
                            checked={false}
                            checkedIcon={
                              <Memo
                                fontSize="medium"
                              />
                            }
                            classes={
                              Object {
                                "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                              }
                            }
                            icon={
                              <Memo
                                fontSize="medium"
                              />
                            }
                            inputProps={
                              Object {
                                "data-indeterminate": false,
                              }
                            }
                            onChange={[MockFunction]}
                            ownerState={
                              Object {
                                "checked": false,
                                "color": "primary",
                                "disabled": undefined,
                                "indeterminate": false,
                                "onChange": [MockFunction],
                                "size": "medium",
                              }
                            }
                            type="checkbox"
                          >
                            <Noop />
                            <ForwardRef(SwitchBase)
                              checked={false}
                              checkedIcon={
                                <Memo
                                  fontSize="medium"
                                />
                              }
                              className="css-1uay1-MuiCheckbox-root"
                              classes={
                                Object {
                                  "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                }
                              }
                              icon={
                                <Memo
                                  fontSize="medium"
                                />
                              }
                              inputProps={
                                Object {
                                  "data-indeterminate": false,
                                }
                              }
                              onChange={[MockFunction]}
                              type="checkbox"
                            >
                              <Styled(ForwardRef(ButtonBase))
                                centerRipple={true}
                                className="MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-1uay1-MuiCheckbox-root"
                                classes={
                                  Object {
                                    "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                  }
                                }
                                component="span"
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                ownerState={
                                  Object {
                                    "checked": false,
                                    "checkedIcon": <Memo
                                      fontSize="medium"
                                    />,
                                    "className": "css-1uay1-MuiCheckbox-root",
                                    "classes": Object {
                                      "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                    },
                                    "disableFocusRipple": false,
                                    "disabled": undefined,
                                    "edge": false,
                                    "icon": <Memo
                                      fontSize="medium"
                                    />,
                                    "inputProps": Object {
                                      "data-indeterminate": false,
                                    },
                                    "onChange": [MockFunction],
                                    "type": "checkbox",
                                  }
                                }
                                tabIndex={null}
                              >
                                <Noop />
                                <ForwardRef(ButtonBase)
                                  centerRipple={true}
                                  className="MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-qrihwo-MuiCheckbox-root"
                                  classes={
                                    Object {
                                      "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                    }
                                  }
                                  component="span"
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <MuiButtonBaseRoot
                                    as="span"
                                    className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-qrihwo-MuiCheckbox-root"
                                    classes={
                                      Object {
                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                      }
                                    }
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    ownerState={
                                      Object {
                                        "centerRipple": true,
                                        "children": Array [
                                          <Styled(input)
                                            checked={false}
                                            className="PrivateSwitchBase-input"
                                            data-indeterminate={false}
                                            onChange={[Function]}
                                            ownerState={
                                              Object {
                                                "checked": false,
                                                "checkedIcon": <Memo
                                                  fontSize="medium"
                                                />,
                                                "className": "css-1uay1-MuiCheckbox-root",
                                                "classes": Object {
                                                  "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                },
                                                "disableFocusRipple": false,
                                                "disabled": undefined,
                                                "edge": false,
                                                "icon": <Memo
                                                  fontSize="medium"
                                                />,
                                                "inputProps": Object {
                                                  "data-indeterminate": false,
                                                },
                                                "onChange": [MockFunction],
                                                "type": "checkbox",
                                              }
                                            }
                                            type="checkbox"
                                          />,
                                          <Memo
                                            fontSize="medium"
                                          />,
                                        ],
                                        "className": "MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-qrihwo-MuiCheckbox-root",
                                        "classes": Object {
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        },
                                        "component": "span",
                                        "disableRipple": false,
                                        "disableTouchRipple": false,
                                        "disabled": false,
                                        "focusRipple": true,
                                        "focusVisible": false,
                                        "onBlur": [Function],
                                        "onFocus": [Function],
                                        "role": undefined,
                                        "tabIndex": null,
                                      }
                                    }
                                    tabIndex={null}
                                  >
                                    <Noop />
                                    <span
                                      className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-1v6klcs-MuiButtonBase-root-MuiCheckbox-root"
                                      onBlur={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <Styled(input)
                                        checked={false}
                                        className="PrivateSwitchBase-input"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        ownerState={
                                          Object {
                                            "checked": false,
                                            "checkedIcon": <Memo
                                              fontSize="medium"
                                            />,
                                            "className": "css-1uay1-MuiCheckbox-root",
                                            "classes": Object {
                                              "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                            },
                                            "disableFocusRipple": false,
                                            "disabled": undefined,
                                            "edge": false,
                                            "icon": <Memo
                                              fontSize="medium"
                                            />,
                                            "inputProps": Object {
                                              "data-indeterminate": false,
                                            },
                                            "onChange": [MockFunction],
                                            "type": "checkbox",
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <Noop />
                                        <input
                                          checked={false}
                                          className="PrivateSwitchBase-input css-1m9pwf3"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </Styled(input)>
                                      <ForwardRef(CheckBoxOutlineBlankIcon)
                                        fontSize="medium"
                                      >
                                        <ForwardRef(SvgIcon)
                                          data-testid="CheckBoxOutlineBlankIcon"
                                          fontSize="medium"
                                        >
                                          <MuiSvgIconRoot
                                            aria-hidden={true}
                                            as="svg"
                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                            data-testid="CheckBoxOutlineBlankIcon"
                                            focusable="false"
                                            ownerState={
                                              Object {
                                                "children": <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />,
                                                "color": "inherit",
                                                "component": "svg",
                                                "data-testid": "CheckBoxOutlineBlankIcon",
                                                "fontSize": "medium",
                                                "viewBox": "0 0 24 24",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <Noop />
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                              data-testid="CheckBoxOutlineBlankIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </MuiSvgIconRoot>
                                        </ForwardRef(SvgIcon)>
                                      </ForwardRef(CheckBoxOutlineBlankIcon)>
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                      >
                                        <MuiTouchRippleRoot
                                          className="MuiTouchRipple-root"
                                        >
                                          <Noop />
                                          <span
                                            className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </MuiTouchRippleRoot>
                                      </ForwardRef(TouchRipple)>
                                    </span>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </Styled(ForwardRef(ButtonBase))>
                            </ForwardRef(SwitchBase)>
                          </MuiCheckboxRoot>
                        </ForwardRef(Checkbox)>
                        <ForwardRef(Typography)
                          className="MuiFormControlLabel-label"
                          component="span"
                        >
                          <MuiTypographyRoot
                            as="span"
                            className="MuiTypography-root MuiTypography-body1 MuiFormControlLabel-label"
                            ownerState={
                              Object {
                                "align": "inherit",
                                "children": "Select to deploy your own Marketplace",
                                "className": "MuiFormControlLabel-label",
                                "color": undefined,
                                "component": "span",
                                "gutterBottom": false,
                                "noWrap": false,
                                "paragraph": false,
                                "sx": Object {
                                  "color": undefined,
                                },
                                "variant": "body1",
                                "variantMapping": Object {
                                  "body1": "p",
                                  "body2": "p",
                                  "h1": "h1",
                                  "h2": "h2",
                                  "h3": "h3",
                                  "h4": "h4",
                                  "h5": "h5",
                                  "h6": "h6",
                                  "inherit": "p",
                                  "subtitle1": "h6",
                                  "subtitle2": "h6",
                                },
                              }
                            }
                            sx={
                              Object {
                                "color": undefined,
                              }
                            }
                          >
                            <Noop />
                            <span
                              className="MuiTypography-root MuiTypography-body1 MuiFormControlLabel-label css-ahj2mt-MuiTypography-root"
                            >
                              Select to deploy your own Marketplace
                            </span>
                          </MuiTypographyRoot>
                        </ForwardRef(Typography)>
                      </label>
                    </MuiFormControlLabelRoot>
                  </ForwardRef(FormControlLabel)>
                </div>
              </MuiFormGroupRoot>
            </ForwardRef(FormGroup)>
          </GeneralInfoStep>
        </NetworkProvider>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`GeneralInfoStep Step Number matches without generative 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <NetworkProvider>
          <GeneralInfoStep
            generative={false}
            handleCollNameChange={[MockFunction]}
            handleDescriptionChange={[MockFunction]}
            handleMintPriceChange={[MockFunction]}
            handleMplaceRoyaltyChange={[MockFunction]}
            handleMplaceWantedChange={[MockFunction]}
            handleRedditChange={[MockFunction]}
            handleSymbolChange={[MockFunction]}
            handleTwitterChange={[MockFunction]}
            state={
              Object {
                "collectionName": "",
                "description": "",
                "generative": Object {
                  "layers": Array [],
                  "numberOfLayers": 0,
                  "numberOfTiers": 0,
                  "quantity": "1",
                  "tiers": Array [],
                  "totalTierRarity": 0,
                },
                "marketplace": Object {
                  "royalty": "",
                  "wanted": false,
                },
                "mintingPrice": "",
                "predictions": Object {
                  "collections": Array [],
                  "hype": -1,
                  "price": "0",
                },
                "redditHandle": "",
                "static": Object {
                  "images": Object {},
                  "numberOfImages": 0,
                },
                "symbol": "",
                "twitterHandle": "",
              }
            }
            stepNumber={2}
          >
            <Memo(PageHeader)
              text="Enter Collection Details Here"
            >
              <ForwardRef(Typography)
                color="secondary"
                component="div"
                gutterBottom={true}
                noWrap={true}
                textAlign="center"
                variant="h4"
              >
                <MuiTypographyRoot
                  as="div"
                  className="MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom MuiTypography-noWrap"
                  ownerState={
                    Object {
                      "align": "inherit",
                      "children": "Enter Collection Details Here",
                      "className": undefined,
                      "color": "secondary.main",
                      "component": "div",
                      "gutterBottom": true,
                      "noWrap": true,
                      "paragraph": false,
                      "sx": Object {
                        "color": "secondary.main",
                        "textAlign": "center",
                      },
                      "variant": "h4",
                      "variantMapping": Object {
                        "body1": "p",
                        "body2": "p",
                        "h1": "h1",
                        "h2": "h2",
                        "h3": "h3",
                        "h4": "h4",
                        "h5": "h5",
                        "h6": "h6",
                        "inherit": "p",
                        "subtitle1": "h6",
                        "subtitle2": "h6",
                      },
                    }
                  }
                  sx={
                    Object {
                      "color": "secondary.main",
                      "textAlign": "center",
                    }
                  }
                >
                  <Noop />
                  <div
                    className="MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom MuiTypography-noWrap css-sxtouj-MuiTypography-root"
                  >
                    Enter Collection Details Here
                  </div>
                </MuiTypographyRoot>
              </ForwardRef(Typography)>
            </Memo(PageHeader)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      inputProps={
                        Object {
                          "data-testid": "collection-name-input",
                        }
                      }
                      label="Collection Name"
                      onChange={[MockFunction]}
                      placeholder="Enter a collection name"
                      required={true}
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    inputProps={
                      Object {
                        "data-testid": "collection-name-input",
                      }
                    }
                    label="Collection Name"
                    onChange={[MockFunction]}
                    placeholder="Enter a collection name"
                    required={true}
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      inputProps={
                        Object {
                          "data-testid": "collection-name-input",
                        }
                      }
                      label="Collection Name"
                      onChange={[MockFunction]}
                      placeholder="Enter a collection name"
                      required={true}
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": Object {
                              "data-testid": "collection-name-input",
                            },
                            "label": "Collection Name",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter a collection name",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Collection Name
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "data-testid": "collection-name-input",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Collection Name
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a collection name"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Collection Name",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Collection Name",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Collection Name
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Collection Name",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "collection-name-input",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Collection Name
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a collection name"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "data-testid": "collection-name-input",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a collection name"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "data-testid": "collection-name-input",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter a collection name",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        data-testid="collection-name-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "data-testid": "collection-name-input",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter a collection name",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter a collection name"
                                        required={true}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          data-testid="collection-name-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter a collection name"
                                          required={true}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Collection Name
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Collection Name
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Collection Name
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Collection Name
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Collection Name
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      inputProps={
                        Object {
                          "data-testid": "symbol-input",
                        }
                      }
                      label="Symbol"
                      onChange={[MockFunction]}
                      placeholder="Enter a symbol"
                      required={true}
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    inputProps={
                      Object {
                        "data-testid": "symbol-input",
                      }
                    }
                    label="Symbol"
                    onChange={[MockFunction]}
                    placeholder="Enter a symbol"
                    required={true}
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      inputProps={
                        Object {
                          "data-testid": "symbol-input",
                        }
                      }
                      label="Symbol"
                      onChange={[MockFunction]}
                      placeholder="Enter a symbol"
                      required={true}
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": Object {
                              "data-testid": "symbol-input",
                            },
                            "label": "Symbol",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter a symbol",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Symbol
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "data-testid": "symbol-input",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Symbol
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a symbol"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Symbol",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Symbol",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Symbol
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Symbol",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "symbol-input",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Symbol
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a symbol"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "data-testid": "symbol-input",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a symbol"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "data-testid": "symbol-input",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter a symbol",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        data-testid="symbol-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "data-testid": "symbol-input",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter a symbol",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter a symbol"
                                        required={true}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          data-testid="symbol-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter a symbol"
                                          required={true}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Symbol
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Symbol
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Symbol
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Symbol
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Symbol
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      inputProps={
                        Object {
                          "data-testid": "description-input",
                        }
                      }
                      label="Description"
                      multiline={true}
                      onChange={[MockFunction]}
                      placeholder="Enter a description"
                      required={true}
                      rows={4}
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    inputProps={
                      Object {
                        "data-testid": "description-input",
                      }
                    }
                    label="Description"
                    multiline={true}
                    onChange={[MockFunction]}
                    placeholder="Enter a description"
                    required={true}
                    rows={4}
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      inputProps={
                        Object {
                          "data-testid": "description-input",
                        }
                      }
                      label="Description"
                      multiline={true}
                      onChange={[MockFunction]}
                      placeholder="Enter a description"
                      required={true}
                      rows={4}
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": Object {
                              "data-testid": "description-input",
                            },
                            "label": "Description",
                            "multiline": true,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter a description",
                            "required": true,
                            "rows": 4,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Description
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "data-testid": "description-input",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Description
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={true}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a description"
                                    rows={4}
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Description",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Description",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Description
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Description",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "description-input",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Description
                                     *
                                  </React.Fragment>
                                }
                                multiline={true}
                                onChange={[MockFunction]}
                                placeholder="Enter a description"
                                rows={4}
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "data-testid": "description-input",
                                    }
                                  }
                                  multiline={true}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a description"
                                  renderSuffix={[Function]}
                                  rows={4}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "data-testid": "description-input",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": true,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter a description",
                                        "renderSuffix": [Function],
                                        "rows": 4,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline css-rixlp9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "className": [Function],
                                              "maxRows": [Function],
                                              "minRows": [Function],
                                              "onChange": [Function],
                                              "placeholder": [Function],
                                              "style": [Function],
                                              "value": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline"
                                        data-testid="description-input"
                                        disabled={false}
                                        maxRows={4}
                                        minRows={4}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "data-testid": "description-input",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": true,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter a description",
                                            "renderSuffix": [Function],
                                            "rows": 4,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter a description"
                                        required={true}
                                        rows={4}
                                        value=""
                                      >
                                        <Noop />
                                        <ForwardRef(TextareaAutosize)
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                          data-testid="description-input"
                                          disabled={false}
                                          maxRows={4}
                                          minRows={4}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter a description"
                                          required={true}
                                          rows={4}
                                          value=""
                                        >
                                          <textarea
                                            aria-invalid={false}
                                            autoFocus={false}
                                            className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                            data-testid="description-input"
                                            disabled={false}
                                            onAnimationStart={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            placeholder="Enter a description"
                                            required={true}
                                            rows={4}
                                            style={
                                              Object {
                                                "height": 0,
                                                "overflow": "hidden",
                                              }
                                            }
                                            value=""
                                          />
                                          <textarea
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                            readOnly={true}
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "hidden",
                                                "padding": 0,
                                                "position": "absolute",
                                                "top": 0,
                                                "transform": "translateZ(0)",
                                                "visibility": "hidden",
                                              }
                                            }
                                            tabIndex={-1}
                                          />
                                        </ForwardRef(TextareaAutosize)>
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Description
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Description
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Description
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Description
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Description
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      InputProps={
                        Object {
                          "endAdornment": <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <Memo(SvgIcon)
                              alt="Ethereum"
                              height={25}
                              icon="ethereum-logo.svg"
                              width={25}
                            />
                          </ForwardRef(InputAdornment)>,
                          "inputProps": Object {
                            "min": 0,
                            "step": "any",
                          },
                        }
                      }
                      label="Minting Price"
                      onChange={[MockFunction]}
                      placeholder="0"
                      required={true}
                      type="number"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    InputProps={
                      Object {
                        "endAdornment": <ForwardRef(InputAdornment)
                          position="end"
                        >
                          <Memo(SvgIcon)
                            alt="Ethereum"
                            height={25}
                            icon="ethereum-logo.svg"
                            width={25}
                          />
                        </ForwardRef(InputAdornment)>,
                        "inputProps": Object {
                          "min": 0,
                          "step": "any",
                        },
                      }
                    }
                    label="Minting Price"
                    onChange={[MockFunction]}
                    placeholder="0"
                    required={true}
                    type="number"
                    value=""
                  >
                    <ForwardRef(TextField)
                      InputProps={
                        Object {
                          "endAdornment": <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <Memo(SvgIcon)
                              alt="Ethereum"
                              height={25}
                              icon="ethereum-logo.svg"
                              width={25}
                            />
                          </ForwardRef(InputAdornment)>,
                          "inputProps": Object {
                            "min": 0,
                            "step": "any",
                          },
                        }
                      }
                      fullWidth={true}
                      label="Minting Price"
                      onChange={[MockFunction]}
                      placeholder="0"
                      required={true}
                      type="number"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": Object {
                              "endAdornment": <ForwardRef(InputAdornment)
                                position="end"
                              >
                                <Memo(SvgIcon)
                                  alt="Ethereum"
                                  height={25}
                                  icon="ethereum-logo.svg"
                                  width={25}
                                />
                              </ForwardRef(InputAdornment)>,
                              "inputProps": Object {
                                "min": 0,
                                "step": "any",
                              },
                            },
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Minting Price",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "0",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": "number",
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Minting Price
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    endAdornment={
                                      <ForwardRef(InputAdornment)
                                        position="end"
                                      >
                                        <Memo(SvgIcon)
                                          alt="Ethereum"
                                          height={25}
                                          icon="ethereum-logo.svg"
                                          width={25}
                                        />
                                      </ForwardRef(InputAdornment)>
                                    }
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "min": 0,
                                        "step": "any",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Minting Price
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="0"
                                    type="number"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Minting Price",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Minting Price",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Minting Price
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Minting Price",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                endAdornment={
                                  <ForwardRef(InputAdornment)
                                    position="end"
                                  >
                                    <Memo(SvgIcon)
                                      alt="Ethereum"
                                      height={25}
                                      icon="ethereum-logo.svg"
                                      width={25}
                                    />
                                  </ForwardRef(InputAdornment)>
                                }
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "min": 0,
                                    "step": "any",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Minting Price
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="0"
                                type="number"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  endAdornment={
                                    <ForwardRef(InputAdornment)
                                      position="end"
                                    >
                                      <Memo(SvgIcon)
                                        alt="Ethereum"
                                        height={25}
                                        icon="ethereum-logo.svg"
                                        width={25}
                                      />
                                    </ForwardRef(InputAdornment)>
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "min": 0,
                                      "step": "any",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="0"
                                  renderSuffix={[Function]}
                                  type="number"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": <ForwardRef(InputAdornment)
                                          position="end"
                                        >
                                          <Memo(SvgIcon)
                                            alt="Ethereum"
                                            height={25}
                                            icon="ethereum-logo.svg"
                                            width={25}
                                          />
                                        </ForwardRef(InputAdornment)>,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "min": 0,
                                          "step": "any",
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "0",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "number",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd css-1gvv60k-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                                        disabled={false}
                                        min={0}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": <ForwardRef(InputAdornment)
                                              position="end"
                                            >
                                              <Memo(SvgIcon)
                                                alt="Ethereum"
                                                height={25}
                                                icon="ethereum-logo.svg"
                                                width={25}
                                              />
                                            </ForwardRef(InputAdornment)>,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "min": 0,
                                              "step": "any",
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "0",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "number",
                                            "value": "",
                                          }
                                        }
                                        placeholder="0"
                                        required={true}
                                        step="any"
                                        type="number"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          min={0}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="0"
                                          required={true}
                                          step="any"
                                          type="number"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <ForwardRef(InputAdornment)
                                        position="end"
                                      >
                                        <MuiInputAdornmentRoot
                                          as="div"
                                          className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                          ownerState={
                                            Object {
                                              "children": <Memo(SvgIcon)
                                                alt="Ethereum"
                                                height={25}
                                                icon="ethereum-logo.svg"
                                                width={25}
                                              />,
                                              "disablePointerEvents": false,
                                              "hiddenLabel": false,
                                              "position": "end",
                                              "size": "medium",
                                              "variant": "outlined",
                                            }
                                          }
                                        >
                                          <Noop />
                                          <div
                                            className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                          >
                                            <Memo(SvgIcon)
                                              alt="Ethereum"
                                              height={25}
                                              icon="ethereum-logo.svg"
                                              width={25}
                                            >
                                              <img
                                                alt="Ethereum"
                                                height={25}
                                                src="ethereum-logo.svg"
                                                style={
                                                  Object {
                                                    "margin": "0",
                                                  }
                                                }
                                                width={25}
                                              />
                                            </Memo(SvgIcon)>
                                          </div>
                                        </MuiInputAdornmentRoot>
                                      </ForwardRef(InputAdornment)>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Minting Price
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Minting Price
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Minting Price
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Minting Price
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Minting Price
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      label="Twitter Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Twitter handle here"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    label="Twitter Handle"
                    onChange={[MockFunction]}
                    placeholder="Enter your Twitter handle here"
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      label="Twitter Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Twitter handle here"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Twitter Handle",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter your Twitter handle here",
                            "required": false,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={false}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={false}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Twitter Handle
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    label={
                                      <React.Fragment>
                                        Twitter Handle
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter your Twitter handle here"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": false,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Twitter Handle",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": false,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": false,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Twitter Handle",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Twitter Handle
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                label={
                                  <React.Fragment>
                                    Twitter Handle
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter your Twitter handle here"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter your Twitter handle here"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": undefined,
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter your Twitter handle here",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": false,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": undefined,
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter your Twitter handle here",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter your Twitter handle here"
                                        required={false}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter your Twitter handle here"
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Twitter Handle
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Twitter Handle
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Twitter Handle
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Twitter Handle
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Twitter Handle
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      label="Reddit Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Reddit subreddit"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    label="Reddit Handle"
                    onChange={[MockFunction]}
                    placeholder="Enter your Reddit subreddit"
                    value=""
                  >
                    <ForwardRef(TextField)
                      fullWidth={true}
                      label="Reddit Handle"
                      onChange={[MockFunction]}
                      placeholder="Enter your Reddit subreddit"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": undefined,
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Reddit Handle",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "Enter your Reddit subreddit",
                            "required": false,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": undefined,
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={false}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={false}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Reddit Handle
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    label={
                                      <React.Fragment>
                                        Reddit Handle
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter your Reddit subreddit"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": false,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Reddit Handle",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": false,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": false,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Reddit Handle",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Reddit Handle
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                label={
                                  <React.Fragment>
                                    Reddit Handle
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="Enter your Reddit subreddit"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter your Reddit subreddit"
                                  renderSuffix={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": undefined,
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "Enter your Reddit subreddit",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "text",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        disabled={false}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": false,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": undefined,
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "Enter your Reddit subreddit",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "text",
                                            "value": "",
                                          }
                                        }
                                        placeholder="Enter your Reddit subreddit"
                                        required={false}
                                        type="text"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="Enter your Reddit subreddit"
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Reddit Handle
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Reddit Handle
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Reddit Handle
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Reddit Handle
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Reddit Handle
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(Paper)>
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                ownerState={
                  Object {
                    "children": <Input
                      InputProps={
                        Object {
                          "inputProps": Object {
                            "max": 100,
                            "min": 0,
                          },
                        }
                      }
                      label="Royalty (%)"
                      onChange={[MockFunction]}
                      placeholder="% on all sales to go to creator"
                      required={true}
                      type="number"
                      value=""
                    />,
                    "component": "div",
                    "elevation": 1,
                    "square": false,
                    "variant": "elevation",
                  }
                }
              >
                <Noop />
                <div
                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                >
                  <Input
                    InputProps={
                      Object {
                        "inputProps": Object {
                          "max": 100,
                          "min": 0,
                        },
                      }
                    }
                    label="Royalty (%)"
                    onChange={[MockFunction]}
                    placeholder="% on all sales to go to creator"
                    required={true}
                    type="number"
                    value=""
                  >
                    <ForwardRef(TextField)
                      InputProps={
                        Object {
                          "inputProps": Object {
                            "max": 100,
                            "min": 0,
                          },
                        }
                      }
                      fullWidth={true}
                      label="Royalty (%)"
                      onChange={[MockFunction]}
                      placeholder="% on all sales to go to creator"
                      required={true}
                      type="number"
                      value=""
                      variant="outlined"
                    >
                      <MuiTextFieldRoot
                        className="MuiTextField-root"
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        ownerState={
                          Object {
                            "InputProps": Object {
                              "inputProps": Object {
                                "max": 100,
                                "min": 0,
                              },
                            },
                            "autoFocus": false,
                            "color": "primary",
                            "defaultValue": undefined,
                            "disabled": false,
                            "error": false,
                            "fullWidth": true,
                            "inputProps": undefined,
                            "label": "Royalty (%)",
                            "multiline": false,
                            "name": undefined,
                            "onChange": [MockFunction],
                            "onKeyPress": undefined,
                            "placeholder": "% on all sales to go to creator",
                            "required": true,
                            "rows": undefined,
                            "select": false,
                            "sx": undefined,
                            "type": "number",
                            "value": "",
                            "variant": "outlined",
                          }
                        }
                        required={true}
                        variant="outlined"
                      >
                        <Noop />
                        <ForwardRef(FormControl)
                          className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                          color="primary"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          required={true}
                          variant="outlined"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Royalty (%)
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": 100,
                                        "min": 0,
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Royalty (%)
                                         *
                                      </React.Fragment>
                                    }
                                    multiline={false}
                                    onChange={[MockFunction]}
                                    placeholder="% on all sales to go to creator"
                                    type="number"
                                    value=""
                                  />,
                                  undefined,
                                ],
                                "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": true,
                                "hiddenLabel": false,
                                "margin": "none",
                                "onKeyPress": undefined,
                                "required": true,
                                "size": "medium",
                                "variant": "outlined",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Royalty (%)",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": true,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "outlined",
                                      },
                                      "htmlFor": undefined,
                                      "id": undefined,
                                      "required": true,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1x92c1k-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Royalty (%)",
                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "htmlFor": undefined,
                                          "id": undefined,
                                          "required": true,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Royalty (%)
                                        <MuiFormLabelAsterisk
                                          aria-hidden={true}
                                          className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                          ownerState={
                                            Object {
                                              "children": "Royalty (%)",
                                              "className": "css-1x92c1k-MuiInputLabel-root",
                                              "classes": Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                              },
                                              "color": "primary",
                                              "component": "label",
                                              "data-shrink": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "htmlFor": undefined,
                                              "id": undefined,
                                              "required": true,
                                            }
                                          }
                                        >
                                          <Noop />
                                          <span
                                            aria-hidden={true}
                                            className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                          >
                                             
                                            *
                                          </span>
                                        </MuiFormLabelAsterisk>
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(OutlinedInput)
                                autoFocus={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "max": 100,
                                    "min": 0,
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Royalty (%)
                                     *
                                  </React.Fragment>
                                }
                                multiline={false}
                                onChange={[MockFunction]}
                                placeholder="% on all sales to go to creator"
                                type="number"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "input": "MuiOutlinedInput-input",
                                      "notchedOutline": null,
                                      "root": "MuiOutlinedInput-root",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Input": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-input;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "div",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiInputBase-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "label:MuiOutlinedInput-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "max": 100,
                                      "min": 0,
                                    }
                                  }
                                  multiline={false}
                                  onChange={[MockFunction]}
                                  placeholder="% on all sales to go to creator"
                                  renderSuffix={[Function]}
                                  type="number"
                                  value=""
                                >
                                  <GlobalStyles
                                    styles={
                                      Object {
                                        "@keyframes mui-auto-fill": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                        "@keyframes mui-auto-fill-cancel": Object {
                                          "from": Object {
                                            "display": "block",
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <GlobalStyles
                                      defaultTheme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "unit": "px",
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1200,
                                              "md": 900,
                                              "sm": 600,
                                              "xl": 1536,
                                              "xs": 0,
                                            },
                                          },
                                          "components": Object {},
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "palette": Object {
                                            "action": Object {
                                              "activatedOpacity": 0.12,
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "disabledOpacity": 0.38,
                                              "focus": "rgba(0, 0, 0, 0.12)",
                                              "focusOpacity": 0.12,
                                              "hover": "rgba(0, 0, 0, 0.04)",
                                              "hoverOpacity": 0.04,
                                              "selected": "rgba(0, 0, 0, 0.08)",
                                              "selectedOpacity": 0.08,
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fff",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c62828",
                                              "light": "#ef5350",
                                              "main": "#d32f2f",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#f5f5f5",
                                              "A200": "#eeeeee",
                                              "A400": "#bdbdbd",
                                              "A700": "#616161",
                                            },
                                            "info": Object {
                                              "contrastText": "#fff",
                                              "dark": "#01579b",
                                              "light": "#03a9f4",
                                              "main": "#0288d1",
                                            },
                                            "mode": "light",
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1565c0",
                                              "light": "#42a5f5",
                                              "main": "#1976d2",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#7b1fa2",
                                              "light": "#ba68c8",
                                              "main": "#9c27b0",
                                            },
                                            "success": Object {
                                              "contrastText": "#fff",
                                              "dark": "#1b5e20",
                                              "light": "#4caf50",
                                              "main": "#2e7d32",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.6)",
                                            },
                                            "tonalOffset": 0.2,
                                            "warning": Object {
                                              "contrastText": "#fff",
                                              "dark": "#e65100",
                                              "light": "#ff9800",
                                              "main": "#ed6c02",
                                            },
                                          },
                                          "shadows": Array [
                                            "none",
                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1.167,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1.2,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.167,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.235,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.334,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "speedDial": 1050,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <EmotionGlobal
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      />
                                    </GlobalStyles>
                                  </GlobalStyles>
                                  <MuiOutlinedInputRoot
                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                    classes={
                                      Object {
                                        "input": "MuiOutlinedInput-input",
                                        "notchedOutline": null,
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    onClick={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-describedby": undefined,
                                        "autoComplete": undefined,
                                        "autoFocus": false,
                                        "classes": Object {
                                          "input": "MuiOutlinedInput-input",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Input": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "input",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-input;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "div",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiInputBase-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              "label:MuiOutlinedInput-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "endAdornment": undefined,
                                        "error": false,
                                        "focused": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": true,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": true,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "fullWidth": true,
                                        "hiddenLabel": false,
                                        "id": undefined,
                                        "inputComponent": "input",
                                        "inputProps": Object {
                                          "max": 100,
                                          "min": 0,
                                        },
                                        "inputRef": undefined,
                                        "maxRows": undefined,
                                        "minRows": undefined,
                                        "multiline": false,
                                        "name": undefined,
                                        "onBlur": undefined,
                                        "onChange": [MockFunction],
                                        "onFocus": undefined,
                                        "placeholder": "% on all sales to go to creator",
                                        "renderSuffix": [Function],
                                        "rows": undefined,
                                        "size": "medium",
                                        "startAdornment": undefined,
                                        "type": "number",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                      onClick={[Function]}
                                    >
                                      <MuiOutlinedInputInput
                                        aria-invalid={false}
                                        as="input"
                                        autoFocus={false}
                                        className="MuiOutlinedInput-input MuiInputBase-input"
                                        disabled={false}
                                        max={100}
                                        min={0}
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        ownerState={
                                          Object {
                                            "aria-describedby": undefined,
                                            "autoComplete": undefined,
                                            "autoFocus": false,
                                            "classes": Object {
                                              "input": "MuiOutlinedInput-input",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Input": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "input",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-input;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "div",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiInputBase-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "label:MuiOutlinedInput-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "defaultValue": undefined,
                                            "disabled": false,
                                            "endAdornment": undefined,
                                            "error": false,
                                            "focused": false,
                                            "formControl": Object {
                                              "adornedStart": false,
                                              "color": "primary",
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "fullWidth": true,
                                              "hiddenLabel": false,
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "registerEffect": [Function],
                                              "required": true,
                                              "setAdornedStart": [Function],
                                              "size": "medium",
                                              "variant": "outlined",
                                            },
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "id": undefined,
                                            "inputComponent": "input",
                                            "inputProps": Object {
                                              "max": 100,
                                              "min": 0,
                                            },
                                            "inputRef": undefined,
                                            "maxRows": undefined,
                                            "minRows": undefined,
                                            "multiline": false,
                                            "name": undefined,
                                            "onBlur": undefined,
                                            "onChange": [MockFunction],
                                            "onFocus": undefined,
                                            "placeholder": "% on all sales to go to creator",
                                            "renderSuffix": [Function],
                                            "rows": undefined,
                                            "size": "medium",
                                            "startAdornment": undefined,
                                            "type": "number",
                                            "value": "",
                                          }
                                        }
                                        placeholder="% on all sales to go to creator"
                                        required={true}
                                        type="number"
                                        value=""
                                      >
                                        <Noop />
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                          disabled={false}
                                          max={100}
                                          min={0}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          placeholder="% on all sales to go to creator"
                                          required={true}
                                          type="number"
                                          value=""
                                        />
                                      </MuiOutlinedInputInput>
                                      <MuiOutlinedInputNotchedOutline
                                        className="MuiOutlinedInput-notchedOutline"
                                        label={
                                          <React.Fragment>
                                            Royalty (%)
                                             *
                                          </React.Fragment>
                                        }
                                        notched={false}
                                      >
                                        <Noop />
                                        <NotchedOutline
                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                          label={
                                            <React.Fragment>
                                              Royalty (%)
                                               *
                                            </React.Fragment>
                                          }
                                          notched={false}
                                        >
                                          <Styled(fieldset)
                                            aria-hidden={true}
                                            className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                            ownerState={
                                              Object {
                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                "label": <React.Fragment>
                                                  Royalty (%)
                                                   *
                                                </React.Fragment>,
                                                "notched": false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <fieldset
                                              aria-hidden={true}
                                              className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                            >
                                              <Styled(legend)
                                                ownerState={
                                                  Object {
                                                    "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                    "label": <React.Fragment>
                                                      Royalty (%)
                                                       *
                                                    </React.Fragment>,
                                                    "notched": false,
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <legend
                                                  className="css-173wfxe"
                                                >
                                                  <span>
                                                    Royalty (%)
                                                     *
                                                  </span>
                                                </legend>
                                              </Styled(legend)>
                                            </fieldset>
                                          </Styled(fieldset)>
                                        </NotchedOutline>
                                      </MuiOutlinedInputNotchedOutline>
                                    </div>
                                  </MuiOutlinedInputRoot>
                                </ForwardRef(InputBase)>
                              </ForwardRef(OutlinedInput)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </MuiTextFieldRoot>
                    </ForwardRef(TextField)>
                  </Input>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
            <ForwardRef(FormGroup)>
              <MuiFormGroupRoot
                className="MuiFormGroup-root"
                ownerState={
                  Object {
                    "children": <ForwardRef(FormControlLabel)
                      control={
                        <ForwardRef(Checkbox)
                          checked={false}
                          onChange={[MockFunction]}
                        />
                      }
                      label="Select to deploy your own Marketplace"
                      onKeyPress={[Function]}
                    />,
                    "row": false,
                  }
                }
              >
                <Noop />
                <div
                  className="MuiFormGroup-root css-dmmspl-MuiFormGroup-root"
                >
                  <ForwardRef(FormControlLabel)
                    control={
                      <ForwardRef(Checkbox)
                        checked={false}
                        onChange={[MockFunction]}
                      />
                    }
                    label="Select to deploy your own Marketplace"
                    onKeyPress={[Function]}
                  >
                    <MuiFormControlLabelRoot
                      className="MuiFormControlLabel-root MuiFormControlLabel-labelPlacementEnd"
                      onKeyPress={[Function]}
                      ownerState={
                        Object {
                          "control": <ForwardRef(Checkbox)
                            checked={false}
                            onChange={[MockFunction]}
                          />,
                          "disabled": undefined,
                          "label": "Select to deploy your own Marketplace",
                          "labelPlacement": "end",
                          "onKeyPress": [Function],
                        }
                      }
                    >
                      <Noop />
                      <label
                        className="MuiFormControlLabel-root MuiFormControlLabel-labelPlacementEnd css-j204z7-MuiFormControlLabel-root"
                        onKeyPress={[Function]}
                      >
                        <ForwardRef(Checkbox)
                          checked={false}
                          onChange={[MockFunction]}
                        >
                          <MuiCheckboxRoot
                            checked={false}
                            checkedIcon={
                              <Memo
                                fontSize="medium"
                              />
                            }
                            classes={
                              Object {
                                "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                              }
                            }
                            icon={
                              <Memo
                                fontSize="medium"
                              />
                            }
                            inputProps={
                              Object {
                                "data-indeterminate": false,
                              }
                            }
                            onChange={[MockFunction]}
                            ownerState={
                              Object {
                                "checked": false,
                                "color": "primary",
                                "disabled": undefined,
                                "indeterminate": false,
                                "onChange": [MockFunction],
                                "size": "medium",
                              }
                            }
                            type="checkbox"
                          >
                            <Noop />
                            <ForwardRef(SwitchBase)
                              checked={false}
                              checkedIcon={
                                <Memo
                                  fontSize="medium"
                                />
                              }
                              className="css-1uay1-MuiCheckbox-root"
                              classes={
                                Object {
                                  "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                }
                              }
                              icon={
                                <Memo
                                  fontSize="medium"
                                />
                              }
                              inputProps={
                                Object {
                                  "data-indeterminate": false,
                                }
                              }
                              onChange={[MockFunction]}
                              type="checkbox"
                            >
                              <Styled(ForwardRef(ButtonBase))
                                centerRipple={true}
                                className="MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-1uay1-MuiCheckbox-root"
                                classes={
                                  Object {
                                    "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                  }
                                }
                                component="span"
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                ownerState={
                                  Object {
                                    "checked": false,
                                    "checkedIcon": <Memo
                                      fontSize="medium"
                                    />,
                                    "className": "css-1uay1-MuiCheckbox-root",
                                    "classes": Object {
                                      "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                    },
                                    "disableFocusRipple": false,
                                    "disabled": undefined,
                                    "edge": false,
                                    "icon": <Memo
                                      fontSize="medium"
                                    />,
                                    "inputProps": Object {
                                      "data-indeterminate": false,
                                    },
                                    "onChange": [MockFunction],
                                    "type": "checkbox",
                                  }
                                }
                                tabIndex={null}
                              >
                                <Noop />
                                <ForwardRef(ButtonBase)
                                  centerRipple={true}
                                  className="MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-qrihwo-MuiCheckbox-root"
                                  classes={
                                    Object {
                                      "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                    }
                                  }
                                  component="span"
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <MuiButtonBaseRoot
                                    as="span"
                                    className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-qrihwo-MuiCheckbox-root"
                                    classes={
                                      Object {
                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                      }
                                    }
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    ownerState={
                                      Object {
                                        "centerRipple": true,
                                        "children": Array [
                                          <Styled(input)
                                            checked={false}
                                            className="PrivateSwitchBase-input"
                                            data-indeterminate={false}
                                            onChange={[Function]}
                                            ownerState={
                                              Object {
                                                "checked": false,
                                                "checkedIcon": <Memo
                                                  fontSize="medium"
                                                />,
                                                "className": "css-1uay1-MuiCheckbox-root",
                                                "classes": Object {
                                                  "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                },
                                                "disableFocusRipple": false,
                                                "disabled": undefined,
                                                "edge": false,
                                                "icon": <Memo
                                                  fontSize="medium"
                                                />,
                                                "inputProps": Object {
                                                  "data-indeterminate": false,
                                                },
                                                "onChange": [MockFunction],
                                                "type": "checkbox",
                                              }
                                            }
                                            type="checkbox"
                                          />,
                                          <Memo
                                            fontSize="medium"
                                          />,
                                        ],
                                        "className": "MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-qrihwo-MuiCheckbox-root",
                                        "classes": Object {
                                          "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                        },
                                        "component": "span",
                                        "disableRipple": false,
                                        "disableTouchRipple": false,
                                        "disabled": false,
                                        "focusRipple": true,
                                        "focusVisible": false,
                                        "onBlur": [Function],
                                        "onFocus": [Function],
                                        "role": undefined,
                                        "tabIndex": null,
                                      }
                                    }
                                    tabIndex={null}
                                  >
                                    <Noop />
                                    <span
                                      className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root css-1v6klcs-MuiButtonBase-root-MuiCheckbox-root"
                                      onBlur={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <Styled(input)
                                        checked={false}
                                        className="PrivateSwitchBase-input"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        ownerState={
                                          Object {
                                            "checked": false,
                                            "checkedIcon": <Memo
                                              fontSize="medium"
                                            />,
                                            "className": "css-1uay1-MuiCheckbox-root",
                                            "classes": Object {
                                              "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                            },
                                            "disableFocusRipple": false,
                                            "disabled": undefined,
                                            "edge": false,
                                            "icon": <Memo
                                              fontSize="medium"
                                            />,
                                            "inputProps": Object {
                                              "data-indeterminate": false,
                                            },
                                            "onChange": [MockFunction],
                                            "type": "checkbox",
                                          }
                                        }
                                        type="checkbox"
                                      >
                                        <Noop />
                                        <input
                                          checked={false}
                                          className="PrivateSwitchBase-input css-1m9pwf3"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </Styled(input)>
                                      <ForwardRef(CheckBoxOutlineBlankIcon)
                                        fontSize="medium"
                                      >
                                        <ForwardRef(SvgIcon)
                                          data-testid="CheckBoxOutlineBlankIcon"
                                          fontSize="medium"
                                        >
                                          <MuiSvgIconRoot
                                            aria-hidden={true}
                                            as="svg"
                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                            data-testid="CheckBoxOutlineBlankIcon"
                                            focusable="false"
                                            ownerState={
                                              Object {
                                                "children": <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />,
                                                "color": "inherit",
                                                "component": "svg",
                                                "data-testid": "CheckBoxOutlineBlankIcon",
                                                "fontSize": "medium",
                                                "viewBox": "0 0 24 24",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <Noop />
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                              data-testid="CheckBoxOutlineBlankIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </MuiSvgIconRoot>
                                        </ForwardRef(SvgIcon)>
                                      </ForwardRef(CheckBoxOutlineBlankIcon)>
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                      >
                                        <MuiTouchRippleRoot
                                          className="MuiTouchRipple-root"
                                        >
                                          <Noop />
                                          <span
                                            className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </MuiTouchRippleRoot>
                                      </ForwardRef(TouchRipple)>
                                    </span>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </Styled(ForwardRef(ButtonBase))>
                            </ForwardRef(SwitchBase)>
                          </MuiCheckboxRoot>
                        </ForwardRef(Checkbox)>
                        <ForwardRef(Typography)
                          className="MuiFormControlLabel-label"
                          component="span"
                        >
                          <MuiTypographyRoot
                            as="span"
                            className="MuiTypography-root MuiTypography-body1 MuiFormControlLabel-label"
                            ownerState={
                              Object {
                                "align": "inherit",
                                "children": "Select to deploy your own Marketplace",
                                "className": "MuiFormControlLabel-label",
                                "color": undefined,
                                "component": "span",
                                "gutterBottom": false,
                                "noWrap": false,
                                "paragraph": false,
                                "sx": Object {
                                  "color": undefined,
                                },
                                "variant": "body1",
                                "variantMapping": Object {
                                  "body1": "p",
                                  "body2": "p",
                                  "h1": "h1",
                                  "h2": "h2",
                                  "h3": "h3",
                                  "h4": "h4",
                                  "h5": "h5",
                                  "h6": "h6",
                                  "inherit": "p",
                                  "subtitle1": "h6",
                                  "subtitle2": "h6",
                                },
                              }
                            }
                            sx={
                              Object {
                                "color": undefined,
                              }
                            }
                          >
                            <Noop />
                            <span
                              className="MuiTypography-root MuiTypography-body1 MuiFormControlLabel-label css-ahj2mt-MuiTypography-root"
                            >
                              Select to deploy your own Marketplace
                            </span>
                          </MuiTypographyRoot>
                        </ForwardRef(Typography)>
                      </label>
                    </MuiFormControlLabelRoot>
                  </ForwardRef(FormControlLabel)>
                </div>
              </MuiFormGroupRoot>
            </ForwardRef(FormGroup)>
          </GeneralInfoStep>
        </NetworkProvider>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;
