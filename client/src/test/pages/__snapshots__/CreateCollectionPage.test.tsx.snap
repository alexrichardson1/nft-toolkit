// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCollectionPage snapshot 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <NetworkProvider>
          <Web3ReactProvider
            getLibrary={[Function]}
          >
            <CreateCollectionPage>
              <CreateCollectionForm>
                <ForwardRef(Stack)
                  component="form"
                  data-testid="create-form"
                  justifyContent="center"
                  onSubmit={[Function]}
                  spacing={2}
                >
                  <MuiStackRoot
                    as="form"
                    data-testid="create-form"
                    onSubmit={[Function]}
                    ownerState={
                      Object {
                        "direction": "column",
                        "spacing": 2,
                      }
                    }
                    sx={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Noop />
                    <form
                      className="css-773myu-MuiStack-root"
                      data-testid="create-form"
                      onSubmit={[Function]}
                    >
                      <GeneralInfoStep
                        generative={false}
                        handleCollNameChange={[Function]}
                        handleDescriptionChange={[Function]}
                        handleMintPriceChange={[Function]}
                        handleMplaceRoyaltyChange={[Function]}
                        handleMplaceWantedChange={[Function]}
                        handleRedditChange={[Function]}
                        handleSymbolChange={[Function]}
                        handleTwitterChange={[Function]}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "quantity": "",
                              "tiers": Array [],
                              "totalTierRarity": 0,
                            },
                            "marketplace": Object {
                              "royalty": "",
                              "wanted": false,
                            },
                            "mintingPrice": "",
                            "predictions": Object {
                              "hype": -1,
                              "names": Array [],
                            },
                            "redditHandle": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                            "twitterHandle": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <pure(TypeOfArtStep)
                        handleNextStep={[Function]}
                        setGenerative={[Function]}
                        stepNumber={0}
                      >
                        <TypeOfArtStep
                          handleNextStep={[Function]}
                          setGenerative={[Function]}
                          stepNumber={0}
                        >
                          <ForwardRef(Grid)
                            container={true}
                            spacing={2}
                          >
                            <MuiGridRoot
                              as="div"
                              className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                              ownerState={
                                Object {
                                  "children": Array [
                                    <ChoiceCard
                                      description={
                                        <React.Fragment>
                                          Dynamically generate an NFT collection using multi-layered images
                                          <ul
                                            style={
                                              Object {
                                                "marginBottom": 0,
                                                "marginTop": 0,
                                              }
                                            }
                                          >
                                            <li>
                                               Provide layers you wish each NFT to include
                                            </li>
                                            <li>
                                               Upload your images for each layer with respective rarities
                                            </li>
                                            <li>
                                              Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                            </li>
                                          </ul>
                                        </React.Fragment>
                                      }
                                      handleCardClick={[Function]}
                                      imgSrc="generative-icon.svg"
                                      title="Generative Art"
                                    />,
                                    <ChoiceCard
                                      description={
                                        <React.Fragment>
                                          Create a static NFT collection
                                          <ul
                                            style={
                                              Object {
                                                "marginBottom": 0,
                                                "marginTop": 0,
                                              }
                                            }
                                          >
                                            <li>
                                              Upload all of your static images
                                            </li>
                                            <li>
                                              Give each image a name and a description
                                            </li>
                                            <li>
                                              Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                            </li>
                                          </ul>
                                        </React.Fragment>
                                      }
                                      handleCardClick={[Function]}
                                      imgSrc="static-icon.svg"
                                      title="Static Art"
                                    />,
                                  ],
                                  "columnSpacing": 2,
                                  "columns": 12,
                                  "container": true,
                                  "direction": "row",
                                  "item": false,
                                  "lg": false,
                                  "md": false,
                                  "rowSpacing": 2,
                                  "sm": false,
                                  "spacing": 2,
                                  "sx": Object {},
                                  "wrap": "wrap",
                                  "xl": false,
                                  "xs": false,
                                  "zeroMinWidth": false,
                                }
                              }
                              sx={Object {}}
                            >
                              <Noop />
                              <div
                                className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2 css-mhc70k-MuiGrid-root"
                              >
                                <ChoiceCard
                                  description={
                                    <React.Fragment>
                                      Dynamically generate an NFT collection using multi-layered images
                                      <ul
                                        style={
                                          Object {
                                            "marginBottom": 0,
                                            "marginTop": 0,
                                          }
                                        }
                                      >
                                        <li>
                                           Provide layers you wish each NFT to include
                                        </li>
                                        <li>
                                           Upload your images for each layer with respective rarities
                                        </li>
                                        <li>
                                          Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                        </li>
                                      </ul>
                                    </React.Fragment>
                                  }
                                  handleCardClick={[Function]}
                                  imgSrc="generative-icon.svg"
                                  title="Generative Art"
                                >
                                  <ForwardRef(Grid)
                                    item={true}
                                    md={6}
                                    xs={12}
                                  >
                                    <MuiGridRoot
                                      as="div"
                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                      ownerState={
                                        Object {
                                          "children": <ForwardRef(Box)
                                            sx={
                                              Object {
                                                "bgcolor": "background.paper",
                                              }
                                            }
                                          >
                                            <ForwardRef(Button)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(Paper)
                                                elevation={5}
                                                sx={
                                                  Object {
                                                    "alignItems": "center",
                                                    "display": "flex",
                                                    "flexDirection": "column",
                                                    "gap": "25px",
                                                    "height": 600,
                                                    "padding": 3,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Typography)
                                                  align="center"
                                                  color="secondary"
                                                  variant="h3"
                                                >
                                                  Generative Art
                                                </ForwardRef(Typography)>
                                                <ForwardRef(Box)
                                                  sx={
                                                    Object {
                                                      "height": 200,
                                                      "width": 300,
                                                    }
                                                  }
                                                >
                                                  <img
                                                    alt="Generative Art-img"
                                                    src="generative-icon.svg"
                                                    style={
                                                      Object {
                                                        "height": "100%",
                                                        "width": "100%",
                                                      }
                                                    }
                                                  />
                                                </ForwardRef(Box)>
                                                <ForwardRef(Typography)
                                                  color="primary"
                                                  sx={
                                                    Object {
                                                      "textAlign": "left",
                                                      "textTransform": "none",
                                                    }
                                                  }
                                                  variant="h6"
                                                >
                                                  <React.Fragment>
                                                    Dynamically generate an NFT collection using multi-layered images
                                                    <ul
                                                      style={
                                                        Object {
                                                          "marginBottom": 0,
                                                          "marginTop": 0,
                                                        }
                                                      }
                                                    >
                                                      <li>
                                                         Provide layers you wish each NFT to include
                                                      </li>
                                                      <li>
                                                         Upload your images for each layer with respective rarities
                                                      </li>
                                                      <li>
                                                        Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                      </li>
                                                    </ul>
                                                  </React.Fragment>
                                                </ForwardRef(Typography)>
                                              </ForwardRef(Paper)>
                                            </ForwardRef(Button)>
                                          </ForwardRef(Box)>,
                                          "columnSpacing": 0,
                                          "columns": 12,
                                          "container": false,
                                          "direction": "row",
                                          "item": true,
                                          "lg": false,
                                          "md": 6,
                                          "rowSpacing": 0,
                                          "sm": false,
                                          "sx": Object {},
                                          "wrap": "wrap",
                                          "xl": false,
                                          "xs": 12,
                                          "zeroMinWidth": false,
                                        }
                                      }
                                      sx={Object {}}
                                    >
                                      <Noop />
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 css-1tp3ba8-MuiGrid-root"
                                      >
                                        <ForwardRef(Box)
                                          sx={
                                            Object {
                                              "bgcolor": "background.paper",
                                            }
                                          }
                                        >
                                          <Styled(div)
                                            as="div"
                                            className="MuiBox-root"
                                            sx={
                                              Object {
                                                "bgcolor": "background.paper",
                                              }
                                            }
                                            theme={
                                              Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "unit": "px",
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1200,
                                                    "md": 900,
                                                    "sm": 600,
                                                    "xl": 1536,
                                                    "xs": 0,
                                                  },
                                                },
                                                "components": Object {},
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "palette": Object {
                                                  "action": Object {
                                                    "activatedOpacity": 0.12,
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "disabledOpacity": 0.38,
                                                    "focus": "rgba(0, 0, 0, 0.12)",
                                                    "focusOpacity": 0.12,
                                                    "hover": "rgba(0, 0, 0, 0.04)",
                                                    "hoverOpacity": 0.04,
                                                    "selected": "rgba(0, 0, 0, 0.08)",
                                                    "selectedOpacity": 0.08,
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#F0F0F0",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c62828",
                                                    "light": "#ef5350",
                                                    "main": "#d32f2f",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#f5f5f5",
                                                    "A200": "#eeeeee",
                                                    "A400": "#bdbdbd",
                                                    "A700": "#616161",
                                                  },
                                                  "info": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#01579b",
                                                    "light": "#03a9f4",
                                                    "main": "#0288d1",
                                                  },
                                                  "mode": "light",
                                                  "primary": Object {
                                                    "100": "#b2ebf2",
                                                    "200": "#80deea",
                                                    "300": "#4dd0e1",
                                                    "400": "#26c6da",
                                                    "50": "#e0f7fa",
                                                    "500": "#00bcd4",
                                                    "600": "#00acc1",
                                                    "700": "#0097a7",
                                                    "800": "#00838f",
                                                    "900": "#006064",
                                                    "A100": "#84ffff",
                                                    "A200": "#18ffff",
                                                    "A400": "#00e5ff",
                                                    "A700": "#00b8d4",
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#0097a7",
                                                    "light": "#4dd0e1",
                                                    "main": "#00bcd4",
                                                  },
                                                  "secondary": Object {
                                                    "100": "#f8bbd0",
                                                    "200": "#f48fb1",
                                                    "300": "#f06292",
                                                    "400": "#ec407a",
                                                    "50": "#fce4ec",
                                                    "500": "#e91e63",
                                                    "600": "#d81b60",
                                                    "700": "#c2185b",
                                                    "800": "#ad1457",
                                                    "900": "#880e4f",
                                                    "A100": "#ff80ab",
                                                    "A200": "#ff4081",
                                                    "A400": "#f50057",
                                                    "A700": "#c51162",
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "success": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#1b5e20",
                                                    "light": "#4caf50",
                                                    "main": "#2e7d32",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.6)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "warning": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#e65100",
                                                    "light": "#ff9800",
                                                    "main": "#ed6c02",
                                                  },
                                                },
                                                "shadows": Array [
                                                  "none",
                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1.2,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.235,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.334,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "speedDial": 1050,
                                                  "tooltip": 1500,
                                                },
                                                Symbol(mui.nested): false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <div
                                              className="MuiBox-root css-1k9ek97"
                                            >
                                              <ForwardRef(Button)
                                                onClick={[Function]}
                                              >
                                                <MuiButtonRoot
                                                  className=""
                                                  classes={
                                                    Object {
                                                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                      "label": "MuiButton-label",
                                                      "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                    }
                                                  }
                                                  component="button"
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName=""
                                                  onClick={[Function]}
                                                  ownerState={
                                                    Object {
                                                      "children": <ForwardRef(Paper)
                                                        elevation={5}
                                                        sx={
                                                          Object {
                                                            "alignItems": "center",
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "gap": "25px",
                                                            "height": 600,
                                                            "padding": 3,
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(Typography)
                                                          align="center"
                                                          color="secondary"
                                                          variant="h3"
                                                        >
                                                          Generative Art
                                                        </ForwardRef(Typography)>
                                                        <ForwardRef(Box)
                                                          sx={
                                                            Object {
                                                              "height": 200,
                                                              "width": 300,
                                                            }
                                                          }
                                                        >
                                                          <img
                                                            alt="Generative Art-img"
                                                            src="generative-icon.svg"
                                                            style={
                                                              Object {
                                                                "height": "100%",
                                                                "width": "100%",
                                                              }
                                                            }
                                                          />
                                                        </ForwardRef(Box)>
                                                        <ForwardRef(Typography)
                                                          color="primary"
                                                          sx={
                                                            Object {
                                                              "textAlign": "left",
                                                              "textTransform": "none",
                                                            }
                                                          }
                                                          variant="h6"
                                                        >
                                                          <React.Fragment>
                                                            Dynamically generate an NFT collection using multi-layered images
                                                            <ul
                                                              style={
                                                                Object {
                                                                  "marginBottom": 0,
                                                                  "marginTop": 0,
                                                                }
                                                              }
                                                            >
                                                              <li>
                                                                 Provide layers you wish each NFT to include
                                                              </li>
                                                              <li>
                                                                 Upload your images for each layer with respective rarities
                                                              </li>
                                                              <li>
                                                                Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                              </li>
                                                            </ul>
                                                          </React.Fragment>
                                                        </ForwardRef(Typography)>
                                                      </ForwardRef(Paper)>,
                                                      "color": "primary",
                                                      "component": "button",
                                                      "disableElevation": false,
                                                      "disableFocusRipple": false,
                                                      "disabled": false,
                                                      "fullWidth": false,
                                                      "onClick": [Function],
                                                      "size": "medium",
                                                      "type": undefined,
                                                      "variant": "text",
                                                    }
                                                  }
                                                >
                                                  <Noop />
                                                  <ForwardRef(ButtonBase)
                                                    className=" css-1e6v7v4-MuiButton-root"
                                                    classes={
                                                      Object {
                                                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                        "label": "MuiButton-label",
                                                        "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                      }
                                                    }
                                                    component="button"
                                                    disableRipple={false}
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName=""
                                                    onClick={[Function]}
                                                  >
                                                    <MuiButtonBaseRoot
                                                      as="button"
                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root  css-1e6v7v4-MuiButton-root"
                                                      classes={
                                                        Object {
                                                          "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                          "label": "MuiButton-label",
                                                          "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                          "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onContextMenu={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      ownerState={
                                                        Object {
                                                          "centerRipple": false,
                                                          "children": Array [
                                                            undefined,
                                                            <ForwardRef(Paper)
                                                              elevation={5}
                                                              sx={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "gap": "25px",
                                                                  "height": 600,
                                                                  "padding": 3,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(Typography)
                                                                align="center"
                                                                color="secondary"
                                                                variant="h3"
                                                              >
                                                                Generative Art
                                                              </ForwardRef(Typography)>
                                                              <ForwardRef(Box)
                                                                sx={
                                                                  Object {
                                                                    "height": 200,
                                                                    "width": 300,
                                                                  }
                                                                }
                                                              >
                                                                <img
                                                                  alt="Generative Art-img"
                                                                  src="generative-icon.svg"
                                                                  style={
                                                                    Object {
                                                                      "height": "100%",
                                                                      "width": "100%",
                                                                    }
                                                                  }
                                                                />
                                                              </ForwardRef(Box)>
                                                              <ForwardRef(Typography)
                                                                color="primary"
                                                                sx={
                                                                  Object {
                                                                    "textAlign": "left",
                                                                    "textTransform": "none",
                                                                  }
                                                                }
                                                                variant="h6"
                                                              >
                                                                <React.Fragment>
                                                                  Dynamically generate an NFT collection using multi-layered images
                                                                  <ul
                                                                    style={
                                                                      Object {
                                                                        "marginBottom": 0,
                                                                        "marginTop": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <li>
                                                                       Provide layers you wish each NFT to include
                                                                    </li>
                                                                    <li>
                                                                       Upload your images for each layer with respective rarities
                                                                    </li>
                                                                    <li>
                                                                      Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                    </li>
                                                                  </ul>
                                                                </React.Fragment>
                                                              </ForwardRef(Typography)>
                                                            </ForwardRef(Paper)>,
                                                            undefined,
                                                          ],
                                                          "className": " css-1e6v7v4-MuiButton-root",
                                                          "classes": Object {
                                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                            "label": "MuiButton-label",
                                                            "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                          },
                                                          "component": "button",
                                                          "disableRipple": false,
                                                          "disableTouchRipple": false,
                                                          "disabled": false,
                                                          "focusRipple": true,
                                                          "focusVisible": false,
                                                          "focusVisibleClassName": "",
                                                          "onClick": [Function],
                                                          "tabIndex": 0,
                                                          "type": undefined,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <Noop />
                                                      <button
                                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root  css-1m8i7ne-MuiButtonBase-root-MuiButton-root"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <ForwardRef(Paper)
                                                          elevation={5}
                                                          sx={
                                                            Object {
                                                              "alignItems": "center",
                                                              "display": "flex",
                                                              "flexDirection": "column",
                                                              "gap": "25px",
                                                              "height": 600,
                                                              "padding": 3,
                                                            }
                                                          }
                                                        >
                                                          <MuiPaperRoot
                                                            as="div"
                                                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation5"
                                                            ownerState={
                                                              Object {
                                                                "children": Array [
                                                                  <ForwardRef(Typography)
                                                                    align="center"
                                                                    color="secondary"
                                                                    variant="h3"
                                                                  >
                                                                    Generative Art
                                                                  </ForwardRef(Typography)>,
                                                                  <ForwardRef(Box)
                                                                    sx={
                                                                      Object {
                                                                        "height": 200,
                                                                        "width": 300,
                                                                      }
                                                                    }
                                                                  >
                                                                    <img
                                                                      alt="Generative Art-img"
                                                                      src="generative-icon.svg"
                                                                      style={
                                                                        Object {
                                                                          "height": "100%",
                                                                          "width": "100%",
                                                                        }
                                                                      }
                                                                    />
                                                                  </ForwardRef(Box)>,
                                                                  <ForwardRef(Typography)
                                                                    color="primary"
                                                                    sx={
                                                                      Object {
                                                                        "textAlign": "left",
                                                                        "textTransform": "none",
                                                                      }
                                                                    }
                                                                    variant="h6"
                                                                  >
                                                                    <React.Fragment>
                                                                      Dynamically generate an NFT collection using multi-layered images
                                                                      <ul
                                                                        style={
                                                                          Object {
                                                                            "marginBottom": 0,
                                                                            "marginTop": 0,
                                                                          }
                                                                        }
                                                                      >
                                                                        <li>
                                                                           Provide layers you wish each NFT to include
                                                                        </li>
                                                                        <li>
                                                                           Upload your images for each layer with respective rarities
                                                                        </li>
                                                                        <li>
                                                                          Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                        </li>
                                                                      </ul>
                                                                    </React.Fragment>
                                                                  </ForwardRef(Typography)>,
                                                                ],
                                                                "component": "div",
                                                                "elevation": 5,
                                                                "square": false,
                                                                "sx": Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "gap": "25px",
                                                                  "height": 600,
                                                                  "padding": 3,
                                                                },
                                                                "variant": "elevation",
                                                              }
                                                            }
                                                            sx={
                                                              Object {
                                                                "alignItems": "center",
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "gap": "25px",
                                                                "height": 600,
                                                                "padding": 3,
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <div
                                                              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation5 css-1k3h6nb-MuiPaper-root"
                                                            >
                                                              <ForwardRef(Typography)
                                                                align="center"
                                                                color="secondary"
                                                                variant="h3"
                                                              >
                                                                <MuiTypographyRoot
                                                                  as="h3"
                                                                  className="MuiTypography-root MuiTypography-h3 MuiTypography-alignCenter"
                                                                  ownerState={
                                                                    Object {
                                                                      "align": "center",
                                                                      "children": "Generative Art",
                                                                      "className": undefined,
                                                                      "color": "secondary.main",
                                                                      "component": undefined,
                                                                      "gutterBottom": false,
                                                                      "noWrap": false,
                                                                      "paragraph": false,
                                                                      "sx": Object {
                                                                        "color": "secondary.main",
                                                                      },
                                                                      "variant": "h3",
                                                                      "variantMapping": Object {
                                                                        "body1": "p",
                                                                        "body2": "p",
                                                                        "h1": "h1",
                                                                        "h2": "h2",
                                                                        "h3": "h3",
                                                                        "h4": "h4",
                                                                        "h5": "h5",
                                                                        "h6": "h6",
                                                                        "inherit": "p",
                                                                        "subtitle1": "h6",
                                                                        "subtitle2": "h6",
                                                                      },
                                                                    }
                                                                  }
                                                                  sx={
                                                                    Object {
                                                                      "color": "secondary.main",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <h3
                                                                    className="MuiTypography-root MuiTypography-h3 MuiTypography-alignCenter css-1qo4mdr-MuiTypography-root"
                                                                  >
                                                                    Generative Art
                                                                  </h3>
                                                                </MuiTypographyRoot>
                                                              </ForwardRef(Typography)>
                                                              <ForwardRef(Box)
                                                                sx={
                                                                  Object {
                                                                    "height": 200,
                                                                    "width": 300,
                                                                  }
                                                                }
                                                              >
                                                                <Styled(div)
                                                                  as="div"
                                                                  className="MuiBox-root"
                                                                  sx={
                                                                    Object {
                                                                      "height": 200,
                                                                      "width": 300,
                                                                    }
                                                                  }
                                                                  theme={
                                                                    Object {
                                                                      "breakpoints": Object {
                                                                        "between": [Function],
                                                                        "down": [Function],
                                                                        "keys": Array [
                                                                          "xs",
                                                                          "sm",
                                                                          "md",
                                                                          "lg",
                                                                          "xl",
                                                                        ],
                                                                        "only": [Function],
                                                                        "unit": "px",
                                                                        "up": [Function],
                                                                        "values": Object {
                                                                          "lg": 1200,
                                                                          "md": 900,
                                                                          "sm": 600,
                                                                          "xl": 1536,
                                                                          "xs": 0,
                                                                        },
                                                                      },
                                                                      "components": Object {},
                                                                      "direction": "ltr",
                                                                      "mixins": Object {
                                                                        "toolbar": Object {
                                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                            "minHeight": 48,
                                                                          },
                                                                          "@media (min-width:600px)": Object {
                                                                            "minHeight": 64,
                                                                          },
                                                                          "minHeight": 56,
                                                                        },
                                                                      },
                                                                      "palette": Object {
                                                                        "action": Object {
                                                                          "activatedOpacity": 0.12,
                                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                          "disabledOpacity": 0.38,
                                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                                          "focusOpacity": 0.12,
                                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                                          "hoverOpacity": 0.04,
                                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                                          "selectedOpacity": 0.08,
                                                                        },
                                                                        "augmentColor": [Function],
                                                                        "background": Object {
                                                                          "default": "#F0F0F0",
                                                                          "paper": "#fff",
                                                                        },
                                                                        "common": Object {
                                                                          "black": "#000",
                                                                          "white": "#fff",
                                                                        },
                                                                        "contrastThreshold": 3,
                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                        "error": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#c62828",
                                                                          "light": "#ef5350",
                                                                          "main": "#d32f2f",
                                                                        },
                                                                        "getContrastText": [Function],
                                                                        "grey": Object {
                                                                          "100": "#f5f5f5",
                                                                          "200": "#eeeeee",
                                                                          "300": "#e0e0e0",
                                                                          "400": "#bdbdbd",
                                                                          "50": "#fafafa",
                                                                          "500": "#9e9e9e",
                                                                          "600": "#757575",
                                                                          "700": "#616161",
                                                                          "800": "#424242",
                                                                          "900": "#212121",
                                                                          "A100": "#f5f5f5",
                                                                          "A200": "#eeeeee",
                                                                          "A400": "#bdbdbd",
                                                                          "A700": "#616161",
                                                                        },
                                                                        "info": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#01579b",
                                                                          "light": "#03a9f4",
                                                                          "main": "#0288d1",
                                                                        },
                                                                        "mode": "light",
                                                                        "primary": Object {
                                                                          "100": "#b2ebf2",
                                                                          "200": "#80deea",
                                                                          "300": "#4dd0e1",
                                                                          "400": "#26c6da",
                                                                          "50": "#e0f7fa",
                                                                          "500": "#00bcd4",
                                                                          "600": "#00acc1",
                                                                          "700": "#0097a7",
                                                                          "800": "#00838f",
                                                                          "900": "#006064",
                                                                          "A100": "#84ffff",
                                                                          "A200": "#18ffff",
                                                                          "A400": "#00e5ff",
                                                                          "A700": "#00b8d4",
                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                          "dark": "#0097a7",
                                                                          "light": "#4dd0e1",
                                                                          "main": "#00bcd4",
                                                                        },
                                                                        "secondary": Object {
                                                                          "100": "#f8bbd0",
                                                                          "200": "#f48fb1",
                                                                          "300": "#f06292",
                                                                          "400": "#ec407a",
                                                                          "50": "#fce4ec",
                                                                          "500": "#e91e63",
                                                                          "600": "#d81b60",
                                                                          "700": "#c2185b",
                                                                          "800": "#ad1457",
                                                                          "900": "#880e4f",
                                                                          "A100": "#ff80ab",
                                                                          "A200": "#ff4081",
                                                                          "A400": "#f50057",
                                                                          "A700": "#c51162",
                                                                          "contrastText": "#fff",
                                                                          "dark": "#c51162",
                                                                          "light": "#ff4081",
                                                                          "main": "#f50057",
                                                                        },
                                                                        "success": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#1b5e20",
                                                                          "light": "#4caf50",
                                                                          "main": "#2e7d32",
                                                                        },
                                                                        "text": Object {
                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                                                        },
                                                                        "tonalOffset": 0.2,
                                                                        "warning": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#e65100",
                                                                          "light": "#ff9800",
                                                                          "main": "#ed6c02",
                                                                        },
                                                                      },
                                                                      "shadows": Array [
                                                                        "none",
                                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                      ],
                                                                      "shape": Object {
                                                                        "borderRadius": 4,
                                                                      },
                                                                      "spacing": [Function],
                                                                      "transitions": Object {
                                                                        "create": [Function],
                                                                        "duration": Object {
                                                                          "complex": 375,
                                                                          "enteringScreen": 225,
                                                                          "leavingScreen": 195,
                                                                          "short": 250,
                                                                          "shorter": 200,
                                                                          "shortest": 150,
                                                                          "standard": 300,
                                                                        },
                                                                        "easing": Object {
                                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                        },
                                                                        "getAutoHeightDuration": [Function],
                                                                      },
                                                                      "typography": Object {
                                                                        "body1": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.00938em",
                                                                          "lineHeight": 1.5,
                                                                        },
                                                                        "body2": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.875rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.01071em",
                                                                          "lineHeight": 1.43,
                                                                        },
                                                                        "button": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.875rem",
                                                                          "fontWeight": 500,
                                                                          "letterSpacing": "0.02857em",
                                                                          "lineHeight": 1.75,
                                                                          "textTransform": "uppercase",
                                                                        },
                                                                        "caption": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.75rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.03333em",
                                                                          "lineHeight": 1.66,
                                                                        },
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": 14,
                                                                        "fontWeightBold": 700,
                                                                        "fontWeightLight": 300,
                                                                        "fontWeightMedium": 500,
                                                                        "fontWeightRegular": 400,
                                                                        "h1": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "6rem",
                                                                          "fontWeight": 300,
                                                                          "letterSpacing": "-0.01562em",
                                                                          "lineHeight": 1.167,
                                                                        },
                                                                        "h2": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "3.75rem",
                                                                          "fontWeight": 300,
                                                                          "letterSpacing": "-0.00833em",
                                                                          "lineHeight": 1.2,
                                                                        },
                                                                        "h3": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "3rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0em",
                                                                          "lineHeight": 1.167,
                                                                        },
                                                                        "h4": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "2.125rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.00735em",
                                                                          "lineHeight": 1.235,
                                                                        },
                                                                        "h5": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1.5rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0em",
                                                                          "lineHeight": 1.334,
                                                                        },
                                                                        "h6": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1.25rem",
                                                                          "fontWeight": 500,
                                                                          "letterSpacing": "0.0075em",
                                                                          "lineHeight": 1.6,
                                                                        },
                                                                        "htmlFontSize": 16,
                                                                        "overline": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.75rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.08333em",
                                                                          "lineHeight": 2.66,
                                                                          "textTransform": "uppercase",
                                                                        },
                                                                        "pxToRem": [Function],
                                                                        "subtitle1": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.00938em",
                                                                          "lineHeight": 1.75,
                                                                        },
                                                                        "subtitle2": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.875rem",
                                                                          "fontWeight": 500,
                                                                          "letterSpacing": "0.00714em",
                                                                          "lineHeight": 1.57,
                                                                        },
                                                                      },
                                                                      "zIndex": Object {
                                                                        "appBar": 1100,
                                                                        "drawer": 1200,
                                                                        "mobileStepper": 1000,
                                                                        "modal": 1300,
                                                                        "snackbar": 1400,
                                                                        "speedDial": 1050,
                                                                        "tooltip": 1500,
                                                                      },
                                                                      Symbol(mui.nested): false,
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <div
                                                                    className="MuiBox-root css-1bce2f6"
                                                                  >
                                                                    <img
                                                                      alt="Generative Art-img"
                                                                      src="generative-icon.svg"
                                                                      style={
                                                                        Object {
                                                                          "height": "100%",
                                                                          "width": "100%",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </Styled(div)>
                                                              </ForwardRef(Box)>
                                                              <ForwardRef(Typography)
                                                                color="primary"
                                                                sx={
                                                                  Object {
                                                                    "textAlign": "left",
                                                                    "textTransform": "none",
                                                                  }
                                                                }
                                                                variant="h6"
                                                              >
                                                                <MuiTypographyRoot
                                                                  as="h6"
                                                                  className="MuiTypography-root MuiTypography-h6"
                                                                  ownerState={
                                                                    Object {
                                                                      "align": "inherit",
                                                                      "children": <React.Fragment>
                                                                        Dynamically generate an NFT collection using multi-layered images
                                                                        <ul
                                                                          style={
                                                                            Object {
                                                                              "marginBottom": 0,
                                                                              "marginTop": 0,
                                                                            }
                                                                          }
                                                                        >
                                                                          <li>
                                                                             Provide layers you wish each NFT to include
                                                                          </li>
                                                                          <li>
                                                                             Upload your images for each layer with respective rarities
                                                                          </li>
                                                                          <li>
                                                                            Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                          </li>
                                                                        </ul>
                                                                      </React.Fragment>,
                                                                      "className": undefined,
                                                                      "color": "primary.main",
                                                                      "component": undefined,
                                                                      "gutterBottom": false,
                                                                      "noWrap": false,
                                                                      "paragraph": false,
                                                                      "sx": Object {
                                                                        "color": "primary.main",
                                                                        "textAlign": "left",
                                                                        "textTransform": "none",
                                                                      },
                                                                      "variant": "h6",
                                                                      "variantMapping": Object {
                                                                        "body1": "p",
                                                                        "body2": "p",
                                                                        "h1": "h1",
                                                                        "h2": "h2",
                                                                        "h3": "h3",
                                                                        "h4": "h4",
                                                                        "h5": "h5",
                                                                        "h6": "h6",
                                                                        "inherit": "p",
                                                                        "subtitle1": "h6",
                                                                        "subtitle2": "h6",
                                                                      },
                                                                    }
                                                                  }
                                                                  sx={
                                                                    Object {
                                                                      "color": "primary.main",
                                                                      "textAlign": "left",
                                                                      "textTransform": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <h6
                                                                    className="MuiTypography-root MuiTypography-h6 css-1kqmr02-MuiTypography-root"
                                                                  >
                                                                    Dynamically generate an NFT collection using multi-layered images
                                                                    <ul
                                                                      style={
                                                                        Object {
                                                                          "marginBottom": 0,
                                                                          "marginTop": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <li>
                                                                         Provide layers you wish each NFT to include
                                                                      </li>
                                                                      <li>
                                                                         Upload your images for each layer with respective rarities
                                                                      </li>
                                                                      <li>
                                                                        Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                      </li>
                                                                    </ul>
                                                                  </h6>
                                                                </MuiTypographyRoot>
                                                              </ForwardRef(Typography)>
                                                            </div>
                                                          </MuiPaperRoot>
                                                        </ForwardRef(Paper)>
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                        >
                                                          <MuiTouchRippleRoot
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <Noop />
                                                            <span
                                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </MuiTouchRippleRoot>
                                                        </ForwardRef(TouchRipple)>
                                                      </button>
                                                    </MuiButtonBaseRoot>
                                                  </ForwardRef(ButtonBase)>
                                                </MuiButtonRoot>
                                              </ForwardRef(Button)>
                                            </div>
                                          </Styled(div)>
                                        </ForwardRef(Box)>
                                      </div>
                                    </MuiGridRoot>
                                  </ForwardRef(Grid)>
                                </ChoiceCard>
                                <ChoiceCard
                                  description={
                                    <React.Fragment>
                                      Create a static NFT collection
                                      <ul
                                        style={
                                          Object {
                                            "marginBottom": 0,
                                            "marginTop": 0,
                                          }
                                        }
                                      >
                                        <li>
                                          Upload all of your static images
                                        </li>
                                        <li>
                                          Give each image a name and a description
                                        </li>
                                        <li>
                                          Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                        </li>
                                      </ul>
                                    </React.Fragment>
                                  }
                                  handleCardClick={[Function]}
                                  imgSrc="static-icon.svg"
                                  title="Static Art"
                                >
                                  <ForwardRef(Grid)
                                    item={true}
                                    md={6}
                                    xs={12}
                                  >
                                    <MuiGridRoot
                                      as="div"
                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                      ownerState={
                                        Object {
                                          "children": <ForwardRef(Box)
                                            sx={
                                              Object {
                                                "bgcolor": "background.paper",
                                              }
                                            }
                                          >
                                            <ForwardRef(Button)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(Paper)
                                                elevation={5}
                                                sx={
                                                  Object {
                                                    "alignItems": "center",
                                                    "display": "flex",
                                                    "flexDirection": "column",
                                                    "gap": "25px",
                                                    "height": 600,
                                                    "padding": 3,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Typography)
                                                  align="center"
                                                  color="secondary"
                                                  variant="h3"
                                                >
                                                  Static Art
                                                </ForwardRef(Typography)>
                                                <ForwardRef(Box)
                                                  sx={
                                                    Object {
                                                      "height": 200,
                                                      "width": 300,
                                                    }
                                                  }
                                                >
                                                  <img
                                                    alt="Static Art-img"
                                                    src="static-icon.svg"
                                                    style={
                                                      Object {
                                                        "height": "100%",
                                                        "width": "100%",
                                                      }
                                                    }
                                                  />
                                                </ForwardRef(Box)>
                                                <ForwardRef(Typography)
                                                  color="primary"
                                                  sx={
                                                    Object {
                                                      "textAlign": "left",
                                                      "textTransform": "none",
                                                    }
                                                  }
                                                  variant="h6"
                                                >
                                                  <React.Fragment>
                                                    Create a static NFT collection
                                                    <ul
                                                      style={
                                                        Object {
                                                          "marginBottom": 0,
                                                          "marginTop": 0,
                                                        }
                                                      }
                                                    >
                                                      <li>
                                                        Upload all of your static images
                                                      </li>
                                                      <li>
                                                        Give each image a name and a description
                                                      </li>
                                                      <li>
                                                        Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                      </li>
                                                    </ul>
                                                  </React.Fragment>
                                                </ForwardRef(Typography)>
                                              </ForwardRef(Paper)>
                                            </ForwardRef(Button)>
                                          </ForwardRef(Box)>,
                                          "columnSpacing": 0,
                                          "columns": 12,
                                          "container": false,
                                          "direction": "row",
                                          "item": true,
                                          "lg": false,
                                          "md": 6,
                                          "rowSpacing": 0,
                                          "sm": false,
                                          "sx": Object {},
                                          "wrap": "wrap",
                                          "xl": false,
                                          "xs": 12,
                                          "zeroMinWidth": false,
                                        }
                                      }
                                      sx={Object {}}
                                    >
                                      <Noop />
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 css-1tp3ba8-MuiGrid-root"
                                      >
                                        <ForwardRef(Box)
                                          sx={
                                            Object {
                                              "bgcolor": "background.paper",
                                            }
                                          }
                                        >
                                          <Styled(div)
                                            as="div"
                                            className="MuiBox-root"
                                            sx={
                                              Object {
                                                "bgcolor": "background.paper",
                                              }
                                            }
                                            theme={
                                              Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "unit": "px",
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1200,
                                                    "md": 900,
                                                    "sm": 600,
                                                    "xl": 1536,
                                                    "xs": 0,
                                                  },
                                                },
                                                "components": Object {},
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "palette": Object {
                                                  "action": Object {
                                                    "activatedOpacity": 0.12,
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "disabledOpacity": 0.38,
                                                    "focus": "rgba(0, 0, 0, 0.12)",
                                                    "focusOpacity": 0.12,
                                                    "hover": "rgba(0, 0, 0, 0.04)",
                                                    "hoverOpacity": 0.04,
                                                    "selected": "rgba(0, 0, 0, 0.08)",
                                                    "selectedOpacity": 0.08,
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#F0F0F0",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c62828",
                                                    "light": "#ef5350",
                                                    "main": "#d32f2f",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#f5f5f5",
                                                    "A200": "#eeeeee",
                                                    "A400": "#bdbdbd",
                                                    "A700": "#616161",
                                                  },
                                                  "info": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#01579b",
                                                    "light": "#03a9f4",
                                                    "main": "#0288d1",
                                                  },
                                                  "mode": "light",
                                                  "primary": Object {
                                                    "100": "#b2ebf2",
                                                    "200": "#80deea",
                                                    "300": "#4dd0e1",
                                                    "400": "#26c6da",
                                                    "50": "#e0f7fa",
                                                    "500": "#00bcd4",
                                                    "600": "#00acc1",
                                                    "700": "#0097a7",
                                                    "800": "#00838f",
                                                    "900": "#006064",
                                                    "A100": "#84ffff",
                                                    "A200": "#18ffff",
                                                    "A400": "#00e5ff",
                                                    "A700": "#00b8d4",
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#0097a7",
                                                    "light": "#4dd0e1",
                                                    "main": "#00bcd4",
                                                  },
                                                  "secondary": Object {
                                                    "100": "#f8bbd0",
                                                    "200": "#f48fb1",
                                                    "300": "#f06292",
                                                    "400": "#ec407a",
                                                    "50": "#fce4ec",
                                                    "500": "#e91e63",
                                                    "600": "#d81b60",
                                                    "700": "#c2185b",
                                                    "800": "#ad1457",
                                                    "900": "#880e4f",
                                                    "A100": "#ff80ab",
                                                    "A200": "#ff4081",
                                                    "A400": "#f50057",
                                                    "A700": "#c51162",
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "success": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#1b5e20",
                                                    "light": "#4caf50",
                                                    "main": "#2e7d32",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.6)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "warning": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#e65100",
                                                    "light": "#ff9800",
                                                    "main": "#ed6c02",
                                                  },
                                                },
                                                "shadows": Array [
                                                  "none",
                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1.2,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.235,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.334,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "speedDial": 1050,
                                                  "tooltip": 1500,
                                                },
                                                Symbol(mui.nested): false,
                                              }
                                            }
                                          >
                                            <Noop />
                                            <div
                                              className="MuiBox-root css-1k9ek97"
                                            >
                                              <ForwardRef(Button)
                                                onClick={[Function]}
                                              >
                                                <MuiButtonRoot
                                                  className=""
                                                  classes={
                                                    Object {
                                                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                      "label": "MuiButton-label",
                                                      "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                    }
                                                  }
                                                  component="button"
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName=""
                                                  onClick={[Function]}
                                                  ownerState={
                                                    Object {
                                                      "children": <ForwardRef(Paper)
                                                        elevation={5}
                                                        sx={
                                                          Object {
                                                            "alignItems": "center",
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "gap": "25px",
                                                            "height": 600,
                                                            "padding": 3,
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(Typography)
                                                          align="center"
                                                          color="secondary"
                                                          variant="h3"
                                                        >
                                                          Static Art
                                                        </ForwardRef(Typography)>
                                                        <ForwardRef(Box)
                                                          sx={
                                                            Object {
                                                              "height": 200,
                                                              "width": 300,
                                                            }
                                                          }
                                                        >
                                                          <img
                                                            alt="Static Art-img"
                                                            src="static-icon.svg"
                                                            style={
                                                              Object {
                                                                "height": "100%",
                                                                "width": "100%",
                                                              }
                                                            }
                                                          />
                                                        </ForwardRef(Box)>
                                                        <ForwardRef(Typography)
                                                          color="primary"
                                                          sx={
                                                            Object {
                                                              "textAlign": "left",
                                                              "textTransform": "none",
                                                            }
                                                          }
                                                          variant="h6"
                                                        >
                                                          <React.Fragment>
                                                            Create a static NFT collection
                                                            <ul
                                                              style={
                                                                Object {
                                                                  "marginBottom": 0,
                                                                  "marginTop": 0,
                                                                }
                                                              }
                                                            >
                                                              <li>
                                                                Upload all of your static images
                                                              </li>
                                                              <li>
                                                                Give each image a name and a description
                                                              </li>
                                                              <li>
                                                                Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                              </li>
                                                            </ul>
                                                          </React.Fragment>
                                                        </ForwardRef(Typography)>
                                                      </ForwardRef(Paper)>,
                                                      "color": "primary",
                                                      "component": "button",
                                                      "disableElevation": false,
                                                      "disableFocusRipple": false,
                                                      "disabled": false,
                                                      "fullWidth": false,
                                                      "onClick": [Function],
                                                      "size": "medium",
                                                      "type": undefined,
                                                      "variant": "text",
                                                    }
                                                  }
                                                >
                                                  <Noop />
                                                  <ForwardRef(ButtonBase)
                                                    className=" css-1e6v7v4-MuiButton-root"
                                                    classes={
                                                      Object {
                                                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                        "label": "MuiButton-label",
                                                        "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                      }
                                                    }
                                                    component="button"
                                                    disableRipple={false}
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName=""
                                                    onClick={[Function]}
                                                  >
                                                    <MuiButtonBaseRoot
                                                      as="button"
                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root  css-1e6v7v4-MuiButton-root"
                                                      classes={
                                                        Object {
                                                          "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                          "label": "MuiButton-label",
                                                          "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                          "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                        }
                                                      }
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onContextMenu={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      ownerState={
                                                        Object {
                                                          "centerRipple": false,
                                                          "children": Array [
                                                            undefined,
                                                            <ForwardRef(Paper)
                                                              elevation={5}
                                                              sx={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "gap": "25px",
                                                                  "height": 600,
                                                                  "padding": 3,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(Typography)
                                                                align="center"
                                                                color="secondary"
                                                                variant="h3"
                                                              >
                                                                Static Art
                                                              </ForwardRef(Typography)>
                                                              <ForwardRef(Box)
                                                                sx={
                                                                  Object {
                                                                    "height": 200,
                                                                    "width": 300,
                                                                  }
                                                                }
                                                              >
                                                                <img
                                                                  alt="Static Art-img"
                                                                  src="static-icon.svg"
                                                                  style={
                                                                    Object {
                                                                      "height": "100%",
                                                                      "width": "100%",
                                                                    }
                                                                  }
                                                                />
                                                              </ForwardRef(Box)>
                                                              <ForwardRef(Typography)
                                                                color="primary"
                                                                sx={
                                                                  Object {
                                                                    "textAlign": "left",
                                                                    "textTransform": "none",
                                                                  }
                                                                }
                                                                variant="h6"
                                                              >
                                                                <React.Fragment>
                                                                  Create a static NFT collection
                                                                  <ul
                                                                    style={
                                                                      Object {
                                                                        "marginBottom": 0,
                                                                        "marginTop": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <li>
                                                                      Upload all of your static images
                                                                    </li>
                                                                    <li>
                                                                      Give each image a name and a description
                                                                    </li>
                                                                    <li>
                                                                      Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                    </li>
                                                                  </ul>
                                                                </React.Fragment>
                                                              </ForwardRef(Typography)>
                                                            </ForwardRef(Paper)>,
                                                            undefined,
                                                          ],
                                                          "className": " css-1e6v7v4-MuiButton-root",
                                                          "classes": Object {
                                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                            "label": "MuiButton-label",
                                                            "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                          },
                                                          "component": "button",
                                                          "disableRipple": false,
                                                          "disableTouchRipple": false,
                                                          "disabled": false,
                                                          "focusRipple": true,
                                                          "focusVisible": false,
                                                          "focusVisibleClassName": "",
                                                          "onClick": [Function],
                                                          "tabIndex": 0,
                                                          "type": undefined,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <Noop />
                                                      <button
                                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root  css-1m8i7ne-MuiButtonBase-root-MuiButton-root"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onContextMenu={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <ForwardRef(Paper)
                                                          elevation={5}
                                                          sx={
                                                            Object {
                                                              "alignItems": "center",
                                                              "display": "flex",
                                                              "flexDirection": "column",
                                                              "gap": "25px",
                                                              "height": 600,
                                                              "padding": 3,
                                                            }
                                                          }
                                                        >
                                                          <MuiPaperRoot
                                                            as="div"
                                                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation5"
                                                            ownerState={
                                                              Object {
                                                                "children": Array [
                                                                  <ForwardRef(Typography)
                                                                    align="center"
                                                                    color="secondary"
                                                                    variant="h3"
                                                                  >
                                                                    Static Art
                                                                  </ForwardRef(Typography)>,
                                                                  <ForwardRef(Box)
                                                                    sx={
                                                                      Object {
                                                                        "height": 200,
                                                                        "width": 300,
                                                                      }
                                                                    }
                                                                  >
                                                                    <img
                                                                      alt="Static Art-img"
                                                                      src="static-icon.svg"
                                                                      style={
                                                                        Object {
                                                                          "height": "100%",
                                                                          "width": "100%",
                                                                        }
                                                                      }
                                                                    />
                                                                  </ForwardRef(Box)>,
                                                                  <ForwardRef(Typography)
                                                                    color="primary"
                                                                    sx={
                                                                      Object {
                                                                        "textAlign": "left",
                                                                        "textTransform": "none",
                                                                      }
                                                                    }
                                                                    variant="h6"
                                                                  >
                                                                    <React.Fragment>
                                                                      Create a static NFT collection
                                                                      <ul
                                                                        style={
                                                                          Object {
                                                                            "marginBottom": 0,
                                                                            "marginTop": 0,
                                                                          }
                                                                        }
                                                                      >
                                                                        <li>
                                                                          Upload all of your static images
                                                                        </li>
                                                                        <li>
                                                                          Give each image a name and a description
                                                                        </li>
                                                                        <li>
                                                                          Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                        </li>
                                                                      </ul>
                                                                    </React.Fragment>
                                                                  </ForwardRef(Typography)>,
                                                                ],
                                                                "component": "div",
                                                                "elevation": 5,
                                                                "square": false,
                                                                "sx": Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "gap": "25px",
                                                                  "height": 600,
                                                                  "padding": 3,
                                                                },
                                                                "variant": "elevation",
                                                              }
                                                            }
                                                            sx={
                                                              Object {
                                                                "alignItems": "center",
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "gap": "25px",
                                                                "height": 600,
                                                                "padding": 3,
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <div
                                                              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation5 css-1k3h6nb-MuiPaper-root"
                                                            >
                                                              <ForwardRef(Typography)
                                                                align="center"
                                                                color="secondary"
                                                                variant="h3"
                                                              >
                                                                <MuiTypographyRoot
                                                                  as="h3"
                                                                  className="MuiTypography-root MuiTypography-h3 MuiTypography-alignCenter"
                                                                  ownerState={
                                                                    Object {
                                                                      "align": "center",
                                                                      "children": "Static Art",
                                                                      "className": undefined,
                                                                      "color": "secondary.main",
                                                                      "component": undefined,
                                                                      "gutterBottom": false,
                                                                      "noWrap": false,
                                                                      "paragraph": false,
                                                                      "sx": Object {
                                                                        "color": "secondary.main",
                                                                      },
                                                                      "variant": "h3",
                                                                      "variantMapping": Object {
                                                                        "body1": "p",
                                                                        "body2": "p",
                                                                        "h1": "h1",
                                                                        "h2": "h2",
                                                                        "h3": "h3",
                                                                        "h4": "h4",
                                                                        "h5": "h5",
                                                                        "h6": "h6",
                                                                        "inherit": "p",
                                                                        "subtitle1": "h6",
                                                                        "subtitle2": "h6",
                                                                      },
                                                                    }
                                                                  }
                                                                  sx={
                                                                    Object {
                                                                      "color": "secondary.main",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <h3
                                                                    className="MuiTypography-root MuiTypography-h3 MuiTypography-alignCenter css-1qo4mdr-MuiTypography-root"
                                                                  >
                                                                    Static Art
                                                                  </h3>
                                                                </MuiTypographyRoot>
                                                              </ForwardRef(Typography)>
                                                              <ForwardRef(Box)
                                                                sx={
                                                                  Object {
                                                                    "height": 200,
                                                                    "width": 300,
                                                                  }
                                                                }
                                                              >
                                                                <Styled(div)
                                                                  as="div"
                                                                  className="MuiBox-root"
                                                                  sx={
                                                                    Object {
                                                                      "height": 200,
                                                                      "width": 300,
                                                                    }
                                                                  }
                                                                  theme={
                                                                    Object {
                                                                      "breakpoints": Object {
                                                                        "between": [Function],
                                                                        "down": [Function],
                                                                        "keys": Array [
                                                                          "xs",
                                                                          "sm",
                                                                          "md",
                                                                          "lg",
                                                                          "xl",
                                                                        ],
                                                                        "only": [Function],
                                                                        "unit": "px",
                                                                        "up": [Function],
                                                                        "values": Object {
                                                                          "lg": 1200,
                                                                          "md": 900,
                                                                          "sm": 600,
                                                                          "xl": 1536,
                                                                          "xs": 0,
                                                                        },
                                                                      },
                                                                      "components": Object {},
                                                                      "direction": "ltr",
                                                                      "mixins": Object {
                                                                        "toolbar": Object {
                                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                            "minHeight": 48,
                                                                          },
                                                                          "@media (min-width:600px)": Object {
                                                                            "minHeight": 64,
                                                                          },
                                                                          "minHeight": 56,
                                                                        },
                                                                      },
                                                                      "palette": Object {
                                                                        "action": Object {
                                                                          "activatedOpacity": 0.12,
                                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                          "disabledOpacity": 0.38,
                                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                                          "focusOpacity": 0.12,
                                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                                          "hoverOpacity": 0.04,
                                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                                          "selectedOpacity": 0.08,
                                                                        },
                                                                        "augmentColor": [Function],
                                                                        "background": Object {
                                                                          "default": "#F0F0F0",
                                                                          "paper": "#fff",
                                                                        },
                                                                        "common": Object {
                                                                          "black": "#000",
                                                                          "white": "#fff",
                                                                        },
                                                                        "contrastThreshold": 3,
                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                        "error": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#c62828",
                                                                          "light": "#ef5350",
                                                                          "main": "#d32f2f",
                                                                        },
                                                                        "getContrastText": [Function],
                                                                        "grey": Object {
                                                                          "100": "#f5f5f5",
                                                                          "200": "#eeeeee",
                                                                          "300": "#e0e0e0",
                                                                          "400": "#bdbdbd",
                                                                          "50": "#fafafa",
                                                                          "500": "#9e9e9e",
                                                                          "600": "#757575",
                                                                          "700": "#616161",
                                                                          "800": "#424242",
                                                                          "900": "#212121",
                                                                          "A100": "#f5f5f5",
                                                                          "A200": "#eeeeee",
                                                                          "A400": "#bdbdbd",
                                                                          "A700": "#616161",
                                                                        },
                                                                        "info": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#01579b",
                                                                          "light": "#03a9f4",
                                                                          "main": "#0288d1",
                                                                        },
                                                                        "mode": "light",
                                                                        "primary": Object {
                                                                          "100": "#b2ebf2",
                                                                          "200": "#80deea",
                                                                          "300": "#4dd0e1",
                                                                          "400": "#26c6da",
                                                                          "50": "#e0f7fa",
                                                                          "500": "#00bcd4",
                                                                          "600": "#00acc1",
                                                                          "700": "#0097a7",
                                                                          "800": "#00838f",
                                                                          "900": "#006064",
                                                                          "A100": "#84ffff",
                                                                          "A200": "#18ffff",
                                                                          "A400": "#00e5ff",
                                                                          "A700": "#00b8d4",
                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                          "dark": "#0097a7",
                                                                          "light": "#4dd0e1",
                                                                          "main": "#00bcd4",
                                                                        },
                                                                        "secondary": Object {
                                                                          "100": "#f8bbd0",
                                                                          "200": "#f48fb1",
                                                                          "300": "#f06292",
                                                                          "400": "#ec407a",
                                                                          "50": "#fce4ec",
                                                                          "500": "#e91e63",
                                                                          "600": "#d81b60",
                                                                          "700": "#c2185b",
                                                                          "800": "#ad1457",
                                                                          "900": "#880e4f",
                                                                          "A100": "#ff80ab",
                                                                          "A200": "#ff4081",
                                                                          "A400": "#f50057",
                                                                          "A700": "#c51162",
                                                                          "contrastText": "#fff",
                                                                          "dark": "#c51162",
                                                                          "light": "#ff4081",
                                                                          "main": "#f50057",
                                                                        },
                                                                        "success": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#1b5e20",
                                                                          "light": "#4caf50",
                                                                          "main": "#2e7d32",
                                                                        },
                                                                        "text": Object {
                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                                                        },
                                                                        "tonalOffset": 0.2,
                                                                        "warning": Object {
                                                                          "contrastText": "#fff",
                                                                          "dark": "#e65100",
                                                                          "light": "#ff9800",
                                                                          "main": "#ed6c02",
                                                                        },
                                                                      },
                                                                      "shadows": Array [
                                                                        "none",
                                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                      ],
                                                                      "shape": Object {
                                                                        "borderRadius": 4,
                                                                      },
                                                                      "spacing": [Function],
                                                                      "transitions": Object {
                                                                        "create": [Function],
                                                                        "duration": Object {
                                                                          "complex": 375,
                                                                          "enteringScreen": 225,
                                                                          "leavingScreen": 195,
                                                                          "short": 250,
                                                                          "shorter": 200,
                                                                          "shortest": 150,
                                                                          "standard": 300,
                                                                        },
                                                                        "easing": Object {
                                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                        },
                                                                        "getAutoHeightDuration": [Function],
                                                                      },
                                                                      "typography": Object {
                                                                        "body1": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.00938em",
                                                                          "lineHeight": 1.5,
                                                                        },
                                                                        "body2": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.875rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.01071em",
                                                                          "lineHeight": 1.43,
                                                                        },
                                                                        "button": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.875rem",
                                                                          "fontWeight": 500,
                                                                          "letterSpacing": "0.02857em",
                                                                          "lineHeight": 1.75,
                                                                          "textTransform": "uppercase",
                                                                        },
                                                                        "caption": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.75rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.03333em",
                                                                          "lineHeight": 1.66,
                                                                        },
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": 14,
                                                                        "fontWeightBold": 700,
                                                                        "fontWeightLight": 300,
                                                                        "fontWeightMedium": 500,
                                                                        "fontWeightRegular": 400,
                                                                        "h1": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "6rem",
                                                                          "fontWeight": 300,
                                                                          "letterSpacing": "-0.01562em",
                                                                          "lineHeight": 1.167,
                                                                        },
                                                                        "h2": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "3.75rem",
                                                                          "fontWeight": 300,
                                                                          "letterSpacing": "-0.00833em",
                                                                          "lineHeight": 1.2,
                                                                        },
                                                                        "h3": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "3rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0em",
                                                                          "lineHeight": 1.167,
                                                                        },
                                                                        "h4": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "2.125rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.00735em",
                                                                          "lineHeight": 1.235,
                                                                        },
                                                                        "h5": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1.5rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0em",
                                                                          "lineHeight": 1.334,
                                                                        },
                                                                        "h6": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1.25rem",
                                                                          "fontWeight": 500,
                                                                          "letterSpacing": "0.0075em",
                                                                          "lineHeight": 1.6,
                                                                        },
                                                                        "htmlFontSize": 16,
                                                                        "overline": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.75rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.08333em",
                                                                          "lineHeight": 2.66,
                                                                          "textTransform": "uppercase",
                                                                        },
                                                                        "pxToRem": [Function],
                                                                        "subtitle1": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "1rem",
                                                                          "fontWeight": 400,
                                                                          "letterSpacing": "0.00938em",
                                                                          "lineHeight": 1.75,
                                                                        },
                                                                        "subtitle2": Object {
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": "0.875rem",
                                                                          "fontWeight": 500,
                                                                          "letterSpacing": "0.00714em",
                                                                          "lineHeight": 1.57,
                                                                        },
                                                                      },
                                                                      "zIndex": Object {
                                                                        "appBar": 1100,
                                                                        "drawer": 1200,
                                                                        "mobileStepper": 1000,
                                                                        "modal": 1300,
                                                                        "snackbar": 1400,
                                                                        "speedDial": 1050,
                                                                        "tooltip": 1500,
                                                                      },
                                                                      Symbol(mui.nested): false,
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <div
                                                                    className="MuiBox-root css-1bce2f6"
                                                                  >
                                                                    <img
                                                                      alt="Static Art-img"
                                                                      src="static-icon.svg"
                                                                      style={
                                                                        Object {
                                                                          "height": "100%",
                                                                          "width": "100%",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </Styled(div)>
                                                              </ForwardRef(Box)>
                                                              <ForwardRef(Typography)
                                                                color="primary"
                                                                sx={
                                                                  Object {
                                                                    "textAlign": "left",
                                                                    "textTransform": "none",
                                                                  }
                                                                }
                                                                variant="h6"
                                                              >
                                                                <MuiTypographyRoot
                                                                  as="h6"
                                                                  className="MuiTypography-root MuiTypography-h6"
                                                                  ownerState={
                                                                    Object {
                                                                      "align": "inherit",
                                                                      "children": <React.Fragment>
                                                                        Create a static NFT collection
                                                                        <ul
                                                                          style={
                                                                            Object {
                                                                              "marginBottom": 0,
                                                                              "marginTop": 0,
                                                                            }
                                                                          }
                                                                        >
                                                                          <li>
                                                                            Upload all of your static images
                                                                          </li>
                                                                          <li>
                                                                            Give each image a name and a description
                                                                          </li>
                                                                          <li>
                                                                            Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                          </li>
                                                                        </ul>
                                                                      </React.Fragment>,
                                                                      "className": undefined,
                                                                      "color": "primary.main",
                                                                      "component": undefined,
                                                                      "gutterBottom": false,
                                                                      "noWrap": false,
                                                                      "paragraph": false,
                                                                      "sx": Object {
                                                                        "color": "primary.main",
                                                                        "textAlign": "left",
                                                                        "textTransform": "none",
                                                                      },
                                                                      "variant": "h6",
                                                                      "variantMapping": Object {
                                                                        "body1": "p",
                                                                        "body2": "p",
                                                                        "h1": "h1",
                                                                        "h2": "h2",
                                                                        "h3": "h3",
                                                                        "h4": "h4",
                                                                        "h5": "h5",
                                                                        "h6": "h6",
                                                                        "inherit": "p",
                                                                        "subtitle1": "h6",
                                                                        "subtitle2": "h6",
                                                                      },
                                                                    }
                                                                  }
                                                                  sx={
                                                                    Object {
                                                                      "color": "primary.main",
                                                                      "textAlign": "left",
                                                                      "textTransform": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <h6
                                                                    className="MuiTypography-root MuiTypography-h6 css-1kqmr02-MuiTypography-root"
                                                                  >
                                                                    Create a static NFT collection
                                                                    <ul
                                                                      style={
                                                                        Object {
                                                                          "marginBottom": 0,
                                                                          "marginTop": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <li>
                                                                        Upload all of your static images
                                                                      </li>
                                                                      <li>
                                                                        Give each image a name and a description
                                                                      </li>
                                                                      <li>
                                                                        Sit back whilst we generate your NFTs via smart contracts and deploy the collection!
                                                                      </li>
                                                                    </ul>
                                                                  </h6>
                                                                </MuiTypographyRoot>
                                                              </ForwardRef(Typography)>
                                                            </div>
                                                          </MuiPaperRoot>
                                                        </ForwardRef(Paper)>
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                        >
                                                          <MuiTouchRippleRoot
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <Noop />
                                                            <span
                                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </MuiTouchRippleRoot>
                                                        </ForwardRef(TouchRipple)>
                                                      </button>
                                                    </MuiButtonBaseRoot>
                                                  </ForwardRef(ButtonBase)>
                                                </MuiButtonRoot>
                                              </ForwardRef(Button)>
                                            </div>
                                          </Styled(div)>
                                        </ForwardRef(Box)>
                                      </div>
                                    </MuiGridRoot>
                                  </ForwardRef(Grid)>
                                </ChoiceCard>
                              </div>
                            </MuiGridRoot>
                          </ForwardRef(Grid)>
                        </TypeOfArtStep>
                      </pure(TypeOfArtStep)>
                      <StaticArtStep
                        generative={false}
                        handleImgDelete={[Function]}
                        handleImgDescChange={[Function]}
                        handleImgDrop={[Function]}
                        handleImgNameChange={[Function]}
                        isLoading={false}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "quantity": "",
                              "tiers": Array [],
                              "totalTierRarity": 0,
                            },
                            "marketplace": Object {
                              "royalty": "",
                              "wanted": false,
                            },
                            "mintingPrice": "",
                            "predictions": Object {
                              "hype": -1,
                              "names": Array [],
                            },
                            "redditHandle": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                            "twitterHandle": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <TierSelectionStep
                        generative={false}
                        handleTierAdd={[Function]}
                        handleTierProbChange={[Function]}
                        handleTierRemoval={[Function]}
                        handleTierReorder={[Function]}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "quantity": "",
                              "tiers": Array [],
                              "totalTierRarity": 0,
                            },
                            "marketplace": Object {
                              "royalty": "",
                              "wanted": false,
                            },
                            "mintingPrice": "",
                            "predictions": Object {
                              "hype": -1,
                              "names": Array [],
                            },
                            "redditHandle": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                            "twitterHandle": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <LayerSelectionStep
                        generative={false}
                        handleLayerAddition={[Function]}
                        handleLayerProbChange={[Function]}
                        handleLayerRemoval={[Function]}
                        handleLayerReorder={[Function]}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "quantity": "",
                              "tiers": Array [],
                              "totalTierRarity": 0,
                            },
                            "marketplace": Object {
                              "royalty": "",
                              "wanted": false,
                            },
                            "mintingPrice": "",
                            "predictions": Object {
                              "hype": -1,
                              "names": Array [],
                            },
                            "redditHandle": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                            "twitterHandle": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <LayerImageUpload
                        generative={false}
                        handleImgRarityChange={[Function]}
                        handleLayerImgDelete={[Function]}
                        handleLayerImgDrop={[Function]}
                        handleLayerImgNameChange={[Function]}
                        handleQuantityChange={[Function]}
                        isLoading={false}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "quantity": "",
                              "tiers": Array [],
                              "totalTierRarity": 0,
                            },
                            "marketplace": Object {
                              "royalty": "",
                              "wanted": false,
                            },
                            "mintingPrice": "",
                            "predictions": Object {
                              "hype": -1,
                              "names": Array [],
                            },
                            "redditHandle": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                            "twitterHandle": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <RecommendationsStep
                        changedCollName=""
                        generative={false}
                        handleChangeCollName={[Function]}
                        isLoading={false}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "quantity": "",
                              "tiers": Array [],
                              "totalTierRarity": 0,
                            },
                            "marketplace": Object {
                              "royalty": "",
                              "wanted": false,
                            },
                            "mintingPrice": "",
                            "predictions": Object {
                              "hype": -1,
                              "names": Array [],
                            },
                            "redditHandle": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                            "twitterHandle": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <ForwardRef(Box)
                        sx={
                          Object {
                            "display": "flex",
                            "flexDirection": Object {
                              "sm": "row",
                              "xs": "column",
                            },
                            "gap": "10px",
                            "minHeight": 50,
                          }
                        }
                      >
                        <Styled(div)
                          as="div"
                          className="MuiBox-root"
                          sx={
                            Object {
                              "display": "flex",
                              "flexDirection": Object {
                                "sm": "row",
                                "xs": "column",
                              },
                              "gap": "10px",
                              "minHeight": 50,
                            }
                          }
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "unit": "px",
                                "up": [Function],
                                "values": Object {
                                  "lg": 1200,
                                  "md": 900,
                                  "sm": 600,
                                  "xl": 1536,
                                  "xs": 0,
                                },
                              },
                              "components": Object {},
                              "direction": "ltr",
                              "mixins": Object {
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "activatedOpacity": 0.12,
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "disabledOpacity": 0.38,
                                  "focus": "rgba(0, 0, 0, 0.12)",
                                  "focusOpacity": 0.12,
                                  "hover": "rgba(0, 0, 0, 0.04)",
                                  "hoverOpacity": 0.04,
                                  "selected": "rgba(0, 0, 0, 0.08)",
                                  "selectedOpacity": 0.08,
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#F0F0F0",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c62828",
                                  "light": "#ef5350",
                                  "main": "#d32f2f",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#f5f5f5",
                                  "A200": "#eeeeee",
                                  "A400": "#bdbdbd",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#01579b",
                                  "light": "#03a9f4",
                                  "main": "#0288d1",
                                },
                                "mode": "light",
                                "primary": Object {
                                  "100": "#b2ebf2",
                                  "200": "#80deea",
                                  "300": "#4dd0e1",
                                  "400": "#26c6da",
                                  "50": "#e0f7fa",
                                  "500": "#00bcd4",
                                  "600": "#00acc1",
                                  "700": "#0097a7",
                                  "800": "#00838f",
                                  "900": "#006064",
                                  "A100": "#84ffff",
                                  "A200": "#18ffff",
                                  "A400": "#00e5ff",
                                  "A700": "#00b8d4",
                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                  "dark": "#0097a7",
                                  "light": "#4dd0e1",
                                  "main": "#00bcd4",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "success": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1b5e20",
                                  "light": "#4caf50",
                                  "main": "#2e7d32",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                },
                                "tonalOffset": 0.2,
                                "warning": Object {
                                  "contrastText": "#fff",
                                  "dark": "#e65100",
                                  "light": "#ff9800",
                                  "main": "#ed6c02",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                              Symbol(mui.nested): false,
                            }
                          }
                        >
                          <Noop />
                          <div
                            className="MuiBox-root css-50gf6y"
                          >
                            <pure(FormAlert)
                              alertMessage=""
                              alertSeverity="success"
                              closeAlert={[Function]}
                            >
                              <FormAlert
                                alertMessage=""
                                alertSeverity="success"
                                closeAlert={[Function]}
                              >
                                <ForwardRef(Collapse)
                                  in={false}
                                  sx={
                                    Object {
                                      "flexGrow": 1,
                                    }
                                  }
                                >
                                  <Transition
                                    addEndListener={[Function]}
                                    appear={false}
                                    enter={true}
                                    exit={true}
                                    in={false}
                                    mountOnEnter={false}
                                    nodeRef={
                                      Object {
                                        "current": <div
                                          class="MuiCollapse-root MuiCollapse-vertical MuiCollapse-hidden css-x3e97n-MuiCollapse-root"
                                          style="min-height: 0px;"
                                        >
                                          <div
                                            class="MuiCollapse-wrapper MuiCollapse-vertical css-smkl36-MuiCollapse-wrapper"
                                          >
                                            <div
                                              class="MuiCollapse-wrapperInner MuiCollapse-vertical css-9l5vo-MuiCollapse-wrapperInner"
                                            >
                                              <div
                                                class="MuiPaper-root MuiPaper-elevation MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-secft3-MuiPaper-root-MuiAlert-root"
                                                data-testid="form-alert"
                                                role="alert"
                                              >
                                                <div
                                                  class="MuiAlert-icon css-1ytlwq5-MuiAlert-icon"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                    data-testid="SuccessOutlinedIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                                                    />
                                                  </svg>
                                                </div>
                                                <div
                                                  class="MuiAlert-message css-acap47-MuiAlert-message"
                                                />
                                                <div
                                                  class="MuiAlert-action css-ki1hdl-MuiAlert-action"
                                                >
                                                  <button
                                                    aria-label="close"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-1e0d89p-MuiButtonBase-root-MuiIconButton-root"
                                                    tabindex="0"
                                                    type="button"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                      data-testid="CloseIcon"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />
                                                    </svg>
                                                    <span
                                                      class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>,
                                      }
                                    }
                                    onEnter={[Function]}
                                    onEntered={[Function]}
                                    onEntering={[Function]}
                                    onExit={[Function]}
                                    onExited={[Function]}
                                    onExiting={[Function]}
                                    sx={
                                      Object {
                                        "flexGrow": 1,
                                      }
                                    }
                                    timeout={300}
                                    unmountOnExit={false}
                                  >
                                    <MuiCollapseRoot
                                      className="MuiCollapse-root MuiCollapse-vertical MuiCollapse-hidden"
                                      ownerState={
                                        Object {
                                          "children": <ForwardRef(Alert)
                                            action={
                                              <ForwardRef(IconButton)
                                                aria-label="close"
                                                color="inherit"
                                                onClick={[Function]}
                                                size="small"
                                              >
                                                <Memo
                                                  fontSize="inherit"
                                                />
                                              </ForwardRef(IconButton)>
                                            }
                                            data-testid="form-alert"
                                            elevation={6}
                                            severity="success"
                                            variant="filled"
                                          >
                                            
                                          </ForwardRef(Alert)>,
                                          "collapsedSize": "0px",
                                          "in": false,
                                          "orientation": "vertical",
                                          "state": "exited",
                                          "sx": Object {
                                            "flexGrow": 1,
                                          },
                                        }
                                      }
                                      style={
                                        Object {
                                          "minHeight": "0px",
                                        }
                                      }
                                      sx={
                                        Object {
                                          "flexGrow": 1,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <div
                                        className="MuiCollapse-root MuiCollapse-vertical MuiCollapse-hidden css-x3e97n-MuiCollapse-root"
                                        style={
                                          Object {
                                            "minHeight": "0px",
                                          }
                                        }
                                      >
                                        <MuiCollapseWrapper
                                          className="MuiCollapse-wrapper MuiCollapse-vertical"
                                          ownerState={
                                            Object {
                                              "children": <ForwardRef(Alert)
                                                action={
                                                  <ForwardRef(IconButton)
                                                    aria-label="close"
                                                    color="inherit"
                                                    onClick={[Function]}
                                                    size="small"
                                                  >
                                                    <Memo
                                                      fontSize="inherit"
                                                    />
                                                  </ForwardRef(IconButton)>
                                                }
                                                data-testid="form-alert"
                                                elevation={6}
                                                severity="success"
                                                variant="filled"
                                              >
                                                
                                              </ForwardRef(Alert)>,
                                              "collapsedSize": "0px",
                                              "in": false,
                                              "orientation": "vertical",
                                              "state": "exited",
                                              "sx": Object {
                                                "flexGrow": 1,
                                              },
                                            }
                                          }
                                        >
                                          <Noop />
                                          <div
                                            className="MuiCollapse-wrapper MuiCollapse-vertical css-smkl36-MuiCollapse-wrapper"
                                          >
                                            <MuiCollapseWrapperInner
                                              className="MuiCollapse-wrapperInner MuiCollapse-vertical"
                                              ownerState={
                                                Object {
                                                  "children": <ForwardRef(Alert)
                                                    action={
                                                      <ForwardRef(IconButton)
                                                        aria-label="close"
                                                        color="inherit"
                                                        onClick={[Function]}
                                                        size="small"
                                                      >
                                                        <Memo
                                                          fontSize="inherit"
                                                        />
                                                      </ForwardRef(IconButton)>
                                                    }
                                                    data-testid="form-alert"
                                                    elevation={6}
                                                    severity="success"
                                                    variant="filled"
                                                  >
                                                    
                                                  </ForwardRef(Alert)>,
                                                  "collapsedSize": "0px",
                                                  "in": false,
                                                  "orientation": "vertical",
                                                  "state": "exited",
                                                  "sx": Object {
                                                    "flexGrow": 1,
                                                  },
                                                }
                                              }
                                            >
                                              <Noop />
                                              <div
                                                className="MuiCollapse-wrapperInner MuiCollapse-vertical css-9l5vo-MuiCollapse-wrapperInner"
                                              >
                                                <ForwardRef(Alert)
                                                  action={
                                                    <ForwardRef(IconButton)
                                                      aria-label="close"
                                                      color="inherit"
                                                      onClick={[Function]}
                                                      size="small"
                                                    >
                                                      <Memo
                                                        fontSize="inherit"
                                                      />
                                                    </ForwardRef(IconButton)>
                                                  }
                                                  data-testid="form-alert"
                                                  elevation={6}
                                                  severity="success"
                                                  variant="filled"
                                                >
                                                  <MuiAlertRoot
                                                    className="MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled"
                                                    data-testid="form-alert"
                                                    elevation={6}
                                                    ownerState={
                                                      Object {
                                                        "action": <ForwardRef(IconButton)
                                                          aria-label="close"
                                                          color="inherit"
                                                          onClick={[Function]}
                                                          size="small"
                                                        >
                                                          <Memo
                                                            fontSize="inherit"
                                                          />
                                                        </ForwardRef(IconButton)>,
                                                        "children": "",
                                                        "color": undefined,
                                                        "data-testid": "form-alert",
                                                        "elevation": 6,
                                                        "severity": "success",
                                                        "variant": "filled",
                                                      }
                                                    }
                                                    role="alert"
                                                    square={true}
                                                  >
                                                    <Noop />
                                                    <ForwardRef(Paper)
                                                      className="MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-19s02ur-MuiAlert-root"
                                                      data-testid="form-alert"
                                                      elevation={6}
                                                      role="alert"
                                                      square={true}
                                                    >
                                                      <MuiPaperRoot
                                                        as="div"
                                                        className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-19s02ur-MuiAlert-root"
                                                        data-testid="form-alert"
                                                        ownerState={
                                                          Object {
                                                            "children": Array [
                                                              <MuiAlertIcon
                                                                className="MuiAlert-icon"
                                                                ownerState={
                                                                  Object {
                                                                    "action": <ForwardRef(IconButton)
                                                                      aria-label="close"
                                                                      color="inherit"
                                                                      onClick={[Function]}
                                                                      size="small"
                                                                    >
                                                                      <Memo
                                                                        fontSize="inherit"
                                                                      />
                                                                    </ForwardRef(IconButton)>,
                                                                    "children": "",
                                                                    "color": undefined,
                                                                    "data-testid": "form-alert",
                                                                    "elevation": 6,
                                                                    "severity": "success",
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                              >
                                                                <Memo
                                                                  fontSize="inherit"
                                                                />
                                                              </MuiAlertIcon>,
                                                              <MuiAlertMessage
                                                                className="MuiAlert-message"
                                                                ownerState={
                                                                  Object {
                                                                    "action": <ForwardRef(IconButton)
                                                                      aria-label="close"
                                                                      color="inherit"
                                                                      onClick={[Function]}
                                                                      size="small"
                                                                    >
                                                                      <Memo
                                                                        fontSize="inherit"
                                                                      />
                                                                    </ForwardRef(IconButton)>,
                                                                    "children": "",
                                                                    "color": undefined,
                                                                    "data-testid": "form-alert",
                                                                    "elevation": 6,
                                                                    "severity": "success",
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                              >
                                                                
                                                              </MuiAlertMessage>,
                                                              <MuiAlertAction
                                                                className="MuiAlert-action"
                                                              >
                                                                <ForwardRef(IconButton)
                                                                  aria-label="close"
                                                                  color="inherit"
                                                                  onClick={[Function]}
                                                                  size="small"
                                                                >
                                                                  <Memo
                                                                    fontSize="inherit"
                                                                  />
                                                                </ForwardRef(IconButton)>
                                                              </MuiAlertAction>,
                                                              null,
                                                            ],
                                                            "className": "MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-19s02ur-MuiAlert-root",
                                                            "component": "div",
                                                            "data-testid": "form-alert",
                                                            "elevation": 6,
                                                            "role": "alert",
                                                            "square": true,
                                                            "variant": "elevation",
                                                          }
                                                        }
                                                        role="alert"
                                                      >
                                                        <Noop />
                                                        <div
                                                          className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-secft3-MuiPaper-root-MuiAlert-root"
                                                          data-testid="form-alert"
                                                          role="alert"
                                                        >
                                                          <MuiAlertIcon
                                                            className="MuiAlert-icon"
                                                            ownerState={
                                                              Object {
                                                                "action": <ForwardRef(IconButton)
                                                                  aria-label="close"
                                                                  color="inherit"
                                                                  onClick={[Function]}
                                                                  size="small"
                                                                >
                                                                  <Memo
                                                                    fontSize="inherit"
                                                                  />
                                                                </ForwardRef(IconButton)>,
                                                                "children": "",
                                                                "color": undefined,
                                                                "data-testid": "form-alert",
                                                                "elevation": 6,
                                                                "severity": "success",
                                                                "variant": "filled",
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <div
                                                              className="MuiAlert-icon css-1ytlwq5-MuiAlert-icon"
                                                            >
                                                              <ForwardRef(SuccessOutlinedIcon)
                                                                fontSize="inherit"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  data-testid="SuccessOutlinedIcon"
                                                                  fontSize="inherit"
                                                                >
                                                                  <MuiSvgIconRoot
                                                                    aria-hidden={true}
                                                                    as="svg"
                                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                                                    data-testid="SuccessOutlinedIcon"
                                                                    focusable="false"
                                                                    ownerState={
                                                                      Object {
                                                                        "children": <path
                                                                          d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                                                                        />,
                                                                        "color": "inherit",
                                                                        "component": "svg",
                                                                        "data-testid": "SuccessOutlinedIcon",
                                                                        "fontSize": "inherit",
                                                                        "viewBox": "0 0 24 24",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <Noop />
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                                      data-testid="SuccessOutlinedIcon"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                                                                      />
                                                                    </svg>
                                                                  </MuiSvgIconRoot>
                                                                </ForwardRef(SvgIcon)>
                                                              </ForwardRef(SuccessOutlinedIcon)>
                                                            </div>
                                                          </MuiAlertIcon>
                                                          <MuiAlertMessage
                                                            className="MuiAlert-message"
                                                            ownerState={
                                                              Object {
                                                                "action": <ForwardRef(IconButton)
                                                                  aria-label="close"
                                                                  color="inherit"
                                                                  onClick={[Function]}
                                                                  size="small"
                                                                >
                                                                  <Memo
                                                                    fontSize="inherit"
                                                                  />
                                                                </ForwardRef(IconButton)>,
                                                                "children": "",
                                                                "color": undefined,
                                                                "data-testid": "form-alert",
                                                                "elevation": 6,
                                                                "severity": "success",
                                                                "variant": "filled",
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <div
                                                              className="MuiAlert-message css-acap47-MuiAlert-message"
                                                            />
                                                          </MuiAlertMessage>
                                                          <MuiAlertAction
                                                            className="MuiAlert-action"
                                                          >
                                                            <Noop />
                                                            <div
                                                              className="MuiAlert-action css-ki1hdl-MuiAlert-action"
                                                            >
                                                              <ForwardRef(IconButton)
                                                                aria-label="close"
                                                                color="inherit"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <MuiIconButtonRoot
                                                                  aria-label="close"
                                                                  centerRipple={true}
                                                                  className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  onClick={[Function]}
                                                                  ownerState={
                                                                    Object {
                                                                      "aria-label": "close",
                                                                      "children": <Memo
                                                                        fontSize="inherit"
                                                                      />,
                                                                      "color": "inherit",
                                                                      "disableFocusRipple": false,
                                                                      "disabled": false,
                                                                      "edge": false,
                                                                      "onClick": [Function],
                                                                      "size": "small",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <ForwardRef(ButtonBase)
                                                                    aria-label="close"
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-8mu34q-MuiIconButton-root"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <MuiButtonBaseRoot
                                                                      aria-label="close"
                                                                      as="button"
                                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-8mu34q-MuiIconButton-root"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      ownerState={
                                                                        Object {
                                                                          "aria-label": "close",
                                                                          "centerRipple": true,
                                                                          "children": <Memo
                                                                            fontSize="inherit"
                                                                          />,
                                                                          "className": "MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-8mu34q-MuiIconButton-root",
                                                                          "component": "button",
                                                                          "disableRipple": false,
                                                                          "disableTouchRipple": false,
                                                                          "disabled": false,
                                                                          "focusRipple": true,
                                                                          "focusVisible": false,
                                                                          "onClick": [Function],
                                                                          "tabIndex": 0,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <Noop />
                                                                      <button
                                                                        aria-label="close"
                                                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-1e0d89p-MuiButtonBase-root-MuiIconButton-root"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onContextMenu={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={0}
                                                                        type="button"
                                                                      >
                                                                        <ForwardRef(CloseIcon)
                                                                          fontSize="inherit"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            data-testid="CloseIcon"
                                                                            fontSize="inherit"
                                                                          >
                                                                            <MuiSvgIconRoot
                                                                              aria-hidden={true}
                                                                              as="svg"
                                                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                                                              data-testid="CloseIcon"
                                                                              focusable="false"
                                                                              ownerState={
                                                                                Object {
                                                                                  "children": <path
                                                                                    d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                  />,
                                                                                  "color": "inherit",
                                                                                  "component": "svg",
                                                                                  "data-testid": "CloseIcon",
                                                                                  "fontSize": "inherit",
                                                                                  "viewBox": "0 0 24 24",
                                                                                }
                                                                              }
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <Noop />
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                                                data-testid="CloseIcon"
                                                                                focusable="false"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                />
                                                                              </svg>
                                                                            </MuiSvgIconRoot>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </ForwardRef(CloseIcon)>
                                                                        <ForwardRef(TouchRipple)
                                                                          center={true}
                                                                        >
                                                                          <MuiTouchRippleRoot
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <Noop />
                                                                            <span
                                                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </MuiTouchRippleRoot>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </button>
                                                                    </MuiButtonBaseRoot>
                                                                  </ForwardRef(ButtonBase)>
                                                                </MuiIconButtonRoot>
                                                              </ForwardRef(IconButton)>
                                                            </div>
                                                          </MuiAlertAction>
                                                        </div>
                                                      </MuiPaperRoot>
                                                    </ForwardRef(Paper)>
                                                  </MuiAlertRoot>
                                                </ForwardRef(Alert)>
                                              </div>
                                            </MuiCollapseWrapperInner>
                                          </div>
                                        </MuiCollapseWrapper>
                                      </div>
                                    </MuiCollapseRoot>
                                  </Transition>
                                </ForwardRef(Collapse)>
                              </FormAlert>
                            </pure(FormAlert)>
                            <FormButtons
                              handlePrevStep={[Function]}
                              isLastStep={false}
                              isLoading={false}
                              loadingMessage=""
                              stepNumber={0}
                            >
                              <ForwardRef(Box)
                                sx={
                                  Object {
                                    "display": "flex",
                                    "gap": "10px",
                                    "justifyContent": "flex-end",
                                  }
                                }
                              >
                                <Styled(div)
                                  as="div"
                                  className="MuiBox-root"
                                  sx={
                                    Object {
                                      "display": "flex",
                                      "gap": "10px",
                                      "justifyContent": "flex-end",
                                    }
                                  }
                                  theme={
                                    Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "unit": "px",
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1200,
                                          "md": 900,
                                          "sm": 600,
                                          "xl": 1536,
                                          "xs": 0,
                                        },
                                      },
                                      "components": Object {},
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "palette": Object {
                                        "action": Object {
                                          "activatedOpacity": 0.12,
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "disabledOpacity": 0.38,
                                          "focus": "rgba(0, 0, 0, 0.12)",
                                          "focusOpacity": 0.12,
                                          "hover": "rgba(0, 0, 0, 0.04)",
                                          "hoverOpacity": 0.04,
                                          "selected": "rgba(0, 0, 0, 0.08)",
                                          "selectedOpacity": 0.08,
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#F0F0F0",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c62828",
                                          "light": "#ef5350",
                                          "main": "#d32f2f",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#f5f5f5",
                                          "A200": "#eeeeee",
                                          "A400": "#bdbdbd",
                                          "A700": "#616161",
                                        },
                                        "info": Object {
                                          "contrastText": "#fff",
                                          "dark": "#01579b",
                                          "light": "#03a9f4",
                                          "main": "#0288d1",
                                        },
                                        "mode": "light",
                                        "primary": Object {
                                          "100": "#b2ebf2",
                                          "200": "#80deea",
                                          "300": "#4dd0e1",
                                          "400": "#26c6da",
                                          "50": "#e0f7fa",
                                          "500": "#00bcd4",
                                          "600": "#00acc1",
                                          "700": "#0097a7",
                                          "800": "#00838f",
                                          "900": "#006064",
                                          "A100": "#84ffff",
                                          "A200": "#18ffff",
                                          "A400": "#00e5ff",
                                          "A700": "#00b8d4",
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#0097a7",
                                          "light": "#4dd0e1",
                                          "main": "#00bcd4",
                                        },
                                        "secondary": Object {
                                          "100": "#f8bbd0",
                                          "200": "#f48fb1",
                                          "300": "#f06292",
                                          "400": "#ec407a",
                                          "50": "#fce4ec",
                                          "500": "#e91e63",
                                          "600": "#d81b60",
                                          "700": "#c2185b",
                                          "800": "#ad1457",
                                          "900": "#880e4f",
                                          "A100": "#ff80ab",
                                          "A200": "#ff4081",
                                          "A400": "#f50057",
                                          "A700": "#c51162",
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "#fff",
                                          "dark": "#1b5e20",
                                          "light": "#4caf50",
                                          "main": "#2e7d32",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                        },
                                        "tonalOffset": 0.2,
                                        "warning": Object {
                                          "contrastText": "#fff",
                                          "dark": "#e65100",
                                          "light": "#ff9800",
                                          "main": "#ed6c02",
                                        },
                                      },
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                      Symbol(mui.nested): false,
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiBox-root css-qilq07"
                                  >
                                    <ForwardRef(Button)
                                      color="error"
                                      data-testid="previous-page"
                                      disabled={true}
                                      onClick={[Function]}
                                      size="large"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className=""
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                          }
                                        }
                                        component="button"
                                        data-testid="previous-page"
                                        disableRipple={false}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Back",
                                            "color": "error",
                                            "component": "button",
                                            "data-testid": "previous-page",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disabled": true,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "large",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <ForwardRef(ButtonBase)
                                          className=" css-oonr1p-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                            }
                                          }
                                          component="button"
                                          data-testid="previous-page"
                                          disableRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge MuiButtonBase-root Mui-disabled  css-oonr1p-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                              }
                                            }
                                            data-testid="previous-page"
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                    ownerState={
                                                      Object {
                                                        "children": "Back",
                                                        "color": "error",
                                                        "component": "button",
                                                        "data-testid": "previous-page",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disabled": true,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "large",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Back",
                                                  undefined,
                                                ],
                                                "className": " css-oonr1p-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                                },
                                                "component": "button",
                                                "data-testid": "previous-page",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": true,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={-1}
                                            type="button"
                                          >
                                            <Noop />
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge MuiButtonBase-root Mui-disabled  css-1i749hr-MuiButtonBase-root-MuiButton-root"
                                              data-testid="previous-page"
                                              disabled={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                ownerState={
                                                  Object {
                                                    "children": "Back",
                                                    "color": "error",
                                                    "component": "button",
                                                    "data-testid": "previous-page",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disabled": true,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "large",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeLarge css-htszrh-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(ClearIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="ClearIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="ClearIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "ClearIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <Noop />
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="ClearIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(ClearIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Back
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </Styled(div)>
                              </ForwardRef(Box)>
                            </FormButtons>
                          </div>
                        </Styled(div)>
                      </ForwardRef(Box)>
                    </form>
                  </MuiStackRoot>
                </ForwardRef(Stack)>
              </CreateCollectionForm>
            </CreateCollectionPage>
          </Web3ReactProvider>
        </NetworkProvider>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;
