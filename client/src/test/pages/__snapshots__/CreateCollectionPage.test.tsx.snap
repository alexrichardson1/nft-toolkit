// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCollectionPage snapshot 1`] = `
<ThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#F0F0F0",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#c62828",
            "light": "#ef5350",
            "main": "#d32f2f",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "50": "#e0f7fa",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "A100": "#84ffff",
            "A200": "#18ffff",
            "A400": "#00e5ff",
            "A700": "#00b8d4",
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#0097a7",
            "light": "#4dd0e1",
            "main": "#00bcd4",
          },
          "secondary": Object {
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "50": "#fce4ec",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "A100": "#ff80ab",
            "A200": "#ff4081",
            "A400": "#f50057",
            "A700": "#c51162",
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "unit": "px",
            "up": [Function],
            "values": Object {
              "lg": 1200,
              "md": 900,
              "sm": 600,
              "xl": 1536,
              "xs": 0,
            },
          },
          "components": Object {},
          "direction": "ltr",
          "mixins": Object {
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#F0F0F0",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#c62828",
              "light": "#ef5350",
              "main": "#d32f2f",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#f5f5f5",
              "A200": "#eeeeee",
              "A400": "#bdbdbd",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#01579b",
              "light": "#03a9f4",
              "main": "#0288d1",
            },
            "mode": "light",
            "primary": Object {
              "100": "#b2ebf2",
              "200": "#80deea",
              "300": "#4dd0e1",
              "400": "#26c6da",
              "50": "#e0f7fa",
              "500": "#00bcd4",
              "600": "#00acc1",
              "700": "#0097a7",
              "800": "#00838f",
              "900": "#006064",
              "A100": "#84ffff",
              "A200": "#18ffff",
              "A400": "#00e5ff",
              "A700": "#00b8d4",
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#0097a7",
              "light": "#4dd0e1",
              "main": "#00bcd4",
            },
            "secondary": Object {
              "100": "#f8bbd0",
              "200": "#f48fb1",
              "300": "#f06292",
              "400": "#ec407a",
              "50": "#fce4ec",
              "500": "#e91e63",
              "600": "#d81b60",
              "700": "#c2185b",
              "800": "#ad1457",
              "900": "#880e4f",
              "A100": "#ff80ab",
              "A200": "#ff4081",
              "A400": "#f50057",
              "A700": "#c51162",
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "success": Object {
              "contrastText": "#fff",
              "dark": "#1b5e20",
              "light": "#4caf50",
              "main": "#2e7d32",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.6)",
            },
            "tonalOffset": 0.2,
            "warning": Object {
              "contrastText": "#fff",
              "dark": "#e65100",
              "light": "#ff9800",
              "main": "#ed6c02",
            },
          },
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.167,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.2,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.167,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.235,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <InnerThemeProvider>
        <NetworkProvider>
          <Web3ReactProvider
            getLibrary={[Function]}
          >
            <CreateCollectionPage>
              <CreateCollectionForm>
                <ForwardRef(Stack)
                  component="form"
                  data-testid="create-form"
                  justifyContent="center"
                  onSubmit={[Function]}
                  spacing={2}
                >
                  <MuiStackRoot
                    as="form"
                    data-testid="create-form"
                    onSubmit={[Function]}
                    ownerState={
                      Object {
                        "direction": "column",
                        "spacing": 2,
                      }
                    }
                    sx={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Noop />
                    <form
                      className="css-773myu-MuiStack-root"
                      data-testid="create-form"
                      onSubmit={[Function]}
                    >
                      <GeneralInfoStep
                        handleCollNameChange={[Function]}
                        handleDescriptionChange={[Function]}
                        handleMintPriceChange={[Function]}
                        handleSymbolChange={[Function]}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "tiers": Array [],
                            },
                            "mintingPrice": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                          }
                        }
                        stepNumber={0}
                      >
                        <PageHeader
                          text="Enter Collection Details Here"
                        >
                          <ForwardRef(Typography)
                            color="secondary"
                            component="div"
                            noWrap={true}
                            textAlign="center"
                            variant="h4"
                          >
                            <MuiTypographyRoot
                              as="div"
                              className="MuiTypography-root MuiTypography-h4 MuiTypography-noWrap"
                              ownerState={
                                Object {
                                  "align": "inherit",
                                  "children": "Enter Collection Details Here",
                                  "className": undefined,
                                  "color": "secondary.main",
                                  "component": "div",
                                  "gutterBottom": false,
                                  "noWrap": true,
                                  "paragraph": false,
                                  "sx": Object {
                                    "color": "secondary.main",
                                    "textAlign": "center",
                                  },
                                  "variant": "h4",
                                  "variantMapping": Object {
                                    "body1": "p",
                                    "body2": "p",
                                    "h1": "h1",
                                    "h2": "h2",
                                    "h3": "h3",
                                    "h4": "h4",
                                    "h5": "h5",
                                    "h6": "h6",
                                    "inherit": "p",
                                    "subtitle1": "h6",
                                    "subtitle2": "h6",
                                  },
                                }
                              }
                              sx={
                                Object {
                                  "color": "secondary.main",
                                  "textAlign": "center",
                                }
                              }
                            >
                              <Noop />
                              <div
                                className="MuiTypography-root MuiTypography-h4 MuiTypography-noWrap css-w5ksg2-MuiTypography-root"
                              >
                                Enter Collection Details Here
                              </div>
                            </MuiTypographyRoot>
                          </ForwardRef(Typography)>
                        </PageHeader>
                        <ForwardRef(Paper)>
                          <MuiPaperRoot
                            as="div"
                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                            ownerState={
                              Object {
                                "children": <Input
                                  inputProps={
                                    Object {
                                      "data-testid": "collection-name-input",
                                    }
                                  }
                                  label="Collection Name"
                                  onChange={[Function]}
                                  placeholder="Enter a collection name"
                                  required={true}
                                  value=""
                                />,
                                "component": "div",
                                "elevation": 1,
                                "square": false,
                                "variant": "elevation",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                            >
                              <Input
                                inputProps={
                                  Object {
                                    "data-testid": "collection-name-input",
                                  }
                                }
                                label="Collection Name"
                                onChange={[Function]}
                                placeholder="Enter a collection name"
                                required={true}
                                value=""
                              >
                                <ForwardRef(TextField)
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "collection-name-input",
                                    }
                                  }
                                  label="Collection Name"
                                  onChange={[Function]}
                                  placeholder="Enter a collection name"
                                  required={true}
                                  value=""
                                  variant="outlined"
                                >
                                  <MuiTextFieldRoot
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    ownerState={
                                      Object {
                                        "InputProps": undefined,
                                        "autoFocus": false,
                                        "color": "primary",
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "error": false,
                                        "fullWidth": true,
                                        "inputProps": Object {
                                          "data-testid": "collection-name-input",
                                        },
                                        "label": "Collection Name",
                                        "multiline": false,
                                        "name": undefined,
                                        "onChange": [Function],
                                        "onKeyPress": undefined,
                                        "placeholder": "Enter a collection name",
                                        "required": true,
                                        "rows": undefined,
                                        "select": false,
                                        "sx": undefined,
                                        "type": undefined,
                                        "value": "",
                                        "variant": "outlined",
                                      }
                                    }
                                    required={true}
                                    variant="outlined"
                                  >
                                    <Noop />
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="outlined"
                                    >
                                      <MuiFormControlRoot
                                        as="div"
                                        className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                        ownerState={
                                          Object {
                                            "children": Array [
                                              <ForwardRef(InputLabel)>
                                                Collection Name
                                              </ForwardRef(InputLabel)>,
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                fullWidth={true}
                                                inputProps={
                                                  Object {
                                                    "data-testid": "collection-name-input",
                                                  }
                                                }
                                                label={
                                                  <React.Fragment>
                                                    Collection Name
                                                     *
                                                  </React.Fragment>
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                placeholder="Enter a collection name"
                                                value=""
                                              />,
                                              undefined,
                                            ],
                                            "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                            "color": "primary",
                                            "component": "div",
                                            "disabled": false,
                                            "error": false,
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "margin": "none",
                                            "onKeyPress": undefined,
                                            "required": true,
                                            "size": "medium",
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <div
                                          className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                        >
                                          <ForwardRef(InputLabel)>
                                            <MuiInputLabelRoot
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                }
                                              }
                                              data-shrink={false}
                                              ownerState={
                                                Object {
                                                  "children": "Collection Name",
                                                  "disableAnimation": false,
                                                  "formControl": Object {
                                                    "adornedStart": false,
                                                    "color": "primary",
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "registerEffect": [Function],
                                                    "required": true,
                                                    "setAdornedStart": [Function],
                                                    "size": "medium",
                                                    "variant": "outlined",
                                                  },
                                                  "htmlFor": undefined,
                                                  "id": undefined,
                                                  "required": true,
                                                  "shrink": false,
                                                  "size": "medium",
                                                  "variant": "outlined",
                                                }
                                              }
                                            >
                                              <Noop />
                                              <ForwardRef(FormLabel)
                                                className="css-1x92c1k-MuiInputLabel-root"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiInputLabel-asterisk",
                                                    "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <MuiFormLabelRoot
                                                  as="label"
                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiInputLabel-asterisk",
                                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                  ownerState={
                                                    Object {
                                                      "children": "Collection Name",
                                                      "className": "css-1x92c1k-MuiInputLabel-root",
                                                      "classes": Object {
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                      },
                                                      "color": "primary",
                                                      "component": "label",
                                                      "data-shrink": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "htmlFor": undefined,
                                                      "id": undefined,
                                                      "required": true,
                                                    }
                                                  }
                                                >
                                                  <Noop />
                                                  <label
                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                                    data-shrink={false}
                                                  >
                                                    Collection Name
                                                    <MuiFormLabelAsterisk
                                                      aria-hidden={true}
                                                      className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                                      ownerState={
                                                        Object {
                                                          "children": "Collection Name",
                                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                                          "classes": Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                          },
                                                          "color": "primary",
                                                          "component": "label",
                                                          "data-shrink": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "htmlFor": undefined,
                                                          "id": undefined,
                                                          "required": true,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <span
                                                        aria-hidden={true}
                                                        className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                                      >
                                                         
                                                        *
                                                      </span>
                                                    </MuiFormLabelAsterisk>
                                                  </label>
                                                </MuiFormLabelRoot>
                                              </ForwardRef(FormLabel)>
                                            </MuiInputLabelRoot>
                                          </ForwardRef(InputLabel)>
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "collection-name-input",
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                Collection Name
                                                 *
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            placeholder="Enter a collection name"
                                            value=""
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "input": "MuiOutlinedInput-input",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              components={
                                                Object {
                                                  "Input": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "input",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                  "Root": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "div",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "collection-name-input",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              placeholder="Enter a collection name"
                                              renderSuffix={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <GlobalStyles
                                                styles={
                                                  Object {
                                                    "@keyframes mui-auto-fill": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                  }
                                                }
                                              >
                                                <GlobalStyles
                                                  defaultTheme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "unit": "px",
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1200,
                                                          "md": 900,
                                                          "sm": 600,
                                                          "xl": 1536,
                                                          "xs": 0,
                                                        },
                                                      },
                                                      "components": Object {},
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "palette": Object {
                                                        "action": Object {
                                                          "activatedOpacity": 0.12,
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "disabledOpacity": 0.38,
                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                          "focusOpacity": 0.12,
                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                          "hoverOpacity": 0.04,
                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                          "selectedOpacity": 0.08,
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fff",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c62828",
                                                          "light": "#ef5350",
                                                          "main": "#d32f2f",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#f5f5f5",
                                                          "A200": "#eeeeee",
                                                          "A400": "#bdbdbd",
                                                          "A700": "#616161",
                                                        },
                                                        "info": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#01579b",
                                                          "light": "#03a9f4",
                                                          "main": "#0288d1",
                                                        },
                                                        "mode": "light",
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1565c0",
                                                          "light": "#42a5f5",
                                                          "main": "#1976d2",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#7b1fa2",
                                                          "light": "#ba68c8",
                                                          "main": "#9c27b0",
                                                        },
                                                        "success": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1b5e20",
                                                          "light": "#4caf50",
                                                          "main": "#2e7d32",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "warning": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#e65100",
                                                          "light": "#ff9800",
                                                          "main": "#ed6c02",
                                                        },
                                                      },
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": [Function],
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.43,
                                                        },
                                                        "button": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightBold": 700,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1.2,
                                                        },
                                                        "h3": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h4": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.235,
                                                        },
                                                        "h5": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.334,
                                                        },
                                                        "h6": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "htmlFontSize": 16,
                                                        "overline": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "subtitle1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "speedDial": 1050,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                  styles={
                                                    Object {
                                                      "@keyframes mui-auto-fill": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionGlobal
                                                    styles={
                                                      Object {
                                                        "@keyframes mui-auto-fill": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                        "@keyframes mui-auto-fill-cancel": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                      }
                                                    }
                                                  />
                                                </GlobalStyles>
                                              </GlobalStyles>
                                              <MuiOutlinedInputRoot
                                                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                                classes={
                                                  Object {
                                                    "input": "MuiOutlinedInput-input",
                                                    "notchedOutline": null,
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                onClick={[Function]}
                                                ownerState={
                                                  Object {
                                                    "aria-describedby": undefined,
                                                    "autoComplete": undefined,
                                                    "autoFocus": false,
                                                    "classes": Object {
                                                      "input": "MuiOutlinedInput-input",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    },
                                                    "color": "primary",
                                                    "components": Object {
                                                      "Input": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "input",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                      "Root": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "div",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                    },
                                                    "defaultValue": undefined,
                                                    "disabled": false,
                                                    "endAdornment": undefined,
                                                    "error": false,
                                                    "focused": false,
                                                    "formControl": Object {
                                                      "adornedStart": false,
                                                      "color": "primary",
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "fullWidth": true,
                                                      "hiddenLabel": false,
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "registerEffect": [Function],
                                                      "required": true,
                                                      "setAdornedStart": [Function],
                                                      "size": "medium",
                                                      "variant": "outlined",
                                                    },
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "id": undefined,
                                                    "inputComponent": "input",
                                                    "inputProps": Object {
                                                      "data-testid": "collection-name-input",
                                                    },
                                                    "inputRef": undefined,
                                                    "maxRows": undefined,
                                                    "minRows": undefined,
                                                    "multiline": false,
                                                    "name": undefined,
                                                    "onBlur": undefined,
                                                    "onChange": [Function],
                                                    "onFocus": undefined,
                                                    "placeholder": "Enter a collection name",
                                                    "renderSuffix": [Function],
                                                    "rows": undefined,
                                                    "size": "medium",
                                                    "startAdornment": undefined,
                                                    "type": "text",
                                                    "value": "",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                                  onClick={[Function]}
                                                >
                                                  <MuiOutlinedInputInput
                                                    aria-invalid={false}
                                                    as="input"
                                                    autoFocus={false}
                                                    className="MuiOutlinedInput-input MuiInputBase-input"
                                                    data-testid="collection-name-input"
                                                    disabled={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    ownerState={
                                                      Object {
                                                        "aria-describedby": undefined,
                                                        "autoComplete": undefined,
                                                        "autoFocus": false,
                                                        "classes": Object {
                                                          "input": "MuiOutlinedInput-input",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        },
                                                        "color": "primary",
                                                        "components": Object {
                                                          "Input": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "input",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                          "Root": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "div",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                        },
                                                        "defaultValue": undefined,
                                                        "disabled": false,
                                                        "endAdornment": undefined,
                                                        "error": false,
                                                        "focused": false,
                                                        "formControl": Object {
                                                          "adornedStart": false,
                                                          "color": "primary",
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "fullWidth": true,
                                                          "hiddenLabel": false,
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "registerEffect": [Function],
                                                          "required": true,
                                                          "setAdornedStart": [Function],
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        },
                                                        "fullWidth": true,
                                                        "hiddenLabel": false,
                                                        "id": undefined,
                                                        "inputComponent": "input",
                                                        "inputProps": Object {
                                                          "data-testid": "collection-name-input",
                                                        },
                                                        "inputRef": undefined,
                                                        "maxRows": undefined,
                                                        "minRows": undefined,
                                                        "multiline": false,
                                                        "name": undefined,
                                                        "onBlur": undefined,
                                                        "onChange": [Function],
                                                        "onFocus": undefined,
                                                        "placeholder": "Enter a collection name",
                                                        "renderSuffix": [Function],
                                                        "rows": undefined,
                                                        "size": "medium",
                                                        "startAdornment": undefined,
                                                        "type": "text",
                                                        "value": "",
                                                      }
                                                    }
                                                    placeholder="Enter a collection name"
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <Noop />
                                                    <input
                                                      aria-invalid={false}
                                                      autoFocus={false}
                                                      className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                                      data-testid="collection-name-input"
                                                      disabled={false}
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder="Enter a collection name"
                                                      required={true}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </MuiOutlinedInputInput>
                                                  <MuiOutlinedInputNotchedOutline
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        Collection Name
                                                         *
                                                      </React.Fragment>
                                                    }
                                                    notched={false}
                                                  >
                                                    <Noop />
                                                    <NotchedOutline
                                                      className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                      label={
                                                        <React.Fragment>
                                                          Collection Name
                                                           *
                                                        </React.Fragment>
                                                      }
                                                      notched={false}
                                                    >
                                                      <Styled(fieldset)
                                                        aria-hidden={true}
                                                        className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                        ownerState={
                                                          Object {
                                                            "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                            "label": <React.Fragment>
                                                              Collection Name
                                                               *
                                                            </React.Fragment>,
                                                            "notched": false,
                                                          }
                                                        }
                                                      >
                                                        <Noop />
                                                        <fieldset
                                                          aria-hidden={true}
                                                          className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                        >
                                                          <Styled(legend)
                                                            ownerState={
                                                              Object {
                                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                "label": <React.Fragment>
                                                                  Collection Name
                                                                   *
                                                                </React.Fragment>,
                                                                "notched": false,
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <legend
                                                              className="css-173wfxe"
                                                            >
                                                              <span>
                                                                Collection Name
                                                                 *
                                                              </span>
                                                            </legend>
                                                          </Styled(legend)>
                                                        </fieldset>
                                                      </Styled(fieldset)>
                                                    </NotchedOutline>
                                                  </MuiOutlinedInputNotchedOutline>
                                                </div>
                                              </MuiOutlinedInputRoot>
                                            </ForwardRef(InputBase)>
                                          </ForwardRef(OutlinedInput)>
                                        </div>
                                      </MuiFormControlRoot>
                                    </ForwardRef(FormControl)>
                                  </MuiTextFieldRoot>
                                </ForwardRef(TextField)>
                              </Input>
                            </div>
                          </MuiPaperRoot>
                        </ForwardRef(Paper)>
                        <ForwardRef(Paper)>
                          <MuiPaperRoot
                            as="div"
                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                            ownerState={
                              Object {
                                "children": <Input
                                  inputProps={
                                    Object {
                                      "data-testid": "symbol-input",
                                    }
                                  }
                                  label="Symbol"
                                  onChange={[Function]}
                                  placeholder="Enter a symbol"
                                  required={true}
                                  value=""
                                />,
                                "component": "div",
                                "elevation": 1,
                                "square": false,
                                "variant": "elevation",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                            >
                              <Input
                                inputProps={
                                  Object {
                                    "data-testid": "symbol-input",
                                  }
                                }
                                label="Symbol"
                                onChange={[Function]}
                                placeholder="Enter a symbol"
                                required={true}
                                value=""
                              >
                                <ForwardRef(TextField)
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "symbol-input",
                                    }
                                  }
                                  label="Symbol"
                                  onChange={[Function]}
                                  placeholder="Enter a symbol"
                                  required={true}
                                  value=""
                                  variant="outlined"
                                >
                                  <MuiTextFieldRoot
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    ownerState={
                                      Object {
                                        "InputProps": undefined,
                                        "autoFocus": false,
                                        "color": "primary",
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "error": false,
                                        "fullWidth": true,
                                        "inputProps": Object {
                                          "data-testid": "symbol-input",
                                        },
                                        "label": "Symbol",
                                        "multiline": false,
                                        "name": undefined,
                                        "onChange": [Function],
                                        "onKeyPress": undefined,
                                        "placeholder": "Enter a symbol",
                                        "required": true,
                                        "rows": undefined,
                                        "select": false,
                                        "sx": undefined,
                                        "type": undefined,
                                        "value": "",
                                        "variant": "outlined",
                                      }
                                    }
                                    required={true}
                                    variant="outlined"
                                  >
                                    <Noop />
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="outlined"
                                    >
                                      <MuiFormControlRoot
                                        as="div"
                                        className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                        ownerState={
                                          Object {
                                            "children": Array [
                                              <ForwardRef(InputLabel)>
                                                Symbol
                                              </ForwardRef(InputLabel)>,
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                fullWidth={true}
                                                inputProps={
                                                  Object {
                                                    "data-testid": "symbol-input",
                                                  }
                                                }
                                                label={
                                                  <React.Fragment>
                                                    Symbol
                                                     *
                                                  </React.Fragment>
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                placeholder="Enter a symbol"
                                                value=""
                                              />,
                                              undefined,
                                            ],
                                            "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                            "color": "primary",
                                            "component": "div",
                                            "disabled": false,
                                            "error": false,
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "margin": "none",
                                            "onKeyPress": undefined,
                                            "required": true,
                                            "size": "medium",
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <div
                                          className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                        >
                                          <ForwardRef(InputLabel)>
                                            <MuiInputLabelRoot
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                }
                                              }
                                              data-shrink={false}
                                              ownerState={
                                                Object {
                                                  "children": "Symbol",
                                                  "disableAnimation": false,
                                                  "formControl": Object {
                                                    "adornedStart": false,
                                                    "color": "primary",
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "registerEffect": [Function],
                                                    "required": true,
                                                    "setAdornedStart": [Function],
                                                    "size": "medium",
                                                    "variant": "outlined",
                                                  },
                                                  "htmlFor": undefined,
                                                  "id": undefined,
                                                  "required": true,
                                                  "shrink": false,
                                                  "size": "medium",
                                                  "variant": "outlined",
                                                }
                                              }
                                            >
                                              <Noop />
                                              <ForwardRef(FormLabel)
                                                className="css-1x92c1k-MuiInputLabel-root"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiInputLabel-asterisk",
                                                    "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <MuiFormLabelRoot
                                                  as="label"
                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiInputLabel-asterisk",
                                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                  ownerState={
                                                    Object {
                                                      "children": "Symbol",
                                                      "className": "css-1x92c1k-MuiInputLabel-root",
                                                      "classes": Object {
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                      },
                                                      "color": "primary",
                                                      "component": "label",
                                                      "data-shrink": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "htmlFor": undefined,
                                                      "id": undefined,
                                                      "required": true,
                                                    }
                                                  }
                                                >
                                                  <Noop />
                                                  <label
                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                                    data-shrink={false}
                                                  >
                                                    Symbol
                                                    <MuiFormLabelAsterisk
                                                      aria-hidden={true}
                                                      className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                                      ownerState={
                                                        Object {
                                                          "children": "Symbol",
                                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                                          "classes": Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                          },
                                                          "color": "primary",
                                                          "component": "label",
                                                          "data-shrink": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "htmlFor": undefined,
                                                          "id": undefined,
                                                          "required": true,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <span
                                                        aria-hidden={true}
                                                        className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                                      >
                                                         
                                                        *
                                                      </span>
                                                    </MuiFormLabelAsterisk>
                                                  </label>
                                                </MuiFormLabelRoot>
                                              </ForwardRef(FormLabel)>
                                            </MuiInputLabelRoot>
                                          </ForwardRef(InputLabel)>
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "symbol-input",
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                Symbol
                                                 *
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            placeholder="Enter a symbol"
                                            value=""
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "input": "MuiOutlinedInput-input",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              components={
                                                Object {
                                                  "Input": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "input",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                  "Root": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "div",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "symbol-input",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              placeholder="Enter a symbol"
                                              renderSuffix={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <GlobalStyles
                                                styles={
                                                  Object {
                                                    "@keyframes mui-auto-fill": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                  }
                                                }
                                              >
                                                <GlobalStyles
                                                  defaultTheme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "unit": "px",
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1200,
                                                          "md": 900,
                                                          "sm": 600,
                                                          "xl": 1536,
                                                          "xs": 0,
                                                        },
                                                      },
                                                      "components": Object {},
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "palette": Object {
                                                        "action": Object {
                                                          "activatedOpacity": 0.12,
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "disabledOpacity": 0.38,
                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                          "focusOpacity": 0.12,
                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                          "hoverOpacity": 0.04,
                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                          "selectedOpacity": 0.08,
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fff",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c62828",
                                                          "light": "#ef5350",
                                                          "main": "#d32f2f",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#f5f5f5",
                                                          "A200": "#eeeeee",
                                                          "A400": "#bdbdbd",
                                                          "A700": "#616161",
                                                        },
                                                        "info": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#01579b",
                                                          "light": "#03a9f4",
                                                          "main": "#0288d1",
                                                        },
                                                        "mode": "light",
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1565c0",
                                                          "light": "#42a5f5",
                                                          "main": "#1976d2",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#7b1fa2",
                                                          "light": "#ba68c8",
                                                          "main": "#9c27b0",
                                                        },
                                                        "success": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1b5e20",
                                                          "light": "#4caf50",
                                                          "main": "#2e7d32",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "warning": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#e65100",
                                                          "light": "#ff9800",
                                                          "main": "#ed6c02",
                                                        },
                                                      },
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": [Function],
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.43,
                                                        },
                                                        "button": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightBold": 700,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1.2,
                                                        },
                                                        "h3": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h4": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.235,
                                                        },
                                                        "h5": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.334,
                                                        },
                                                        "h6": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "htmlFontSize": 16,
                                                        "overline": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "subtitle1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "speedDial": 1050,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                  styles={
                                                    Object {
                                                      "@keyframes mui-auto-fill": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionGlobal
                                                    styles={
                                                      Object {
                                                        "@keyframes mui-auto-fill": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                        "@keyframes mui-auto-fill-cancel": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                      }
                                                    }
                                                  />
                                                </GlobalStyles>
                                              </GlobalStyles>
                                              <MuiOutlinedInputRoot
                                                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                                classes={
                                                  Object {
                                                    "input": "MuiOutlinedInput-input",
                                                    "notchedOutline": null,
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                onClick={[Function]}
                                                ownerState={
                                                  Object {
                                                    "aria-describedby": undefined,
                                                    "autoComplete": undefined,
                                                    "autoFocus": false,
                                                    "classes": Object {
                                                      "input": "MuiOutlinedInput-input",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    },
                                                    "color": "primary",
                                                    "components": Object {
                                                      "Input": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "input",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                      "Root": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "div",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                    },
                                                    "defaultValue": undefined,
                                                    "disabled": false,
                                                    "endAdornment": undefined,
                                                    "error": false,
                                                    "focused": false,
                                                    "formControl": Object {
                                                      "adornedStart": false,
                                                      "color": "primary",
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "fullWidth": true,
                                                      "hiddenLabel": false,
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "registerEffect": [Function],
                                                      "required": true,
                                                      "setAdornedStart": [Function],
                                                      "size": "medium",
                                                      "variant": "outlined",
                                                    },
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "id": undefined,
                                                    "inputComponent": "input",
                                                    "inputProps": Object {
                                                      "data-testid": "symbol-input",
                                                    },
                                                    "inputRef": undefined,
                                                    "maxRows": undefined,
                                                    "minRows": undefined,
                                                    "multiline": false,
                                                    "name": undefined,
                                                    "onBlur": undefined,
                                                    "onChange": [Function],
                                                    "onFocus": undefined,
                                                    "placeholder": "Enter a symbol",
                                                    "renderSuffix": [Function],
                                                    "rows": undefined,
                                                    "size": "medium",
                                                    "startAdornment": undefined,
                                                    "type": "text",
                                                    "value": "",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-1ten8y9-MuiInputBase-root-MuiOutlinedInput-root"
                                                  onClick={[Function]}
                                                >
                                                  <MuiOutlinedInputInput
                                                    aria-invalid={false}
                                                    as="input"
                                                    autoFocus={false}
                                                    className="MuiOutlinedInput-input MuiInputBase-input"
                                                    data-testid="symbol-input"
                                                    disabled={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    ownerState={
                                                      Object {
                                                        "aria-describedby": undefined,
                                                        "autoComplete": undefined,
                                                        "autoFocus": false,
                                                        "classes": Object {
                                                          "input": "MuiOutlinedInput-input",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        },
                                                        "color": "primary",
                                                        "components": Object {
                                                          "Input": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "input",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                          "Root": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "div",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                        },
                                                        "defaultValue": undefined,
                                                        "disabled": false,
                                                        "endAdornment": undefined,
                                                        "error": false,
                                                        "focused": false,
                                                        "formControl": Object {
                                                          "adornedStart": false,
                                                          "color": "primary",
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "fullWidth": true,
                                                          "hiddenLabel": false,
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "registerEffect": [Function],
                                                          "required": true,
                                                          "setAdornedStart": [Function],
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        },
                                                        "fullWidth": true,
                                                        "hiddenLabel": false,
                                                        "id": undefined,
                                                        "inputComponent": "input",
                                                        "inputProps": Object {
                                                          "data-testid": "symbol-input",
                                                        },
                                                        "inputRef": undefined,
                                                        "maxRows": undefined,
                                                        "minRows": undefined,
                                                        "multiline": false,
                                                        "name": undefined,
                                                        "onBlur": undefined,
                                                        "onChange": [Function],
                                                        "onFocus": undefined,
                                                        "placeholder": "Enter a symbol",
                                                        "renderSuffix": [Function],
                                                        "rows": undefined,
                                                        "size": "medium",
                                                        "startAdornment": undefined,
                                                        "type": "text",
                                                        "value": "",
                                                      }
                                                    }
                                                    placeholder="Enter a symbol"
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <Noop />
                                                    <input
                                                      aria-invalid={false}
                                                      autoFocus={false}
                                                      className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                                      data-testid="symbol-input"
                                                      disabled={false}
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder="Enter a symbol"
                                                      required={true}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </MuiOutlinedInputInput>
                                                  <MuiOutlinedInputNotchedOutline
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        Symbol
                                                         *
                                                      </React.Fragment>
                                                    }
                                                    notched={false}
                                                  >
                                                    <Noop />
                                                    <NotchedOutline
                                                      className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                      label={
                                                        <React.Fragment>
                                                          Symbol
                                                           *
                                                        </React.Fragment>
                                                      }
                                                      notched={false}
                                                    >
                                                      <Styled(fieldset)
                                                        aria-hidden={true}
                                                        className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                        ownerState={
                                                          Object {
                                                            "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                            "label": <React.Fragment>
                                                              Symbol
                                                               *
                                                            </React.Fragment>,
                                                            "notched": false,
                                                          }
                                                        }
                                                      >
                                                        <Noop />
                                                        <fieldset
                                                          aria-hidden={true}
                                                          className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                        >
                                                          <Styled(legend)
                                                            ownerState={
                                                              Object {
                                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                "label": <React.Fragment>
                                                                  Symbol
                                                                   *
                                                                </React.Fragment>,
                                                                "notched": false,
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <legend
                                                              className="css-173wfxe"
                                                            >
                                                              <span>
                                                                Symbol
                                                                 *
                                                              </span>
                                                            </legend>
                                                          </Styled(legend)>
                                                        </fieldset>
                                                      </Styled(fieldset)>
                                                    </NotchedOutline>
                                                  </MuiOutlinedInputNotchedOutline>
                                                </div>
                                              </MuiOutlinedInputRoot>
                                            </ForwardRef(InputBase)>
                                          </ForwardRef(OutlinedInput)>
                                        </div>
                                      </MuiFormControlRoot>
                                    </ForwardRef(FormControl)>
                                  </MuiTextFieldRoot>
                                </ForwardRef(TextField)>
                              </Input>
                            </div>
                          </MuiPaperRoot>
                        </ForwardRef(Paper)>
                        <ForwardRef(Paper)>
                          <MuiPaperRoot
                            as="div"
                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                            ownerState={
                              Object {
                                "children": <Input
                                  inputProps={
                                    Object {
                                      "data-testid": "description-input",
                                    }
                                  }
                                  label="Description"
                                  multiline={true}
                                  onChange={[Function]}
                                  placeholder="Enter a description"
                                  required={true}
                                  rows={4}
                                  value=""
                                />,
                                "component": "div",
                                "elevation": 1,
                                "square": false,
                                "variant": "elevation",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                            >
                              <Input
                                inputProps={
                                  Object {
                                    "data-testid": "description-input",
                                  }
                                }
                                label="Description"
                                multiline={true}
                                onChange={[Function]}
                                placeholder="Enter a description"
                                required={true}
                                rows={4}
                                value=""
                              >
                                <ForwardRef(TextField)
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "description-input",
                                    }
                                  }
                                  label="Description"
                                  multiline={true}
                                  onChange={[Function]}
                                  placeholder="Enter a description"
                                  required={true}
                                  rows={4}
                                  value=""
                                  variant="outlined"
                                >
                                  <MuiTextFieldRoot
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    ownerState={
                                      Object {
                                        "InputProps": undefined,
                                        "autoFocus": false,
                                        "color": "primary",
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "error": false,
                                        "fullWidth": true,
                                        "inputProps": Object {
                                          "data-testid": "description-input",
                                        },
                                        "label": "Description",
                                        "multiline": true,
                                        "name": undefined,
                                        "onChange": [Function],
                                        "onKeyPress": undefined,
                                        "placeholder": "Enter a description",
                                        "required": true,
                                        "rows": 4,
                                        "select": false,
                                        "sx": undefined,
                                        "type": undefined,
                                        "value": "",
                                        "variant": "outlined",
                                      }
                                    }
                                    required={true}
                                    variant="outlined"
                                  >
                                    <Noop />
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="outlined"
                                    >
                                      <MuiFormControlRoot
                                        as="div"
                                        className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                        ownerState={
                                          Object {
                                            "children": Array [
                                              <ForwardRef(InputLabel)>
                                                Description
                                              </ForwardRef(InputLabel)>,
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                fullWidth={true}
                                                inputProps={
                                                  Object {
                                                    "data-testid": "description-input",
                                                  }
                                                }
                                                label={
                                                  <React.Fragment>
                                                    Description
                                                     *
                                                  </React.Fragment>
                                                }
                                                multiline={true}
                                                onChange={[Function]}
                                                placeholder="Enter a description"
                                                rows={4}
                                                value=""
                                              />,
                                              undefined,
                                            ],
                                            "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                            "color": "primary",
                                            "component": "div",
                                            "disabled": false,
                                            "error": false,
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "margin": "none",
                                            "onKeyPress": undefined,
                                            "required": true,
                                            "size": "medium",
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <div
                                          className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                        >
                                          <ForwardRef(InputLabel)>
                                            <MuiInputLabelRoot
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                }
                                              }
                                              data-shrink={false}
                                              ownerState={
                                                Object {
                                                  "children": "Description",
                                                  "disableAnimation": false,
                                                  "formControl": Object {
                                                    "adornedStart": false,
                                                    "color": "primary",
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "registerEffect": [Function],
                                                    "required": true,
                                                    "setAdornedStart": [Function],
                                                    "size": "medium",
                                                    "variant": "outlined",
                                                  },
                                                  "htmlFor": undefined,
                                                  "id": undefined,
                                                  "required": true,
                                                  "shrink": false,
                                                  "size": "medium",
                                                  "variant": "outlined",
                                                }
                                              }
                                            >
                                              <Noop />
                                              <ForwardRef(FormLabel)
                                                className="css-1x92c1k-MuiInputLabel-root"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiInputLabel-asterisk",
                                                    "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <MuiFormLabelRoot
                                                  as="label"
                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiInputLabel-asterisk",
                                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                  ownerState={
                                                    Object {
                                                      "children": "Description",
                                                      "className": "css-1x92c1k-MuiInputLabel-root",
                                                      "classes": Object {
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                      },
                                                      "color": "primary",
                                                      "component": "label",
                                                      "data-shrink": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "htmlFor": undefined,
                                                      "id": undefined,
                                                      "required": true,
                                                    }
                                                  }
                                                >
                                                  <Noop />
                                                  <label
                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                                    data-shrink={false}
                                                  >
                                                    Description
                                                    <MuiFormLabelAsterisk
                                                      aria-hidden={true}
                                                      className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                                      ownerState={
                                                        Object {
                                                          "children": "Description",
                                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                                          "classes": Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                          },
                                                          "color": "primary",
                                                          "component": "label",
                                                          "data-shrink": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "htmlFor": undefined,
                                                          "id": undefined,
                                                          "required": true,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <span
                                                        aria-hidden={true}
                                                        className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                                      >
                                                         
                                                        *
                                                      </span>
                                                    </MuiFormLabelAsterisk>
                                                  </label>
                                                </MuiFormLabelRoot>
                                              </ForwardRef(FormLabel)>
                                            </MuiInputLabelRoot>
                                          </ForwardRef(InputLabel)>
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "description-input",
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                Description
                                                 *
                                              </React.Fragment>
                                            }
                                            multiline={true}
                                            onChange={[Function]}
                                            placeholder="Enter a description"
                                            rows={4}
                                            value=""
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "input": "MuiOutlinedInput-input",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              components={
                                                Object {
                                                  "Input": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "input",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                  "Root": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "div",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "description-input",
                                                }
                                              }
                                              multiline={true}
                                              onChange={[Function]}
                                              placeholder="Enter a description"
                                              renderSuffix={[Function]}
                                              rows={4}
                                              type="text"
                                              value=""
                                            >
                                              <GlobalStyles
                                                styles={
                                                  Object {
                                                    "@keyframes mui-auto-fill": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                  }
                                                }
                                              >
                                                <GlobalStyles
                                                  defaultTheme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "unit": "px",
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1200,
                                                          "md": 900,
                                                          "sm": 600,
                                                          "xl": 1536,
                                                          "xs": 0,
                                                        },
                                                      },
                                                      "components": Object {},
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "palette": Object {
                                                        "action": Object {
                                                          "activatedOpacity": 0.12,
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "disabledOpacity": 0.38,
                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                          "focusOpacity": 0.12,
                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                          "hoverOpacity": 0.04,
                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                          "selectedOpacity": 0.08,
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fff",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c62828",
                                                          "light": "#ef5350",
                                                          "main": "#d32f2f",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#f5f5f5",
                                                          "A200": "#eeeeee",
                                                          "A400": "#bdbdbd",
                                                          "A700": "#616161",
                                                        },
                                                        "info": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#01579b",
                                                          "light": "#03a9f4",
                                                          "main": "#0288d1",
                                                        },
                                                        "mode": "light",
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1565c0",
                                                          "light": "#42a5f5",
                                                          "main": "#1976d2",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#7b1fa2",
                                                          "light": "#ba68c8",
                                                          "main": "#9c27b0",
                                                        },
                                                        "success": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1b5e20",
                                                          "light": "#4caf50",
                                                          "main": "#2e7d32",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "warning": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#e65100",
                                                          "light": "#ff9800",
                                                          "main": "#ed6c02",
                                                        },
                                                      },
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": [Function],
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.43,
                                                        },
                                                        "button": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightBold": 700,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1.2,
                                                        },
                                                        "h3": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h4": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.235,
                                                        },
                                                        "h5": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.334,
                                                        },
                                                        "h6": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "htmlFontSize": 16,
                                                        "overline": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "subtitle1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "speedDial": 1050,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                  styles={
                                                    Object {
                                                      "@keyframes mui-auto-fill": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionGlobal
                                                    styles={
                                                      Object {
                                                        "@keyframes mui-auto-fill": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                        "@keyframes mui-auto-fill-cancel": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                      }
                                                    }
                                                  />
                                                </GlobalStyles>
                                              </GlobalStyles>
                                              <MuiOutlinedInputRoot
                                                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline"
                                                classes={
                                                  Object {
                                                    "input": "MuiOutlinedInput-input",
                                                    "notchedOutline": null,
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                onClick={[Function]}
                                                ownerState={
                                                  Object {
                                                    "aria-describedby": undefined,
                                                    "autoComplete": undefined,
                                                    "autoFocus": false,
                                                    "classes": Object {
                                                      "input": "MuiOutlinedInput-input",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    },
                                                    "color": "primary",
                                                    "components": Object {
                                                      "Input": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "input",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                      "Root": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "div",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                    },
                                                    "defaultValue": undefined,
                                                    "disabled": false,
                                                    "endAdornment": undefined,
                                                    "error": false,
                                                    "focused": false,
                                                    "formControl": Object {
                                                      "adornedStart": false,
                                                      "color": "primary",
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "fullWidth": true,
                                                      "hiddenLabel": false,
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "registerEffect": [Function],
                                                      "required": true,
                                                      "setAdornedStart": [Function],
                                                      "size": "medium",
                                                      "variant": "outlined",
                                                    },
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "id": undefined,
                                                    "inputComponent": "input",
                                                    "inputProps": Object {
                                                      "data-testid": "description-input",
                                                    },
                                                    "inputRef": undefined,
                                                    "maxRows": undefined,
                                                    "minRows": undefined,
                                                    "multiline": true,
                                                    "name": undefined,
                                                    "onBlur": undefined,
                                                    "onChange": [Function],
                                                    "onFocus": undefined,
                                                    "placeholder": "Enter a description",
                                                    "renderSuffix": [Function],
                                                    "rows": 4,
                                                    "size": "medium",
                                                    "startAdornment": undefined,
                                                    "type": "text",
                                                    "value": "",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline css-rixlp9-MuiInputBase-root-MuiOutlinedInput-root"
                                                  onClick={[Function]}
                                                >
                                                  <MuiOutlinedInputInput
                                                    aria-invalid={false}
                                                    as={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "className": [Function],
                                                          "maxRows": [Function],
                                                          "minRows": [Function],
                                                          "onChange": [Function],
                                                          "placeholder": [Function],
                                                          "style": [Function],
                                                          "value": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    autoFocus={false}
                                                    className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline"
                                                    data-testid="description-input"
                                                    disabled={false}
                                                    maxRows={4}
                                                    minRows={4}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    ownerState={
                                                      Object {
                                                        "aria-describedby": undefined,
                                                        "autoComplete": undefined,
                                                        "autoFocus": false,
                                                        "classes": Object {
                                                          "input": "MuiOutlinedInput-input",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        },
                                                        "color": "primary",
                                                        "components": Object {
                                                          "Input": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "input",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                          "Root": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "div",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                        },
                                                        "defaultValue": undefined,
                                                        "disabled": false,
                                                        "endAdornment": undefined,
                                                        "error": false,
                                                        "focused": false,
                                                        "formControl": Object {
                                                          "adornedStart": false,
                                                          "color": "primary",
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "fullWidth": true,
                                                          "hiddenLabel": false,
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "registerEffect": [Function],
                                                          "required": true,
                                                          "setAdornedStart": [Function],
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        },
                                                        "fullWidth": true,
                                                        "hiddenLabel": false,
                                                        "id": undefined,
                                                        "inputComponent": "input",
                                                        "inputProps": Object {
                                                          "data-testid": "description-input",
                                                        },
                                                        "inputRef": undefined,
                                                        "maxRows": undefined,
                                                        "minRows": undefined,
                                                        "multiline": true,
                                                        "name": undefined,
                                                        "onBlur": undefined,
                                                        "onChange": [Function],
                                                        "onFocus": undefined,
                                                        "placeholder": "Enter a description",
                                                        "renderSuffix": [Function],
                                                        "rows": 4,
                                                        "size": "medium",
                                                        "startAdornment": undefined,
                                                        "type": "text",
                                                        "value": "",
                                                      }
                                                    }
                                                    placeholder="Enter a description"
                                                    required={true}
                                                    rows={4}
                                                    value=""
                                                  >
                                                    <Noop />
                                                    <ForwardRef(TextareaAutosize)
                                                      aria-invalid={false}
                                                      autoFocus={false}
                                                      className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                                      data-testid="description-input"
                                                      disabled={false}
                                                      maxRows={4}
                                                      minRows={4}
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder="Enter a description"
                                                      required={true}
                                                      rows={4}
                                                      value=""
                                                    >
                                                      <textarea
                                                        aria-invalid={false}
                                                        autoFocus={false}
                                                        className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                                        data-testid="description-input"
                                                        disabled={false}
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder="Enter a description"
                                                        required={true}
                                                        rows={4}
                                                        style={
                                                          Object {
                                                            "height": 0,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                        value=""
                                                      />
                                                      <textarea
                                                        aria-hidden={true}
                                                        className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputMultiline css-1sqnrkk-MuiInputBase-input-MuiOutlinedInput-input"
                                                        readOnly={true}
                                                        style={
                                                          Object {
                                                            "height": 0,
                                                            "left": 0,
                                                            "overflow": "hidden",
                                                            "padding": 0,
                                                            "position": "absolute",
                                                            "top": 0,
                                                            "transform": "translateZ(0)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex={-1}
                                                      />
                                                    </ForwardRef(TextareaAutosize)>
                                                  </MuiOutlinedInputInput>
                                                  <MuiOutlinedInputNotchedOutline
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        Description
                                                         *
                                                      </React.Fragment>
                                                    }
                                                    notched={false}
                                                  >
                                                    <Noop />
                                                    <NotchedOutline
                                                      className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                      label={
                                                        <React.Fragment>
                                                          Description
                                                           *
                                                        </React.Fragment>
                                                      }
                                                      notched={false}
                                                    >
                                                      <Styled(fieldset)
                                                        aria-hidden={true}
                                                        className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                        ownerState={
                                                          Object {
                                                            "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                            "label": <React.Fragment>
                                                              Description
                                                               *
                                                            </React.Fragment>,
                                                            "notched": false,
                                                          }
                                                        }
                                                      >
                                                        <Noop />
                                                        <fieldset
                                                          aria-hidden={true}
                                                          className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                        >
                                                          <Styled(legend)
                                                            ownerState={
                                                              Object {
                                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                "label": <React.Fragment>
                                                                  Description
                                                                   *
                                                                </React.Fragment>,
                                                                "notched": false,
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <legend
                                                              className="css-173wfxe"
                                                            >
                                                              <span>
                                                                Description
                                                                 *
                                                              </span>
                                                            </legend>
                                                          </Styled(legend)>
                                                        </fieldset>
                                                      </Styled(fieldset)>
                                                    </NotchedOutline>
                                                  </MuiOutlinedInputNotchedOutline>
                                                </div>
                                              </MuiOutlinedInputRoot>
                                            </ForwardRef(InputBase)>
                                          </ForwardRef(OutlinedInput)>
                                        </div>
                                      </MuiFormControlRoot>
                                    </ForwardRef(FormControl)>
                                  </MuiTextFieldRoot>
                                </ForwardRef(TextField)>
                              </Input>
                            </div>
                          </MuiPaperRoot>
                        </ForwardRef(Paper)>
                        <ForwardRef(Paper)>
                          <MuiPaperRoot
                            as="div"
                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                            ownerState={
                              Object {
                                "children": <Input
                                  InputProps={
                                    Object {
                                      "endAdornment": <ForwardRef(InputAdornment)
                                        position="end"
                                      >
                                        <SvgLogo
                                          height={25}
                                          icon="ethereum-logo.svg"
                                          width={25}
                                        />
                                      </ForwardRef(InputAdornment)>,
                                      "inputProps": Object {
                                        "min": "0",
                                        "step": "any",
                                      },
                                    }
                                  }
                                  label="Minting Price"
                                  onChange={[Function]}
                                  placeholder="0"
                                  required={true}
                                  type="number"
                                  value=""
                                />,
                                "component": "div",
                                "elevation": 1,
                                "square": false,
                                "variant": "elevation",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
                            >
                              <Input
                                InputProps={
                                  Object {
                                    "endAdornment": <ForwardRef(InputAdornment)
                                      position="end"
                                    >
                                      <SvgLogo
                                        height={25}
                                        icon="ethereum-logo.svg"
                                        width={25}
                                      />
                                    </ForwardRef(InputAdornment)>,
                                    "inputProps": Object {
                                      "min": "0",
                                      "step": "any",
                                    },
                                  }
                                }
                                label="Minting Price"
                                onChange={[Function]}
                                placeholder="0"
                                required={true}
                                type="number"
                                value=""
                              >
                                <ForwardRef(TextField)
                                  InputProps={
                                    Object {
                                      "endAdornment": <ForwardRef(InputAdornment)
                                        position="end"
                                      >
                                        <SvgLogo
                                          height={25}
                                          icon="ethereum-logo.svg"
                                          width={25}
                                        />
                                      </ForwardRef(InputAdornment)>,
                                      "inputProps": Object {
                                        "min": "0",
                                        "step": "any",
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  label="Minting Price"
                                  onChange={[Function]}
                                  placeholder="0"
                                  required={true}
                                  type="number"
                                  value=""
                                  variant="outlined"
                                >
                                  <MuiTextFieldRoot
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    ownerState={
                                      Object {
                                        "InputProps": Object {
                                          "endAdornment": <ForwardRef(InputAdornment)
                                            position="end"
                                          >
                                            <SvgLogo
                                              height={25}
                                              icon="ethereum-logo.svg"
                                              width={25}
                                            />
                                          </ForwardRef(InputAdornment)>,
                                          "inputProps": Object {
                                            "min": "0",
                                            "step": "any",
                                          },
                                        },
                                        "autoFocus": false,
                                        "color": "primary",
                                        "defaultValue": undefined,
                                        "disabled": false,
                                        "error": false,
                                        "fullWidth": true,
                                        "inputProps": undefined,
                                        "label": "Minting Price",
                                        "multiline": false,
                                        "name": undefined,
                                        "onChange": [Function],
                                        "onKeyPress": undefined,
                                        "placeholder": "0",
                                        "required": true,
                                        "rows": undefined,
                                        "select": false,
                                        "sx": undefined,
                                        "type": "number",
                                        "value": "",
                                        "variant": "outlined",
                                      }
                                    }
                                    required={true}
                                    variant="outlined"
                                  >
                                    <Noop />
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="outlined"
                                    >
                                      <MuiFormControlRoot
                                        as="div"
                                        className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                        ownerState={
                                          Object {
                                            "children": Array [
                                              <ForwardRef(InputLabel)>
                                                Minting Price
                                              </ForwardRef(InputLabel)>,
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                endAdornment={
                                                  <ForwardRef(InputAdornment)
                                                    position="end"
                                                  >
                                                    <SvgLogo
                                                      height={25}
                                                      icon="ethereum-logo.svg"
                                                      width={25}
                                                    />
                                                  </ForwardRef(InputAdornment)>
                                                }
                                                fullWidth={true}
                                                inputProps={
                                                  Object {
                                                    "min": "0",
                                                    "step": "any",
                                                  }
                                                }
                                                label={
                                                  <React.Fragment>
                                                    Minting Price
                                                     *
                                                  </React.Fragment>
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                placeholder="0"
                                                type="number"
                                                value=""
                                              />,
                                              undefined,
                                            ],
                                            "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                            "color": "primary",
                                            "component": "div",
                                            "disabled": false,
                                            "error": false,
                                            "fullWidth": true,
                                            "hiddenLabel": false,
                                            "margin": "none",
                                            "onKeyPress": undefined,
                                            "required": true,
                                            "size": "medium",
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <div
                                          className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                        >
                                          <ForwardRef(InputLabel)>
                                            <MuiInputLabelRoot
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                }
                                              }
                                              data-shrink={false}
                                              ownerState={
                                                Object {
                                                  "children": "Minting Price",
                                                  "disableAnimation": false,
                                                  "formControl": Object {
                                                    "adornedStart": false,
                                                    "color": "primary",
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "registerEffect": [Function],
                                                    "required": true,
                                                    "setAdornedStart": [Function],
                                                    "size": "medium",
                                                    "variant": "outlined",
                                                  },
                                                  "htmlFor": undefined,
                                                  "id": undefined,
                                                  "required": true,
                                                  "shrink": false,
                                                  "size": "medium",
                                                  "variant": "outlined",
                                                }
                                              }
                                            >
                                              <Noop />
                                              <ForwardRef(FormLabel)
                                                className="css-1x92c1k-MuiInputLabel-root"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiInputLabel-asterisk",
                                                    "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <MuiFormLabelRoot
                                                  as="label"
                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-1x92c1k-MuiInputLabel-root"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiInputLabel-asterisk",
                                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                  ownerState={
                                                    Object {
                                                      "children": "Minting Price",
                                                      "className": "css-1x92c1k-MuiInputLabel-root",
                                                      "classes": Object {
                                                        "asterisk": "MuiInputLabel-asterisk",
                                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                      },
                                                      "color": "primary",
                                                      "component": "label",
                                                      "data-shrink": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "htmlFor": undefined,
                                                      "id": undefined,
                                                      "required": true,
                                                    }
                                                  }
                                                >
                                                  <Noop />
                                                  <label
                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary Mui-required css-12o5nb6-MuiFormLabel-root-MuiInputLabel-root"
                                                    data-shrink={false}
                                                  >
                                                    Minting Price
                                                    <MuiFormLabelAsterisk
                                                      aria-hidden={true}
                                                      className="MuiInputLabel-asterisk MuiFormLabel-asterisk"
                                                      ownerState={
                                                        Object {
                                                          "children": "Minting Price",
                                                          "className": "css-1x92c1k-MuiInputLabel-root",
                                                          "classes": Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                                          },
                                                          "color": "primary",
                                                          "component": "label",
                                                          "data-shrink": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "htmlFor": undefined,
                                                          "id": undefined,
                                                          "required": true,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <span
                                                        aria-hidden={true}
                                                        className="MuiInputLabel-asterisk MuiFormLabel-asterisk css-wgai2y-MuiFormLabel-asterisk"
                                                      >
                                                         
                                                        *
                                                      </span>
                                                    </MuiFormLabelAsterisk>
                                                  </label>
                                                </MuiFormLabelRoot>
                                              </ForwardRef(FormLabel)>
                                            </MuiInputLabelRoot>
                                          </ForwardRef(InputLabel)>
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            endAdornment={
                                              <ForwardRef(InputAdornment)
                                                position="end"
                                              >
                                                <SvgLogo
                                                  height={25}
                                                  icon="ethereum-logo.svg"
                                                  width={25}
                                                />
                                              </ForwardRef(InputAdornment)>
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "min": "0",
                                                "step": "any",
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                Minting Price
                                                 *
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            placeholder="0"
                                            type="number"
                                            value=""
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "input": "MuiOutlinedInput-input",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              components={
                                                Object {
                                                  "Input": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "input",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-input;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                  "Root": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "__emotion_base": "div",
                                                    "__emotion_forwardProp": [Function],
                                                    "__emotion_real": [Circular],
                                                    "__emotion_styles": Array [
                                                      "label:MuiInputBase-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "label:MuiOutlinedInput-root;",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "defaultProps": undefined,
                                                    "render": [Function],
                                                    "withComponent": [Function],
                                                  },
                                                }
                                              }
                                              endAdornment={
                                                <ForwardRef(InputAdornment)
                                                  position="end"
                                                >
                                                  <SvgLogo
                                                    height={25}
                                                    icon="ethereum-logo.svg"
                                                    width={25}
                                                  />
                                                </ForwardRef(InputAdornment)>
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "min": "0",
                                                  "step": "any",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              placeholder="0"
                                              renderSuffix={[Function]}
                                              type="number"
                                              value=""
                                            >
                                              <GlobalStyles
                                                styles={
                                                  Object {
                                                    "@keyframes mui-auto-fill": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                      "from": Object {
                                                        "display": "block",
                                                      },
                                                    },
                                                  }
                                                }
                                              >
                                                <GlobalStyles
                                                  defaultTheme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "unit": "px",
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1200,
                                                          "md": 900,
                                                          "sm": 600,
                                                          "xl": 1536,
                                                          "xs": 0,
                                                        },
                                                      },
                                                      "components": Object {},
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "palette": Object {
                                                        "action": Object {
                                                          "activatedOpacity": 0.12,
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "disabledOpacity": 0.38,
                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                          "focusOpacity": 0.12,
                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                          "hoverOpacity": 0.04,
                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                          "selectedOpacity": 0.08,
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fff",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c62828",
                                                          "light": "#ef5350",
                                                          "main": "#d32f2f",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#f5f5f5",
                                                          "A200": "#eeeeee",
                                                          "A400": "#bdbdbd",
                                                          "A700": "#616161",
                                                        },
                                                        "info": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#01579b",
                                                          "light": "#03a9f4",
                                                          "main": "#0288d1",
                                                        },
                                                        "mode": "light",
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1565c0",
                                                          "light": "#42a5f5",
                                                          "main": "#1976d2",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#7b1fa2",
                                                          "light": "#ba68c8",
                                                          "main": "#9c27b0",
                                                        },
                                                        "success": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#1b5e20",
                                                          "light": "#4caf50",
                                                          "main": "#2e7d32",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "warning": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#e65100",
                                                          "light": "#ff9800",
                                                          "main": "#ed6c02",
                                                        },
                                                      },
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": [Function],
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.43,
                                                        },
                                                        "button": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightBold": 700,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1.2,
                                                        },
                                                        "h3": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.167,
                                                        },
                                                        "h4": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.235,
                                                        },
                                                        "h5": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.334,
                                                        },
                                                        "h6": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "htmlFontSize": 16,
                                                        "overline": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "subtitle1": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "speedDial": 1050,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                  styles={
                                                    Object {
                                                      "@keyframes mui-auto-fill": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                        "from": Object {
                                                          "display": "block",
                                                        },
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionGlobal
                                                    styles={
                                                      Object {
                                                        "@keyframes mui-auto-fill": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                        "@keyframes mui-auto-fill-cancel": Object {
                                                          "from": Object {
                                                            "display": "block",
                                                          },
                                                        },
                                                      }
                                                    }
                                                  />
                                                </GlobalStyles>
                                              </GlobalStyles>
                                              <MuiOutlinedInputRoot
                                                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd"
                                                classes={
                                                  Object {
                                                    "input": "MuiOutlinedInput-input",
                                                    "notchedOutline": null,
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                onClick={[Function]}
                                                ownerState={
                                                  Object {
                                                    "aria-describedby": undefined,
                                                    "autoComplete": undefined,
                                                    "autoFocus": false,
                                                    "classes": Object {
                                                      "input": "MuiOutlinedInput-input",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    },
                                                    "color": "primary",
                                                    "components": Object {
                                                      "Input": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "input",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-input;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                      "Root": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": "div",
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiInputBase-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          "label:MuiOutlinedInput-root;",
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                    },
                                                    "defaultValue": undefined,
                                                    "disabled": false,
                                                    "endAdornment": <ForwardRef(InputAdornment)
                                                      position="end"
                                                    >
                                                      <SvgLogo
                                                        height={25}
                                                        icon="ethereum-logo.svg"
                                                        width={25}
                                                      />
                                                    </ForwardRef(InputAdornment)>,
                                                    "error": false,
                                                    "focused": false,
                                                    "formControl": Object {
                                                      "adornedStart": false,
                                                      "color": "primary",
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "fullWidth": true,
                                                      "hiddenLabel": false,
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "registerEffect": [Function],
                                                      "required": true,
                                                      "setAdornedStart": [Function],
                                                      "size": "medium",
                                                      "variant": "outlined",
                                                    },
                                                    "fullWidth": true,
                                                    "hiddenLabel": false,
                                                    "id": undefined,
                                                    "inputComponent": "input",
                                                    "inputProps": Object {
                                                      "min": "0",
                                                      "step": "any",
                                                    },
                                                    "inputRef": undefined,
                                                    "maxRows": undefined,
                                                    "minRows": undefined,
                                                    "multiline": false,
                                                    "name": undefined,
                                                    "onBlur": undefined,
                                                    "onChange": [Function],
                                                    "onFocus": undefined,
                                                    "placeholder": "0",
                                                    "renderSuffix": [Function],
                                                    "rows": undefined,
                                                    "size": "medium",
                                                    "startAdornment": undefined,
                                                    "type": "number",
                                                    "value": "",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd css-1gvv60k-MuiInputBase-root-MuiOutlinedInput-root"
                                                  onClick={[Function]}
                                                >
                                                  <MuiOutlinedInputInput
                                                    aria-invalid={false}
                                                    as="input"
                                                    autoFocus={false}
                                                    className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                                                    disabled={false}
                                                    min="0"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    ownerState={
                                                      Object {
                                                        "aria-describedby": undefined,
                                                        "autoComplete": undefined,
                                                        "autoFocus": false,
                                                        "classes": Object {
                                                          "input": "MuiOutlinedInput-input",
                                                          "notchedOutline": null,
                                                          "root": "MuiOutlinedInput-root",
                                                        },
                                                        "color": "primary",
                                                        "components": Object {
                                                          "Input": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "input",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-input;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                          "Root": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": "div",
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiInputBase-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "label:MuiOutlinedInput-root;",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                        },
                                                        "defaultValue": undefined,
                                                        "disabled": false,
                                                        "endAdornment": <ForwardRef(InputAdornment)
                                                          position="end"
                                                        >
                                                          <SvgLogo
                                                            height={25}
                                                            icon="ethereum-logo.svg"
                                                            width={25}
                                                          />
                                                        </ForwardRef(InputAdornment)>,
                                                        "error": false,
                                                        "focused": false,
                                                        "formControl": Object {
                                                          "adornedStart": false,
                                                          "color": "primary",
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "fullWidth": true,
                                                          "hiddenLabel": false,
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "registerEffect": [Function],
                                                          "required": true,
                                                          "setAdornedStart": [Function],
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        },
                                                        "fullWidth": true,
                                                        "hiddenLabel": false,
                                                        "id": undefined,
                                                        "inputComponent": "input",
                                                        "inputProps": Object {
                                                          "min": "0",
                                                          "step": "any",
                                                        },
                                                        "inputRef": undefined,
                                                        "maxRows": undefined,
                                                        "minRows": undefined,
                                                        "multiline": false,
                                                        "name": undefined,
                                                        "onBlur": undefined,
                                                        "onChange": [Function],
                                                        "onFocus": undefined,
                                                        "placeholder": "0",
                                                        "renderSuffix": [Function],
                                                        "rows": undefined,
                                                        "size": "medium",
                                                        "startAdornment": undefined,
                                                        "type": "number",
                                                        "value": "",
                                                      }
                                                    }
                                                    placeholder="0"
                                                    required={true}
                                                    step="any"
                                                    type="number"
                                                    value=""
                                                  >
                                                    <Noop />
                                                    <input
                                                      aria-invalid={false}
                                                      autoFocus={false}
                                                      className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                                      disabled={false}
                                                      min="0"
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder="0"
                                                      required={true}
                                                      step="any"
                                                      type="number"
                                                      value=""
                                                    />
                                                  </MuiOutlinedInputInput>
                                                  <ForwardRef(InputAdornment)
                                                    position="end"
                                                  >
                                                    <MuiInputAdornmentRoot
                                                      as="div"
                                                      className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                                      ownerState={
                                                        Object {
                                                          "children": <SvgLogo
                                                            height={25}
                                                            icon="ethereum-logo.svg"
                                                            width={25}
                                                          />,
                                                          "disablePointerEvents": false,
                                                          "hiddenLabel": false,
                                                          "position": "end",
                                                          "size": "medium",
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                                      >
                                                        <SvgLogo
                                                          height={25}
                                                          icon="ethereum-logo.svg"
                                                          width={25}
                                                        >
                                                          <img
                                                            alt="logo"
                                                            height={25}
                                                            src="ethereum-logo.svg"
                                                            style={
                                                              Object {
                                                                "margin": "0",
                                                              }
                                                            }
                                                            width={25}
                                                          />
                                                        </SvgLogo>
                                                      </div>
                                                    </MuiInputAdornmentRoot>
                                                  </ForwardRef(InputAdornment)>
                                                  <MuiOutlinedInputNotchedOutline
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        Minting Price
                                                         *
                                                      </React.Fragment>
                                                    }
                                                    notched={false}
                                                  >
                                                    <Noop />
                                                    <NotchedOutline
                                                      className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                      label={
                                                        <React.Fragment>
                                                          Minting Price
                                                           *
                                                        </React.Fragment>
                                                      }
                                                      notched={false}
                                                    >
                                                      <Styled(fieldset)
                                                        aria-hidden={true}
                                                        className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                        ownerState={
                                                          Object {
                                                            "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                            "label": <React.Fragment>
                                                              Minting Price
                                                               *
                                                            </React.Fragment>,
                                                            "notched": false,
                                                          }
                                                        }
                                                      >
                                                        <Noop />
                                                        <fieldset
                                                          aria-hidden={true}
                                                          className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                        >
                                                          <Styled(legend)
                                                            ownerState={
                                                              Object {
                                                                "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                "label": <React.Fragment>
                                                                  Minting Price
                                                                   *
                                                                </React.Fragment>,
                                                                "notched": false,
                                                              }
                                                            }
                                                          >
                                                            <Noop />
                                                            <legend
                                                              className="css-173wfxe"
                                                            >
                                                              <span>
                                                                Minting Price
                                                                 *
                                                              </span>
                                                            </legend>
                                                          </Styled(legend)>
                                                        </fieldset>
                                                      </Styled(fieldset)>
                                                    </NotchedOutline>
                                                  </MuiOutlinedInputNotchedOutline>
                                                </div>
                                              </MuiOutlinedInputRoot>
                                            </ForwardRef(InputBase)>
                                          </ForwardRef(OutlinedInput)>
                                        </div>
                                      </MuiFormControlRoot>
                                    </ForwardRef(FormControl)>
                                  </MuiTextFieldRoot>
                                </ForwardRef(TextField)>
                              </Input>
                            </div>
                          </MuiPaperRoot>
                        </ForwardRef(Paper)>
                      </GeneralInfoStep>
                      <TypeOfArtStep
                        handleNextStep={[Function]}
                        setGenerative={[Function]}
                        stepNumber={0}
                      />
                      <StaticArtStep
                        generative={false}
                        handleImgDelete={[Function]}
                        handleImgDescChange={[Function]}
                        handleImgDrop={[Function]}
                        handleImgNameChange={[Function]}
                        isLoading={false}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "tiers": Array [],
                            },
                            "mintingPrice": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <TierSelectionStep
                        generative={false}
                        handleTierAdd={[Function]}
                        handleTierRemoval={[Function]}
                        handleTierReorder={[Function]}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "tiers": Array [],
                            },
                            "mintingPrice": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <LayerSelectionStep
                        generative={false}
                        handleLayerAddition={[Function]}
                        handleLayerRemoval={[Function]}
                        handleLayerReorder={[Function]}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "tiers": Array [],
                            },
                            "mintingPrice": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <LayerImageUpload
                        generative={false}
                        handleImgRarityChange={[Function]}
                        handleLayerImgDelete={[Function]}
                        handleLayerImgDrop={[Function]}
                        handleLayerImgNameChange={[Function]}
                        isLoading={false}
                        state={
                          Object {
                            "collectionName": "",
                            "description": "",
                            "generative": Object {
                              "layers": Array [],
                              "numberOfLayers": 0,
                              "numberOfTiers": 0,
                              "tiers": Array [],
                            },
                            "mintingPrice": "",
                            "static": Object {
                              "images": Object {},
                              "numberOfImages": 0,
                            },
                            "symbol": "",
                          }
                        }
                        stepNumber={0}
                      />
                      <ForwardRef(Box)
                        sx={
                          Object {
                            "display": "flex",
                            "flexDirection": Object {
                              "sm": "row",
                              "xs": "column",
                            },
                            "gap": "10px",
                            "minHeight": 50,
                          }
                        }
                      >
                        <Styled(div)
                          as="div"
                          className="MuiBox-root"
                          sx={
                            Object {
                              "display": "flex",
                              "flexDirection": Object {
                                "sm": "row",
                                "xs": "column",
                              },
                              "gap": "10px",
                              "minHeight": 50,
                            }
                          }
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "unit": "px",
                                "up": [Function],
                                "values": Object {
                                  "lg": 1200,
                                  "md": 900,
                                  "sm": 600,
                                  "xl": 1536,
                                  "xs": 0,
                                },
                              },
                              "components": Object {},
                              "direction": "ltr",
                              "mixins": Object {
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "activatedOpacity": 0.12,
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "disabledOpacity": 0.38,
                                  "focus": "rgba(0, 0, 0, 0.12)",
                                  "focusOpacity": 0.12,
                                  "hover": "rgba(0, 0, 0, 0.04)",
                                  "hoverOpacity": 0.04,
                                  "selected": "rgba(0, 0, 0, 0.08)",
                                  "selectedOpacity": 0.08,
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#F0F0F0",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c62828",
                                  "light": "#ef5350",
                                  "main": "#d32f2f",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#f5f5f5",
                                  "A200": "#eeeeee",
                                  "A400": "#bdbdbd",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#01579b",
                                  "light": "#03a9f4",
                                  "main": "#0288d1",
                                },
                                "mode": "light",
                                "primary": Object {
                                  "100": "#b2ebf2",
                                  "200": "#80deea",
                                  "300": "#4dd0e1",
                                  "400": "#26c6da",
                                  "50": "#e0f7fa",
                                  "500": "#00bcd4",
                                  "600": "#00acc1",
                                  "700": "#0097a7",
                                  "800": "#00838f",
                                  "900": "#006064",
                                  "A100": "#84ffff",
                                  "A200": "#18ffff",
                                  "A400": "#00e5ff",
                                  "A700": "#00b8d4",
                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                  "dark": "#0097a7",
                                  "light": "#4dd0e1",
                                  "main": "#00bcd4",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "success": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1b5e20",
                                  "light": "#4caf50",
                                  "main": "#2e7d32",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.6)",
                                },
                                "tonalOffset": 0.2,
                                "warning": Object {
                                  "contrastText": "#fff",
                                  "dark": "#e65100",
                                  "light": "#ff9800",
                                  "main": "#ed6c02",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                              Symbol(mui.nested): false,
                            }
                          }
                        >
                          <Noop />
                          <div
                            className="MuiBox-root css-50gf6y"
                          >
                            <FormAlert
                              alertMessage=""
                              alertSeverity="success"
                              closeAlert={[Function]}
                            >
                              <ForwardRef(Collapse)
                                in={false}
                                sx={
                                  Object {
                                    "flexGrow": 1,
                                  }
                                }
                              >
                                <Transition
                                  addEndListener={[Function]}
                                  appear={false}
                                  enter={true}
                                  exit={true}
                                  in={false}
                                  mountOnEnter={false}
                                  nodeRef={
                                    Object {
                                      "current": <div
                                        class="MuiCollapse-root MuiCollapse-vertical MuiCollapse-hidden css-x3e97n-MuiCollapse-root"
                                        style="min-height: 0px;"
                                      >
                                        <div
                                          class="MuiCollapse-wrapper MuiCollapse-vertical css-smkl36-MuiCollapse-wrapper"
                                        >
                                          <div
                                            class="MuiCollapse-wrapperInner MuiCollapse-vertical css-9l5vo-MuiCollapse-wrapperInner"
                                          >
                                            <div
                                              class="MuiPaper-root MuiPaper-elevation MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-secft3-MuiPaper-root-MuiAlert-root"
                                              data-testid="form-alert"
                                              role="alert"
                                            >
                                              <div
                                                class="MuiAlert-icon css-1ytlwq5-MuiAlert-icon"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                  data-testid="SuccessOutlinedIcon"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                                                  />
                                                </svg>
                                              </div>
                                              <div
                                                class="MuiAlert-message css-acap47-MuiAlert-message"
                                              />
                                              <div
                                                class="MuiAlert-action css-ki1hdl-MuiAlert-action"
                                              >
                                                <button
                                                  aria-label="close"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-1e0d89p-MuiButtonBase-root-MuiIconButton-root"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                    data-testid="CloseIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                  <span
                                                    class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>,
                                    }
                                  }
                                  onEnter={[Function]}
                                  onEntered={[Function]}
                                  onEntering={[Function]}
                                  onExit={[Function]}
                                  onExited={[Function]}
                                  onExiting={[Function]}
                                  sx={
                                    Object {
                                      "flexGrow": 1,
                                    }
                                  }
                                  timeout={300}
                                  unmountOnExit={false}
                                >
                                  <MuiCollapseRoot
                                    className="MuiCollapse-root MuiCollapse-vertical MuiCollapse-hidden"
                                    ownerState={
                                      Object {
                                        "children": <ForwardRef(Alert)
                                          action={
                                            <ForwardRef(IconButton)
                                              aria-label="close"
                                              color="inherit"
                                              onClick={[Function]}
                                              size="small"
                                            >
                                              <Memo
                                                fontSize="inherit"
                                              />
                                            </ForwardRef(IconButton)>
                                          }
                                          data-testid="form-alert"
                                          elevation={6}
                                          severity="success"
                                          variant="filled"
                                        >
                                          
                                        </ForwardRef(Alert)>,
                                        "collapsedSize": "0px",
                                        "in": false,
                                        "orientation": "vertical",
                                        "state": "exited",
                                        "sx": Object {
                                          "flexGrow": 1,
                                        },
                                      }
                                    }
                                    style={
                                      Object {
                                        "minHeight": "0px",
                                      }
                                    }
                                    sx={
                                      Object {
                                        "flexGrow": 1,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiCollapse-root MuiCollapse-vertical MuiCollapse-hidden css-x3e97n-MuiCollapse-root"
                                      style={
                                        Object {
                                          "minHeight": "0px",
                                        }
                                      }
                                    >
                                      <MuiCollapseWrapper
                                        className="MuiCollapse-wrapper MuiCollapse-vertical"
                                        ownerState={
                                          Object {
                                            "children": <ForwardRef(Alert)
                                              action={
                                                <ForwardRef(IconButton)
                                                  aria-label="close"
                                                  color="inherit"
                                                  onClick={[Function]}
                                                  size="small"
                                                >
                                                  <Memo
                                                    fontSize="inherit"
                                                  />
                                                </ForwardRef(IconButton)>
                                              }
                                              data-testid="form-alert"
                                              elevation={6}
                                              severity="success"
                                              variant="filled"
                                            >
                                              
                                            </ForwardRef(Alert)>,
                                            "collapsedSize": "0px",
                                            "in": false,
                                            "orientation": "vertical",
                                            "state": "exited",
                                            "sx": Object {
                                              "flexGrow": 1,
                                            },
                                          }
                                        }
                                      >
                                        <Noop />
                                        <div
                                          className="MuiCollapse-wrapper MuiCollapse-vertical css-smkl36-MuiCollapse-wrapper"
                                        >
                                          <MuiCollapseWrapperInner
                                            className="MuiCollapse-wrapperInner MuiCollapse-vertical"
                                            ownerState={
                                              Object {
                                                "children": <ForwardRef(Alert)
                                                  action={
                                                    <ForwardRef(IconButton)
                                                      aria-label="close"
                                                      color="inherit"
                                                      onClick={[Function]}
                                                      size="small"
                                                    >
                                                      <Memo
                                                        fontSize="inherit"
                                                      />
                                                    </ForwardRef(IconButton)>
                                                  }
                                                  data-testid="form-alert"
                                                  elevation={6}
                                                  severity="success"
                                                  variant="filled"
                                                >
                                                  
                                                </ForwardRef(Alert)>,
                                                "collapsedSize": "0px",
                                                "in": false,
                                                "orientation": "vertical",
                                                "state": "exited",
                                                "sx": Object {
                                                  "flexGrow": 1,
                                                },
                                              }
                                            }
                                          >
                                            <Noop />
                                            <div
                                              className="MuiCollapse-wrapperInner MuiCollapse-vertical css-9l5vo-MuiCollapse-wrapperInner"
                                            >
                                              <ForwardRef(Alert)
                                                action={
                                                  <ForwardRef(IconButton)
                                                    aria-label="close"
                                                    color="inherit"
                                                    onClick={[Function]}
                                                    size="small"
                                                  >
                                                    <Memo
                                                      fontSize="inherit"
                                                    />
                                                  </ForwardRef(IconButton)>
                                                }
                                                data-testid="form-alert"
                                                elevation={6}
                                                severity="success"
                                                variant="filled"
                                              >
                                                <MuiAlertRoot
                                                  className="MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled"
                                                  data-testid="form-alert"
                                                  elevation={6}
                                                  ownerState={
                                                    Object {
                                                      "action": <ForwardRef(IconButton)
                                                        aria-label="close"
                                                        color="inherit"
                                                        onClick={[Function]}
                                                        size="small"
                                                      >
                                                        <Memo
                                                          fontSize="inherit"
                                                        />
                                                      </ForwardRef(IconButton)>,
                                                      "children": "",
                                                      "color": undefined,
                                                      "data-testid": "form-alert",
                                                      "elevation": 6,
                                                      "severity": "success",
                                                      "variant": "filled",
                                                    }
                                                  }
                                                  role="alert"
                                                  square={true}
                                                >
                                                  <Noop />
                                                  <ForwardRef(Paper)
                                                    className="MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-19s02ur-MuiAlert-root"
                                                    data-testid="form-alert"
                                                    elevation={6}
                                                    role="alert"
                                                    square={true}
                                                  >
                                                    <MuiPaperRoot
                                                      as="div"
                                                      className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-19s02ur-MuiAlert-root"
                                                      data-testid="form-alert"
                                                      ownerState={
                                                        Object {
                                                          "children": Array [
                                                            <MuiAlertIcon
                                                              className="MuiAlert-icon"
                                                              ownerState={
                                                                Object {
                                                                  "action": <ForwardRef(IconButton)
                                                                    aria-label="close"
                                                                    color="inherit"
                                                                    onClick={[Function]}
                                                                    size="small"
                                                                  >
                                                                    <Memo
                                                                      fontSize="inherit"
                                                                    />
                                                                  </ForwardRef(IconButton)>,
                                                                  "children": "",
                                                                  "color": undefined,
                                                                  "data-testid": "form-alert",
                                                                  "elevation": 6,
                                                                  "severity": "success",
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                            >
                                                              <Memo
                                                                fontSize="inherit"
                                                              />
                                                            </MuiAlertIcon>,
                                                            <MuiAlertMessage
                                                              className="MuiAlert-message"
                                                              ownerState={
                                                                Object {
                                                                  "action": <ForwardRef(IconButton)
                                                                    aria-label="close"
                                                                    color="inherit"
                                                                    onClick={[Function]}
                                                                    size="small"
                                                                  >
                                                                    <Memo
                                                                      fontSize="inherit"
                                                                    />
                                                                  </ForwardRef(IconButton)>,
                                                                  "children": "",
                                                                  "color": undefined,
                                                                  "data-testid": "form-alert",
                                                                  "elevation": 6,
                                                                  "severity": "success",
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                            >
                                                              
                                                            </MuiAlertMessage>,
                                                            <MuiAlertAction
                                                              className="MuiAlert-action"
                                                            >
                                                              <ForwardRef(IconButton)
                                                                aria-label="close"
                                                                color="inherit"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <Memo
                                                                  fontSize="inherit"
                                                                />
                                                              </ForwardRef(IconButton)>
                                                            </MuiAlertAction>,
                                                            null,
                                                          ],
                                                          "className": "MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-19s02ur-MuiAlert-root",
                                                          "component": "div",
                                                          "data-testid": "form-alert",
                                                          "elevation": 6,
                                                          "role": "alert",
                                                          "square": true,
                                                          "variant": "elevation",
                                                        }
                                                      }
                                                      role="alert"
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-secft3-MuiPaper-root-MuiAlert-root"
                                                        data-testid="form-alert"
                                                        role="alert"
                                                      >
                                                        <MuiAlertIcon
                                                          className="MuiAlert-icon"
                                                          ownerState={
                                                            Object {
                                                              "action": <ForwardRef(IconButton)
                                                                aria-label="close"
                                                                color="inherit"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <Memo
                                                                  fontSize="inherit"
                                                                />
                                                              </ForwardRef(IconButton)>,
                                                              "children": "",
                                                              "color": undefined,
                                                              "data-testid": "form-alert",
                                                              "elevation": 6,
                                                              "severity": "success",
                                                              "variant": "filled",
                                                            }
                                                          }
                                                        >
                                                          <Noop />
                                                          <div
                                                            className="MuiAlert-icon css-1ytlwq5-MuiAlert-icon"
                                                          >
                                                            <ForwardRef(SuccessOutlinedIcon)
                                                              fontSize="inherit"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                data-testid="SuccessOutlinedIcon"
                                                                fontSize="inherit"
                                                              >
                                                                <MuiSvgIconRoot
                                                                  aria-hidden={true}
                                                                  as="svg"
                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                                                  data-testid="SuccessOutlinedIcon"
                                                                  focusable="false"
                                                                  ownerState={
                                                                    Object {
                                                                      "children": <path
                                                                        d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                                                                      />,
                                                                      "color": "inherit",
                                                                      "component": "svg",
                                                                      "data-testid": "SuccessOutlinedIcon",
                                                                      "fontSize": "inherit",
                                                                      "viewBox": "0 0 24 24",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <Noop />
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                                    data-testid="SuccessOutlinedIcon"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                                                                    />
                                                                  </svg>
                                                                </MuiSvgIconRoot>
                                                              </ForwardRef(SvgIcon)>
                                                            </ForwardRef(SuccessOutlinedIcon)>
                                                          </div>
                                                        </MuiAlertIcon>
                                                        <MuiAlertMessage
                                                          className="MuiAlert-message"
                                                          ownerState={
                                                            Object {
                                                              "action": <ForwardRef(IconButton)
                                                                aria-label="close"
                                                                color="inherit"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <Memo
                                                                  fontSize="inherit"
                                                                />
                                                              </ForwardRef(IconButton)>,
                                                              "children": "",
                                                              "color": undefined,
                                                              "data-testid": "form-alert",
                                                              "elevation": 6,
                                                              "severity": "success",
                                                              "variant": "filled",
                                                            }
                                                          }
                                                        >
                                                          <Noop />
                                                          <div
                                                            className="MuiAlert-message css-acap47-MuiAlert-message"
                                                          />
                                                        </MuiAlertMessage>
                                                        <MuiAlertAction
                                                          className="MuiAlert-action"
                                                        >
                                                          <Noop />
                                                          <div
                                                            className="MuiAlert-action css-ki1hdl-MuiAlert-action"
                                                          >
                                                            <ForwardRef(IconButton)
                                                              aria-label="close"
                                                              color="inherit"
                                                              onClick={[Function]}
                                                              size="small"
                                                            >
                                                              <MuiIconButtonRoot
                                                                aria-label="close"
                                                                centerRipple={true}
                                                                className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                onClick={[Function]}
                                                                ownerState={
                                                                  Object {
                                                                    "aria-label": "close",
                                                                    "children": <Memo
                                                                      fontSize="inherit"
                                                                    />,
                                                                    "color": "inherit",
                                                                    "disableFocusRipple": false,
                                                                    "disabled": false,
                                                                    "edge": false,
                                                                    "onClick": [Function],
                                                                    "size": "small",
                                                                  }
                                                                }
                                                              >
                                                                <Noop />
                                                                <ForwardRef(ButtonBase)
                                                                  aria-label="close"
                                                                  centerRipple={true}
                                                                  className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-8mu34q-MuiIconButton-root"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <MuiButtonBaseRoot
                                                                    aria-label="close"
                                                                    as="button"
                                                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-8mu34q-MuiIconButton-root"
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onContextMenu={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    ownerState={
                                                                      Object {
                                                                        "aria-label": "close",
                                                                        "centerRipple": true,
                                                                        "children": <Memo
                                                                          fontSize="inherit"
                                                                        />,
                                                                        "className": "MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-8mu34q-MuiIconButton-root",
                                                                        "component": "button",
                                                                        "disableRipple": false,
                                                                        "disableTouchRipple": false,
                                                                        "disabled": false,
                                                                        "focusRipple": true,
                                                                        "focusVisible": false,
                                                                        "onClick": [Function],
                                                                        "tabIndex": 0,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                    type="button"
                                                                  >
                                                                    <Noop />
                                                                    <button
                                                                      aria-label="close"
                                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-sizeSmall css-1e0d89p-MuiButtonBase-root-MuiIconButton-root"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <ForwardRef(CloseIcon)
                                                                        fontSize="inherit"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          data-testid="CloseIcon"
                                                                          fontSize="inherit"
                                                                        >
                                                                          <MuiSvgIconRoot
                                                                            aria-hidden={true}
                                                                            as="svg"
                                                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                                                            data-testid="CloseIcon"
                                                                            focusable="false"
                                                                            ownerState={
                                                                              Object {
                                                                                "children": <path
                                                                                  d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                />,
                                                                                "color": "inherit",
                                                                                "component": "svg",
                                                                                "data-testid": "CloseIcon",
                                                                                "fontSize": "inherit",
                                                                                "viewBox": "0 0 24 24",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <Noop />
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                                                              data-testid="CloseIcon"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                              />
                                                                            </svg>
                                                                          </MuiSvgIconRoot>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </ForwardRef(CloseIcon)>
                                                                      <ForwardRef(TouchRipple)
                                                                        center={true}
                                                                      >
                                                                        <MuiTouchRippleRoot
                                                                          className="MuiTouchRipple-root"
                                                                        >
                                                                          <Noop />
                                                                          <span
                                                                            className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </MuiTouchRippleRoot>
                                                                      </ForwardRef(TouchRipple)>
                                                                    </button>
                                                                  </MuiButtonBaseRoot>
                                                                </ForwardRef(ButtonBase)>
                                                              </MuiIconButtonRoot>
                                                            </ForwardRef(IconButton)>
                                                          </div>
                                                        </MuiAlertAction>
                                                      </div>
                                                    </MuiPaperRoot>
                                                  </ForwardRef(Paper)>
                                                </MuiAlertRoot>
                                              </ForwardRef(Alert)>
                                            </div>
                                          </MuiCollapseWrapperInner>
                                        </div>
                                      </MuiCollapseWrapper>
                                    </div>
                                  </MuiCollapseRoot>
                                </Transition>
                              </ForwardRef(Collapse)>
                            </FormAlert>
                            <FormButtons
                              handlePrevStep={[Function]}
                              isLastStep={false}
                              isLoading={false}
                              loadingMessage=""
                              stepNumber={0}
                            >
                              <ForwardRef(Box)
                                sx={
                                  Object {
                                    "display": "flex",
                                    "gap": "10px",
                                    "justifyContent": "flex-end",
                                  }
                                }
                              >
                                <Styled(div)
                                  as="div"
                                  className="MuiBox-root"
                                  sx={
                                    Object {
                                      "display": "flex",
                                      "gap": "10px",
                                      "justifyContent": "flex-end",
                                    }
                                  }
                                  theme={
                                    Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "unit": "px",
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1200,
                                          "md": 900,
                                          "sm": 600,
                                          "xl": 1536,
                                          "xs": 0,
                                        },
                                      },
                                      "components": Object {},
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "palette": Object {
                                        "action": Object {
                                          "activatedOpacity": 0.12,
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "disabledOpacity": 0.38,
                                          "focus": "rgba(0, 0, 0, 0.12)",
                                          "focusOpacity": 0.12,
                                          "hover": "rgba(0, 0, 0, 0.04)",
                                          "hoverOpacity": 0.04,
                                          "selected": "rgba(0, 0, 0, 0.08)",
                                          "selectedOpacity": 0.08,
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#F0F0F0",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c62828",
                                          "light": "#ef5350",
                                          "main": "#d32f2f",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#f5f5f5",
                                          "A200": "#eeeeee",
                                          "A400": "#bdbdbd",
                                          "A700": "#616161",
                                        },
                                        "info": Object {
                                          "contrastText": "#fff",
                                          "dark": "#01579b",
                                          "light": "#03a9f4",
                                          "main": "#0288d1",
                                        },
                                        "mode": "light",
                                        "primary": Object {
                                          "100": "#b2ebf2",
                                          "200": "#80deea",
                                          "300": "#4dd0e1",
                                          "400": "#26c6da",
                                          "50": "#e0f7fa",
                                          "500": "#00bcd4",
                                          "600": "#00acc1",
                                          "700": "#0097a7",
                                          "800": "#00838f",
                                          "900": "#006064",
                                          "A100": "#84ffff",
                                          "A200": "#18ffff",
                                          "A400": "#00e5ff",
                                          "A700": "#00b8d4",
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#0097a7",
                                          "light": "#4dd0e1",
                                          "main": "#00bcd4",
                                        },
                                        "secondary": Object {
                                          "100": "#f8bbd0",
                                          "200": "#f48fb1",
                                          "300": "#f06292",
                                          "400": "#ec407a",
                                          "50": "#fce4ec",
                                          "500": "#e91e63",
                                          "600": "#d81b60",
                                          "700": "#c2185b",
                                          "800": "#ad1457",
                                          "900": "#880e4f",
                                          "A100": "#ff80ab",
                                          "A200": "#ff4081",
                                          "A400": "#f50057",
                                          "A700": "#c51162",
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "#fff",
                                          "dark": "#1b5e20",
                                          "light": "#4caf50",
                                          "main": "#2e7d32",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.6)",
                                        },
                                        "tonalOffset": 0.2,
                                        "warning": Object {
                                          "contrastText": "#fff",
                                          "dark": "#e65100",
                                          "light": "#ff9800",
                                          "main": "#ed6c02",
                                        },
                                      },
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                      Symbol(mui.nested): false,
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiBox-root css-qilq07"
                                  >
                                    <ForwardRef(Button)
                                      color="error"
                                      data-testid="previous-page"
                                      disabled={true}
                                      onClick={[Function]}
                                      size="large"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className=""
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                          }
                                        }
                                        component="button"
                                        data-testid="previous-page"
                                        disableRipple={false}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Back",
                                            "color": "error",
                                            "component": "button",
                                            "data-testid": "previous-page",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disabled": true,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "large",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <ForwardRef(ButtonBase)
                                          className=" css-oonr1p-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                            }
                                          }
                                          component="button"
                                          data-testid="previous-page"
                                          disableRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge MuiButtonBase-root Mui-disabled  css-oonr1p-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                              }
                                            }
                                            data-testid="previous-page"
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                    ownerState={
                                                      Object {
                                                        "children": "Back",
                                                        "color": "error",
                                                        "component": "button",
                                                        "data-testid": "previous-page",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disabled": true,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "large",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Back",
                                                  undefined,
                                                ],
                                                "className": " css-oonr1p-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                                },
                                                "component": "button",
                                                "data-testid": "previous-page",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": true,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={-1}
                                            type="button"
                                          >
                                            <Noop />
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeLarge MuiButton-containedSizeLarge MuiButtonBase-root Mui-disabled  css-1i749hr-MuiButtonBase-root-MuiButton-root"
                                              data-testid="previous-page"
                                              disabled={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                ownerState={
                                                  Object {
                                                    "children": "Back",
                                                    "color": "error",
                                                    "component": "button",
                                                    "data-testid": "previous-page",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disabled": true,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "large",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeLarge css-htszrh-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(ClearIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="ClearIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="ClearIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "ClearIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <Noop />
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="ClearIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(ClearIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Back
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                    <ForwardRef(LoadingButton)
                                      color="success"
                                      data-testid="submit-btn"
                                      endIcon={<Memo />}
                                      loading={false}
                                      loadingPosition="end"
                                      size="large"
                                      sx={
                                        Object {
                                          "&.Mui-disabled": Object {
                                            "bgcolor": "secondary.main",
                                            "color": "white",
                                          },
                                        }
                                      }
                                      type="submit"
                                      variant="contained"
                                    >
                                      <MuiLoadingButtonRoot
                                        classes={
                                          Object {
                                            "endIcon": "",
                                            "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                            "root": "MuiLoadingButton-root",
                                            "startIcon": "",
                                          }
                                        }
                                        color="success"
                                        data-testid="submit-btn"
                                        disabled={false}
                                        endIcon={<Memo />}
                                        ownerState={
                                          Object {
                                            "children": "Next",
                                            "color": "success",
                                            "data-testid": "submit-btn",
                                            "disabled": false,
                                            "endIcon": <Memo />,
                                            "loading": false,
                                            "loadingIndicator": <ForwardRef(CircularProgress)
                                              color="inherit"
                                              size={16}
                                            />,
                                            "loadingPosition": "end",
                                            "size": "large",
                                            "sx": Object {
                                              "&.Mui-disabled": Object {
                                                "bgcolor": "secondary.main",
                                                "color": "white",
                                              },
                                            },
                                            "type": "submit",
                                            "variant": "contained",
                                          }
                                        }
                                        size="large"
                                        sx={
                                          Object {
                                            "&.Mui-disabled": Object {
                                              "bgcolor": "secondary.main",
                                              "color": "white",
                                            },
                                          }
                                        }
                                        type="submit"
                                        variant="contained"
                                      >
                                        <Noop />
                                        <ForwardRef(Button)
                                          className="css-1je27za-MuiLoadingButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "",
                                              "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                              "root": "MuiLoadingButton-root",
                                              "startIcon": "",
                                            }
                                          }
                                          color="success"
                                          data-testid="submit-btn"
                                          disabled={false}
                                          endIcon={<Memo />}
                                          size="large"
                                          type="submit"
                                          variant="contained"
                                        >
                                          <MuiButtonRoot
                                            className="css-1je27za-MuiLoadingButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                "label": "MuiButton-label",
                                                "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                "root": "MuiLoadingButton-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                              }
                                            }
                                            component="button"
                                            data-testid="submit-btn"
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={true}
                                            focusVisibleClassName=""
                                            ownerState={
                                              Object {
                                                "children": <React.Fragment>
                                                  Next
                                                </React.Fragment>,
                                                "className": "css-1je27za-MuiLoadingButton-root",
                                                "classes": Object {
                                                  "endIcon": "",
                                                  "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                  "root": "MuiLoadingButton-root",
                                                  "startIcon": "",
                                                },
                                                "color": "success",
                                                "component": "button",
                                                "data-testid": "submit-btn",
                                                "disableElevation": false,
                                                "disableFocusRipple": false,
                                                "disabled": false,
                                                "endIcon": <Memo />,
                                                "fullWidth": false,
                                                "size": "large",
                                                "type": "submit",
                                                "variant": "contained",
                                              }
                                            }
                                            type="submit"
                                          >
                                            <Noop />
                                            <ForwardRef(ButtonBase)
                                              className="css-x7i5zk-MuiButton-root-MuiLoadingButton-root"
                                              classes={
                                                Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                  "label": "MuiButton-label",
                                                  "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                  "root": "MuiLoadingButton-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                                }
                                              }
                                              component="button"
                                              data-testid="submit-btn"
                                              disableRipple={false}
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName=""
                                              type="submit"
                                            >
                                              <MuiButtonBaseRoot
                                                as="button"
                                                className="MuiLoadingButton-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeLarge MuiButton-containedSizeLarge MuiButtonBase-root css-x7i5zk-MuiButton-root-MuiLoadingButton-root"
                                                classes={
                                                  Object {
                                                    "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                    "label": "MuiButton-label",
                                                    "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                    "root": "MuiLoadingButton-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                    "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                                  }
                                                }
                                                data-testid="submit-btn"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onContextMenu={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                ownerState={
                                                  Object {
                                                    "centerRipple": false,
                                                    "children": Array [
                                                      undefined,
                                                      <React.Fragment>
                                                        Next
                                                      </React.Fragment>,
                                                      <MuiButtonEndIcon
                                                        className="MuiButton-endIcon MuiButton-iconSizeLarge"
                                                        ownerState={
                                                          Object {
                                                            "children": <React.Fragment>
                                                              Next
                                                            </React.Fragment>,
                                                            "className": "css-1je27za-MuiLoadingButton-root",
                                                            "classes": Object {
                                                              "endIcon": "",
                                                              "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                              "root": "MuiLoadingButton-root",
                                                              "startIcon": "",
                                                            },
                                                            "color": "success",
                                                            "component": "button",
                                                            "data-testid": "submit-btn",
                                                            "disableElevation": false,
                                                            "disableFocusRipple": false,
                                                            "disabled": false,
                                                            "endIcon": <Memo />,
                                                            "fullWidth": false,
                                                            "size": "large",
                                                            "type": "submit",
                                                            "variant": "contained",
                                                          }
                                                        }
                                                      >
                                                        <Memo />
                                                      </MuiButtonEndIcon>,
                                                    ],
                                                    "className": "css-x7i5zk-MuiButton-root-MuiLoadingButton-root",
                                                    "classes": Object {
                                                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeLarge",
                                                      "label": "MuiButton-label",
                                                      "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                      "root": "MuiLoadingButton-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeLarge MuiButton-containedSizeLarge",
                                                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeLarge",
                                                    },
                                                    "component": "button",
                                                    "data-testid": "submit-btn",
                                                    "disableRipple": false,
                                                    "disableTouchRipple": false,
                                                    "disabled": false,
                                                    "focusRipple": true,
                                                    "focusVisible": false,
                                                    "focusVisibleClassName": "",
                                                    "tabIndex": 0,
                                                    "type": "submit",
                                                  }
                                                }
                                                tabIndex={0}
                                                type="submit"
                                              >
                                                <Noop />
                                                <button
                                                  className="MuiLoadingButton-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeLarge MuiButton-containedSizeLarge MuiButtonBase-root css-1gmsu7r-MuiButtonBase-root-MuiButton-root-MuiLoadingButton-root"
                                                  data-testid="submit-btn"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onContextMenu={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  Next
                                                  <MuiButtonEndIcon
                                                    className="MuiButton-endIcon MuiButton-iconSizeLarge"
                                                    ownerState={
                                                      Object {
                                                        "children": <React.Fragment>
                                                          Next
                                                        </React.Fragment>,
                                                        "className": "css-1je27za-MuiLoadingButton-root",
                                                        "classes": Object {
                                                          "endIcon": "",
                                                          "loadingIndicator": "MuiLoadingButton-loadingIndicator",
                                                          "root": "MuiLoadingButton-root",
                                                          "startIcon": "",
                                                        },
                                                        "color": "success",
                                                        "component": "button",
                                                        "data-testid": "submit-btn",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disabled": false,
                                                        "endIcon": <Memo />,
                                                        "fullWidth": false,
                                                        "size": "large",
                                                        "type": "submit",
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Noop />
                                                    <span
                                                      className="MuiButton-endIcon MuiButton-iconSizeLarge css-z4rqyd-MuiButton-endIcon"
                                                    >
                                                      <ForwardRef(NavigateNextIcon)>
                                                        <ForwardRef(SvgIcon)
                                                          data-testid="NavigateNextIcon"
                                                        >
                                                          <MuiSvgIconRoot
                                                            aria-hidden={true}
                                                            as="svg"
                                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                            data-testid="NavigateNextIcon"
                                                            focusable="false"
                                                            ownerState={
                                                              Object {
                                                                "children": <path
                                                                  d="M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                                                />,
                                                                "color": "inherit",
                                                                "component": "svg",
                                                                "data-testid": "NavigateNextIcon",
                                                                "fontSize": "medium",
                                                                "viewBox": "0 0 24 24",
                                                              }
                                                            }
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <Noop />
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                              data-testid="NavigateNextIcon"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                                              />
                                                            </svg>
                                                          </MuiSvgIconRoot>
                                                        </ForwardRef(SvgIcon)>
                                                      </ForwardRef(NavigateNextIcon)>
                                                    </span>
                                                  </MuiButtonEndIcon>
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                  >
                                                    <MuiTouchRippleRoot
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <Noop />
                                                      <span
                                                        className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </MuiTouchRippleRoot>
                                                  </ForwardRef(TouchRipple)>
                                                </button>
                                              </MuiButtonBaseRoot>
                                            </ForwardRef(ButtonBase)>
                                          </MuiButtonRoot>
                                        </ForwardRef(Button)>
                                      </MuiLoadingButtonRoot>
                                    </ForwardRef(LoadingButton)>
                                  </div>
                                </Styled(div)>
                              </ForwardRef(Box)>
                            </FormButtons>
                          </div>
                        </Styled(div)>
                      </ForwardRef(Box)>
                    </form>
                  </MuiStackRoot>
                </ForwardRef(Stack)>
              </CreateCollectionForm>
            </CreateCollectionPage>
          </Web3ReactProvider>
        </NetworkProvider>
      </InnerThemeProvider>
    </ThemeProvider>
  </ThemeProvider>
</ThemeProvider>
`;
