/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { Circle, CircleInterface } from "../Circle";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x1402c0d9",
        type: "bytes32",
      },
    ],
    name: "c_0x1402c0d9",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a8c38038062001a8c8339818101604052810190620000379190620001ce565b8181816003908051906020019062000051929190620000ac565b5080600490805190602001906200006a929190620000ac565b505050620000a17fba9af3641cdbeab61e233284b0c72bfecc0434d4d8597e85a58fe6628ffa60cf60001b620000a960201b60201c565b505062000372565b50565b828054620000ba90620002de565b90600052602060002090601f016020900481019282620000de57600085556200012a565b82601f10620000f957805160ff19168380011785556200012a565b828001600101855582156200012a579182015b82811115620001295782518255916020019190600101906200010c565b5b5090506200013991906200013d565b5090565b5b80821115620001585760008160009055506001016200013e565b5090565b6000620001736200016d8462000275565b62000241565b9050828152602081018484840111156200018c57600080fd5b62000199848285620002a8565b509392505050565b600082601f830112620001b357600080fd5b8151620001c58482602086016200015c565b91505092915050565b60008060408385031215620001e257600080fd5b600083015167ffffffffffffffff811115620001fd57600080fd5b6200020b85828601620001a1565b925050602083015167ffffffffffffffff8111156200022957600080fd5b6200023785828601620001a1565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200026b576200026a62000343565b5b8060405250919050565b600067ffffffffffffffff82111562000293576200029262000343565b5b601f19601f8301169050602081019050919050565b60005b83811015620002c8578082015181840152602081019050620002ab565b83811115620002d8576000848401525b50505050565b60006002820490506001821680620002f757607f821691505b602082108114156200030e576200030d62000314565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61170a80620003826000396000f3fe6080604052600436106100c25760003560e01c8063395093511161007f578063a0712d6811610059578063a0712d6814610290578063a457c2d7146102ac578063a9059cbb146102e9578063dd62ed3e14610326576100c2565b806339509351146101eb57806370a082311461022857806395d89b4114610265576100c2565b806302d60072146100c757806306fdde03146100f0578063095ea7b31461011b57806318160ddd1461015857806323b872dd14610183578063313ce567146101c0575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610fb5565b610363565b005b3480156100fc57600080fd5b50610105610366565b6040516101129190611392565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d9190610f79565b6103f8565b60405161014f9190611377565b60405180910390f35b34801561016457600080fd5b5061016d610416565b60405161017a91906114b4565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a59190610f2a565b610420565b6040516101b79190611377565b60405180910390f35b3480156101cc57600080fd5b506101d5610518565b6040516101e291906114cf565b60405180910390f35b3480156101f757600080fd5b50610212600480360381019061020d9190610f79565b610521565b60405161021f9190611377565b60405180910390f35b34801561023457600080fd5b5061024f600480360381019061024a9190610ec5565b6105cd565b60405161025c91906114b4565b60405180910390f35b34801561027157600080fd5b5061027a610615565b6040516102879190611392565b60405180910390f35b6102aa60048036038101906102a59190610fde565b6106a7565b005b3480156102b857600080fd5b506102d360048036038101906102ce9190610f79565b610738565b6040516102e09190611377565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b9190610f79565b610823565b60405161031d9190611377565b60405180910390f35b34801561033257600080fd5b5061034d60048036038101906103489190610eee565b610841565b60405161035a91906114b4565b60405180910390f35b50565b606060038054610375906115ee565b80601f01602080910402602001604051908101604052809291908181526020018280546103a1906115ee565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b600061040c6104056108c8565b84846108d0565b6001905092915050565b6000600254905090565b600061042d848484610a9b565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104786108c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90611414565b60405180910390fd5b61050c856105046108c8565b8584036108d0565b60019150509392505050565b60006012905090565b60006105c361052e6108c8565b84846001600061053c6108c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105be9190611506565b6108d0565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610624906115ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610650906115ee565b801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b6106d37f82687e02b20f0d6544a5d9802adcf664a2b10d984e7f393bb407267642e0fd2760001b610363565b6106ff7fae84b1790748443d86b4d5c1230594a775f00e32431119d57d211a7b38584a2b60001b610363565b61072b7ff47dedc575b26909b0f3f2b3cafa68bf42fcabaf37e59556bfd576151459804160001b610363565b6107353382610d1c565b50565b600080600160006107476108c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611474565b60405180910390fd5b61081861080f6108c8565b858584036108d0565b600191505092915050565b60006108376108306108c8565b8484610a9b565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790611454565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a7906113d4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a8e91906114b4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0290611434565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b72906113b4565b60405180910390fd5b610b86838383610e7c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c03906113f4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c9f9190611506565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d0391906114b4565b60405180910390a3610d16848484610e81565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611494565b60405180910390fd5b610d9860008383610e7c565b8060026000828254610daa9190611506565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dff9190611506565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e6491906114b4565b60405180910390a3610e7860008383610e81565b5050565b505050565b505050565b600081359050610e958161168f565b92915050565b600081359050610eaa816116a6565b92915050565b600081359050610ebf816116bd565b92915050565b600060208284031215610ed757600080fd5b6000610ee584828501610e86565b91505092915050565b60008060408385031215610f0157600080fd5b6000610f0f85828601610e86565b9250506020610f2085828601610e86565b9150509250929050565b600080600060608486031215610f3f57600080fd5b6000610f4d86828701610e86565b9350506020610f5e86828701610e86565b9250506040610f6f86828701610eb0565b9150509250925092565b60008060408385031215610f8c57600080fd5b6000610f9a85828601610e86565b9250506020610fab85828601610eb0565b9150509250929050565b600060208284031215610fc757600080fd5b6000610fd584828501610e9b565b91505092915050565b600060208284031215610ff057600080fd5b6000610ffe84828501610eb0565b91505092915050565b6110108161156e565b82525050565b6000611021826114ea565b61102b81856114f5565b935061103b8185602086016115bb565b6110448161167e565b840191505092915050565b600061105c6023836114f5565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110c26022836114f5565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111286026836114f5565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061118e6028836114f5565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111f46025836114f5565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061125a6024836114f5565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112c06025836114f5565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611326601f836114f5565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b611362816115a4565b82525050565b611371816115ae565b82525050565b600060208201905061138c6000830184611007565b92915050565b600060208201905081810360008301526113ac8184611016565b905092915050565b600060208201905081810360008301526113cd8161104f565b9050919050565b600060208201905081810360008301526113ed816110b5565b9050919050565b6000602082019050818103600083015261140d8161111b565b9050919050565b6000602082019050818103600083015261142d81611181565b9050919050565b6000602082019050818103600083015261144d816111e7565b9050919050565b6000602082019050818103600083015261146d8161124d565b9050919050565b6000602082019050818103600083015261148d816112b3565b9050919050565b600060208201905081810360008301526114ad81611319565b9050919050565b60006020820190506114c96000830184611359565b92915050565b60006020820190506114e46000830184611368565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611511826115a4565b915061151c836115a4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155157611550611620565b5b828201905092915050565b600061156782611584565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156115d95780820151818401526020810190506115be565b838111156115e8576000848401525b50505050565b6000600282049050600182168061160657607f821691505b6020821081141561161a5761161961164f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6116988161155c565b81146116a357600080fd5b50565b6116af8161157a565b81146116ba57600080fd5b50565b6116c6816115a4565b81146116d157600080fd5b5056fea2646970667358221220a84c8f55c816ca070f0669162bc1a6f8aa8dea2365bda0ac037d3efd2e39a01a64736f6c63430008000033";

export class Circle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Circle> {
    return super.deploy(name, symbol, overrides || {}) as Promise<Circle>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): Circle {
    return super.attach(address) as Circle;
  }
  connect(signer: Signer): Circle__factory {
    return super.connect(signer) as Circle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircleInterface {
    return new utils.Interface(_abi) as CircleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Circle {
    return new Contract(address, _abi, signerOrProvider) as Circle;
  }
}
