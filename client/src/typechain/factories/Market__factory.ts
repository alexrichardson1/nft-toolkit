/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Delist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SellListing",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "areStable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "delist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isStable",
        type: "bool",
      },
    ],
    name: "sellListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cce380380610cce83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100ae565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008e578182fd5b61009783610060565b91506100a560208401610060565b90509250929050565b610c11806100bd6000396000f3fe60806040526004361061004a5760003560e01c806339e359be1461004f57806365551fe514610071578063964bc33f146100a7578063d96a094a146100c7578063de74e57b146100da575b600080fd5b34801561005b57600080fd5b5061006f61006a3660046109fd565b610107565b005b34801561007d57600080fd5b5061009161008c3660046109e5565b6102ec565b60405161009e9190610a72565b60405180910390f35b3480156100b357600080fd5b5061006f6100c23660046109e5565b610301565b61006f6100d53660046109e5565b6103fd565b3480156100e657600080fd5b506100fa6100f53660046109e5565b61094f565b60405161009e9190610b9e565b6000546040516331a9108f60e11b81526001600160a01b0390911690636352211e90610137908690600401610b9e565b60206040518083038186803b15801561014f57600080fd5b505afa158015610163573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610187919061097d565b6001600160a01b0316336001600160a01b0316146101c05760405162461bcd60e51b81526004016101b790610b30565b60405180910390fd5b60005460405163020604bf60e21b815230916001600160a01b03169063081812fc906101f0908790600401610b9e565b60206040518083038186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610240919061097d565b6001600160a01b0316146102665760405162461bcd60e51b81526004016101b790610af9565b600082116102865760405162461bcd60e51b81526004016101b790610b67565b6000838152600260209081526040808320859055600390915290819020805460ff1916831515179055517faeaea83d55e01eaf051d1585eca1a41d3755395129839dfa6678dc5997f3eb0a906102df9085908590610a7d565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b6000546040516331a9108f60e11b81526001600160a01b0390911690636352211e90610331908490600401610b9e565b60206040518083038186803b15801561034957600080fd5b505afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610381919061097d565b6001600160a01b0316336001600160a01b0316146103b15760405162461bcd60e51b81526004016101b790610b30565b60008181526002602052604080822091909155517f2c525dc2c086b9a2f3b902d229853b5b838fcedc22933c40ed7ebe4890a53a82906103f2908390610b9e565b60405180910390a150565b60008181526002602090815260408083205460039092529091205460ff16816104385760405162461bcd60e51b81526004016101b790610ac2565b60005460405163020604bf60e21b815230916001600160a01b03169063081812fc90610468908790600401610b9e565b60206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b8919061097d565b6001600160a01b0316146104de5760405162461bcd60e51b81526004016101b790610af9565b80801561056c57506001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061051a90339030908790600401610a35565b602060405180830381600087803b15801561053457600080fd5b505af1158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c91906109c9565b8061057657508134145b6105925760405162461bcd60e51b81526004016101b790610a8b565b6000805460405163152a902d60e11b815282916001600160a01b031690632a55205a906105c59084908890600401610a7d565b604080518083038186803b1580156105dc57600080fd5b505afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610614919061099e565b600080546040516331a9108f60e11b8152939550919350916001600160a01b0390911690636352211e9061064c908990600401610b9e565b60206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c919061097d565b6000546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906106d190849030908b90600401610a35565b600060405180830381600087803b1580156106eb57600080fd5b505af11580156106ff573d6000803e3d6000fd5b50506000546040516323b872dd60e01b81526001600160a01b0390911692506323b872dd915061073790309033908b90600401610a35565b600060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b50505050600082866107779190610ba7565b9050841561088e5760015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906107b19087908790600401610a59565b602060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080391906109c9565b5060015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906108369085908590600401610a59565b602060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088891906109c9565b506108fd565b6040516001600160a01b0385169084156108fc029085906000818181858888f193505050501580156108c4573d6000803e3d6000fd5b506040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156108fb573d6000803e3d6000fd5b505b60008781526002602052604080822091909155517f3e32821836f4caf5b64b2c8c6b460049a9797526960d31502f7575b8da39d5ae9061093e908990610b9e565b60405180910390a150505050505050565b60026020526000908152604090205481565b80516001600160a01b038116811461097857600080fd5b919050565b60006020828403121561098e578081fd5b61099782610961565b9392505050565b600080604083850312156109b0578081fd5b6109b983610961565b9150602083015190509250929050565b6000602082840312156109da578081fd5b815161099781610bca565b6000602082840312156109f6578081fd5b5035919050565b600080600060608486031215610a11578081fd5b83359250602084013591506040840135610a2a81610bca565b809150509250925092565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b918252602082015260400190565b60208082526017908201527f4d7573742073656e6420636f7272656374207072696365000000000000000000604082015260600190565b60208082526018908201527f54686973204e4654206973206e6f7420666f722073616c650000000000000000604082015260600190565b60208082526018908201527f54686973204e4654206973206e6f7420617070726f7665640000000000000000604082015260600190565b60208082526017908201527f596f7520646f206e6f74206f776e2074686973204e4654000000000000000000604082015260600190565b6020808252601c908201527f5072696365206d7573742062652067726561746572207468616e203000000000604082015260600190565b90815260200190565b600082821015610bc557634e487b7160e01b81526011600452602481fd5b500390565b8015158114610bd857600080fd5b5056fea26469706673582212207e6e6ff3a7598ae88dd3653ffe5f94a6470f9b677127eb89203d518404fe810664736f6c63430008000033";

export class Market__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    addr: string,
    stable: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(addr, stable, overrides || {}) as Promise<Market>;
  }
  getDeployTransaction(
    addr: string,
    stable: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(addr, stable, overrides || {});
  }
  attach(address: string): Market {
    return super.attach(address) as Market;
  }
  connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
