/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from "ethers";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royalty",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdTracker",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200291d3803806200291d8339810160408190526200003491620004f2565b8551869086906200004d906000906020850190620003c3565b50805162000063906001906020840190620003c3565b505050620000806200007a6200012360201b60201c565b62000127565b600d839055600c82905583620000963062000179565b604051602001620000a9929190620005b4565b604051602081830303815290604052600e9080519060200190620000cf929190620003c3565b50600e604051602001620000e4919062000603565b604051602081830303815290604052600f90805190602001906200010a929190620003c3565b50620001173382620002fc565b50505050505062000a15565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b6014811015620002f3576000620001b982601362000905565b620001c6906008620008b7565b620001d3906002620007c2565b620001e8906001600160a01b03871662000739565b60f81b9050600060108260f81c62000201919062000750565b60f81b905060008160f81c60106200021a9190620008d9565b8360f81c6200022a91906200091f565b60f81b90506200023a826200037d565b8562000248866002620008b7565b815181106200026757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535062000289816200037d565b8562000297866002620008b7565b620002a4906001620006f6565b81518110620002c357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053505050508080620002ea90620009b5565b915050620001a0565b5090505b919050565b6127108111156200032a5760405162461bcd60e51b81526004016200032190620006b3565b60405180910390fd5b604080518082019091526001600160a01b0390921680835262ffffff9091166020909201829052600b8054600160a01b90930262ffffff60a01b196001600160a01b031990941690921792909216179055565b6000600a60f883901c1015620003a9576200039e60f883901c603062000711565b60f81b9050620002f7565b620003ba60f883901c605762000711565b60f81b92915050565b828054620003d19062000978565b90600052602060002090601f016020900481019282620003f5576000855562000440565b82601f106200041057805160ff191683800117855562000440565b8280016001018555821562000440579182015b828111156200044057825182559160200191906001019062000423565b506200044e92915062000452565b5090565b5b808211156200044e576000815560010162000453565b600082601f8301126200047a578081fd5b81516001600160401b0380821115620004975762000497620009ff565b604051601f8301601f191681016020018281118282101715620004be57620004be620009ff565b604052828152848301602001861015620004d6578384fd5b620004e983602083016020880162000945565b95945050505050565b60008060008060008060c087890312156200050b578182fd5b86516001600160401b038082111562000522578384fd5b620005308a838b0162000469565b9750602089015191508082111562000546578384fd5b620005548a838b0162000469565b965060408901519150808211156200056a578384fd5b506200057989828a0162000469565b945050606087015192506080870151915060a087015190509295509295509295565b6c636f6e74726163742f6461746160981b8152600d0190565b60008351620005c881846020880162000945565b61060f60f31b9083019081528351620005e981600284016020880162000945565b602f60f81b60029290910191820152600301949350505050565b81546000908190600281046001808316806200062057607f831692505b60208084108214156200064157634e487b7160e01b87526022600452602487fd5b8180156200065857600181146200066a576200069a565b60ff198616895284890196506200069a565b620006758a620006ea565b885b86811015620006925781548b82015290850190830162000677565b505084890196505b505050505050620006ab816200059b565b949350505050565b6020808252601a908201527f45524332393831526f79616c746965733a20546f6f2068696768000000000000604082015260600190565b60009081526020902090565b600082198211156200070c576200070c620009d3565b500190565b600060ff821660ff84168060ff03821115620007315762000731620009d3565b019392505050565b6000826200074b576200074b620009e9565b500490565b600060ff831680620007665762000766620009e9565b8060ff84160491505092915050565b80825b6001808611620007895750620007b9565b8187048211156200079e576200079e620009d3565b80861615620007ac57918102915b9490941c93800262000778565b94509492505050565b6000620007d36000198484620007da565b9392505050565b600082620007eb57506001620007d3565b81620007fa57506000620007d3565b81600181146200081357600281146200081e5762000852565b6001915050620007d3565b60ff841115620008325762000832620009d3565b6001841b9150848211156200084b576200084b620009d3565b50620007d3565b5060208310610133831016604e8410600b84101617156200088a575081810a83811115620008845762000884620009d3565b620007d3565b62000899848484600162000775565b808604821115620008ae57620008ae620009d3565b02949350505050565b6000816000190483118215151615620008d457620008d4620009d3565b500290565b600060ff821660ff84168160ff0481118215151615620008fd57620008fd620009d3565b029392505050565b6000828210156200091a576200091a620009d3565b500390565b600060ff821660ff8416808210156200093c576200093c620009d3565b90039392505050565b60005b838110156200096257818101518382015260200162000948565b8381111562000972576000848401525b50505050565b6002810460018216806200098d57607f821691505b60208210811415620009af57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620009cc57620009cc620009d3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611ef88062000a256000396000f3fe6080604052600436106101665760003560e01c80636352211e116100d1578063a0712d681161008a578063c87b56dd11610064578063c87b56dd146103f3578063e8a3d48514610413578063e985e9c514610428578063f2fde38b1461044857610166565b8063a0712d68146103a0578063a22cb465146103b3578063b88d4fde146103d357610166565b80636352211e1461030c57806370a082311461032c578063715018a61461034c5780638da5cb5b1461036157806395d89b4114610376578063a035b1fe1461038b57610166565b806323b872dd1161012357806323b872dd146102495780632a55205a146102695780632f745c59146102975780633499efa5146102b757806342842e0e146102cc5780634f6ccce7146102ec57610166565b806301ffc9a71461016b57806302bf3d56146101a157806306fdde03146101c3578063081812fc146101e5578063095ea7b31461021257806318160ddd14610234575b600080fd5b34801561017757600080fd5b5061018b610186366004611691565b610468565b60405161019891906117c7565b60405180910390f35b3480156101ad57600080fd5b506101b661047b565b6040516101989190611d69565b3480156101cf57600080fd5b506101d8610481565b60405161019891906117d2565b3480156101f157600080fd5b506102056102003660046116c9565b610513565b604051610198919061175d565b34801561021e57600080fd5b5061023261022d366004611668565b61055f565b005b34801561024057600080fd5b506101b66105f7565b34801561025557600080fd5b50610232610264366004611527565b6105fd565b34801561027557600080fd5b506102896102843660046116e1565b610635565b6040516101989291906117ae565b3480156102a357600080fd5b506101b66102b2366004611668565b61068a565b3480156102c357600080fd5b506101b66106dc565b3480156102d857600080fd5b506102326102e7366004611527565b6106e2565b3480156102f857600080fd5b506101b66103073660046116c9565b6106fd565b34801561031857600080fd5b506102056103273660046116c9565b610758565b34801561033857600080fd5b506101b66103473660046114db565b61078d565b34801561035857600080fd5b506102326107d1565b34801561036d57600080fd5b5061020561081c565b34801561038257600080fd5b506101d861082b565b34801561039757600080fd5b506101b661083a565b6102326103ae3660046116c9565b610840565b3480156103bf57600080fd5b506102326103ce36600461162e565b6108e0565b3480156103df57600080fd5b506102326103ee366004611562565b6109ae565b3480156103ff57600080fd5b506101d861040e3660046116c9565b6109ed565b34801561041f57600080fd5b506101d8610a70565b34801561043457600080fd5b5061018b6104433660046114f5565b610afe565b34801561045457600080fd5b506102326104633660046114db565b610b2c565b600061047382610b9d565b90505b919050565b60105481565b60606000805461049090611e00565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc90611e00565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b5050505050905090565b600061051e82610bc2565b6105435760405162461bcd60e51b815260040161053a90611b72565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061056a82610758565b9050806001600160a01b0316836001600160a01b0316141561059e5760405162461bcd60e51b815260040161053a90611c8b565b806001600160a01b03166105b0610bdf565b6001600160a01b031614806105cc57506105cc81610443610bdf565b6105e85760405162461bcd60e51b815260040161053a906119fd565b6105f28383610be3565b505050565b60085490565b61060e610608610bdf565b82610c51565b61062a5760405162461bcd60e51b815260040161053a90611ccc565b6105f2838383610cd6565b60408051808201909152600b546001600160a01b038116808352600160a01b90910462ffffff16602083018190529091600091612710906106769086611d9e565b6106809190611d8a565b9150509250929050565b60006106958361078d565b82106106b35760405162461bcd60e51b815260040161053a906117e5565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600d5481565b6105f2838383604051806020016040528060008152506109ae565b60006107076105f7565b82106107255760405162461bcd60e51b815260040161053a90611d1d565b6008828154811061074657634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104735760405162461bcd60e51b815260040161053a90611aa4565b60006001600160a01b0382166107b55760405162461bcd60e51b815260040161053a90611a5a565b506001600160a01b031660009081526003602052604090205490565b6107d9610bdf565b6001600160a01b03166107ea61081c565b6001600160a01b0316146108105760405162461bcd60e51b815260040161053a90611bbe565b61081a6000610e03565b565b600a546001600160a01b031690565b60606001805461049090611e00565b600c5481565b80600c5461084e9190611d9e565b341461086c5760405162461bcd60e51b815260040161053a906118ff565b600d548161087a6010610e55565b6108849190611d72565b11156108a25760405162461bcd60e51b815260040161053a90611b22565b60005b818110156108dc576108c0336108bb6010610e55565b610e59565b6108ca6010610f38565b806108d481611e3b565b9150506108a5565b5050565b6108e8610bdf565b6001600160a01b0316826001600160a01b031614156109195760405162461bcd60e51b815260040161053a9061197a565b8060056000610926610bdf565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561096a610bdf565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109a291906117c7565b60405180910390a35050565b6109bf6109b9610bdf565b83610c51565b6109db5760405162461bcd60e51b815260040161053a90611ccc565b6109e784848484610f41565b50505050565b60606109f882610bc2565b610a145760405162461bcd60e51b815260040161053a90611c3c565b6000610a1e610f74565b90506000815111610a3e5760405180602001604052806000815250610a69565b80610a4884610f83565b604051602001610a5992919061172e565b6040516020818303038152906040525b9392505050565b600f8054610a7d90611e00565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa990611e00565b8015610af65780601f10610acb57610100808354040283529160200191610af6565b820191906000526020600020905b815481529060010190602001808311610ad957829003601f168201915b505050505081565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610b34610bdf565b6001600160a01b0316610b4561081c565b6001600160a01b031614610b6b5760405162461bcd60e51b815260040161053a90611bbe565b6001600160a01b038116610b915760405162461bcd60e51b815260040161053a90611882565b610b9a81610e03565b50565b60006001600160e01b0319821663152a902d60e11b148061047357506104738261109e565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c1882610758565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610c5c82610bc2565b610c785760405162461bcd60e51b815260040161053a906119b1565b6000610c8383610758565b9050806001600160a01b0316846001600160a01b03161480610cbe5750836001600160a01b0316610cb384610513565b6001600160a01b0316145b80610cce5750610cce8185610afe565b949350505050565b826001600160a01b0316610ce982610758565b6001600160a01b031614610d0f5760405162461bcd60e51b815260040161053a90611bf3565b6001600160a01b038216610d355760405162461bcd60e51b815260040161053a90611936565b610d408383836110c3565b610d4b600082610be3565b6001600160a01b0383166000908152600360205260408120805460019290610d74908490611dbd565b90915550506001600160a01b0382166000908152600360205260408120805460019290610da2908490611d72565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b5490565b6001600160a01b038216610e7f5760405162461bcd60e51b815260040161053a90611aed565b610e8881610bc2565b15610ea55760405162461bcd60e51b815260040161053a906118c8565b610eb1600083836110c3565b6001600160a01b0382166000908152600360205260408120805460019290610eda908490611d72565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b610f4c848484610cd6565b610f588484848461114c565b6109e75760405162461bcd60e51b815260040161053a90611830565b6060600e805461049090611e00565b606081610fa857506040805180820190915260018152600360fc1b6020820152610476565b8160005b8115610fd25780610fbc81611e3b565b9150610fcb9050600a83611d8a565b9150610fac565b60008167ffffffffffffffff811115610ffb57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611025576020820181803683370190505b5090505b8415610cce5761103a600183611dbd565b9150611047600a86611e56565b611052906030611d72565b60f81b81838151811061107557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611097600a86611d8a565b9450611029565b60006001600160e01b0319821663780e9d6360e01b1480610473575061047382611267565b6110ce8383836105f2565b6001600160a01b0383166110ea576110e5816112a7565b61110d565b816001600160a01b0316836001600160a01b03161461110d5761110d83826112eb565b6001600160a01b0382166111295761112481611388565b6105f2565b826001600160a01b0316826001600160a01b0316146105f2576105f28282611461565b6000611160846001600160a01b03166114a5565b1561125c57836001600160a01b031663150b7a0261117c610bdf565b8786866040518563ffffffff1660e01b815260040161119e9493929190611771565b602060405180830381600087803b1580156111b857600080fd5b505af19250505080156111e8575060408051601f3d908101601f191682019092526111e5918101906116ad565b60015b611242573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b606091505b50805161123a5760405162461bcd60e51b815260040161053a90611830565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cce565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b148061129857506001600160e01b03198216635b5e139f60e01b145b806104735750610473826114ab565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016112f88461078d565b6113029190611dbd565b600083815260076020526040902054909150808214611355576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061139a90600190611dbd565b600083815260096020526040812054600880549394509092849081106113d057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600883815481106113ff57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061144557634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061146c8361078d565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b3b151590565b6001600160e01b031981166301ffc9a760e01b14919050565b80356001600160a01b038116811461047657600080fd5b6000602082840312156114ec578081fd5b610a69826114c4565b60008060408385031215611507578081fd5b611510836114c4565b915061151e602084016114c4565b90509250929050565b60008060006060848603121561153b578081fd5b611544846114c4565b9250611552602085016114c4565b9150604084013590509250925092565b60008060008060808587031215611577578081fd5b611580856114c4565b9350602061158f8187016114c4565b935060408601359250606086013567ffffffffffffffff808211156115b2578384fd5b818801915088601f8301126115c5578384fd5b8135818111156115d7576115d7611e96565b604051601f8201601f19168101850183811182821017156115fa576115fa611e96565b60405281815283820185018b1015611610578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215611640578182fd5b611649836114c4565b91506020830135801515811461165d578182fd5b809150509250929050565b6000806040838503121561167a578182fd5b611683836114c4565b946020939093013593505050565b6000602082840312156116a2578081fd5b8135610a6981611eac565b6000602082840312156116be578081fd5b8151610a6981611eac565b6000602082840312156116da578081fd5b5035919050565b600080604083850312156116f3578182fd5b50508035926020909101359150565b6000815180845261171a816020860160208601611dd4565b601f01601f19169290920160200192915050565b60008351611740818460208801611dd4565b835190830190611754818360208801611dd4565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117a490830184611702565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610a696020830184611702565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526017908201527f4d7573742073656e6420636f7272656374207072696365000000000000000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b60208082526030908201527f4e6f7420656e6f75676820696e2074686520636f6c6c656374696f6e206c656660408201526f1d081d1bc81b5a5b9d08185b5bdd5b9d60821b606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b60008219821115611d8557611d85611e6a565b500190565b600082611d9957611d99611e80565b500490565b6000816000190483118215151615611db857611db8611e6a565b500290565b600082821015611dcf57611dcf611e6a565b500390565b60005b83811015611def578181015183820152602001611dd7565b838111156109e75750506000910152565b600281046001821680611e1457607f821691505b60208210811415611e3557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611e4f57611e4f611e6a565b5060010190565b600082611e6557611e65611e80565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610b9a57600080fdfea2646970667358221220d3dedeee3d54975915adc7606663f665f4393662059b343ac943dd8ce1d51bd664736f6c63430008000033";

export class NFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    baseURI: string,
    limit: BigNumberish,
    _price: BigNumberish,
    royalty: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFT> {
    return super.deploy(
      name,
      symbol,
      baseURI,
      limit,
      _price,
      royalty,
      overrides || {}
    ) as Promise<NFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    baseURI: string,
    limit: BigNumberish,
    _price: BigNumberish,
    royalty: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      baseURI,
      limit,
      _price,
      royalty,
      overrides || {}
    );
  }
  attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
