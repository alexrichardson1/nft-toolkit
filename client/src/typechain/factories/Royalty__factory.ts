/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from "ethers";
import type { Royalty, RoyaltyInterface } from "../Royalty";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Delist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SellListing",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "delist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "sellListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109ba3803806109ba83398101604081905261002f91610057565b600080546001600160a01b0319166001600160a01b0392909216919091179055600155610092565b60008060408385031215610069578182fd5b825160208401519092506001600160a01b0381168114610087578182fd5b809150509250929050565b610919806100a16000396000f3fe60806040526004361061004a5760003560e01c806329ee566c1461004f578063964bc33f1461007a578063a34936541461009c578063d96a094a146100bc578063de74e57b146100cf575b600080fd5b34801561005b57600080fd5b506100646100ef565b6040516100719190610860565b60405180910390f35b34801561008657600080fd5b5061009a61009536600461075e565b6100f5565b005b3480156100a857600080fd5b5061009a6100b7366004610776565b6101fa565b61009a6100ca36600461075e565b61039f565b3480156100db57600080fd5b506100646100ea36600461075e565b61071e565b60015481565b6000546040516331a9108f60e11b81526001600160a01b0390911690636352211e90610125908490600401610860565b60206040518083038186803b15801561013d57600080fd5b505afa158015610151573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101759190610730565b6001600160a01b0316336001600160a01b0316146101ae5760405162461bcd60e51b81526004016101a590610829565b60405180910390fd5b60008181526002602052604080822091909155517f2c525dc2c086b9a2f3b902d229853b5b838fcedc22933c40ed7ebe4890a53a82906101ef908390610860565b60405180910390a150565b6000546040516331a9108f60e11b81526001600160a01b0390911690636352211e9061022a908590600401610860565b60206040518083038186803b15801561024257600080fd5b505afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a9190610730565b6001600160a01b0316336001600160a01b0316146102aa5760405162461bcd60e51b81526004016101a590610829565b60005460405163020604bf60e21b815230916001600160a01b03169063081812fc906102da908690600401610860565b60206040518083038186803b1580156102f257600080fd5b505afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190610730565b6001600160a01b0316146103505760405162461bcd60e51b81526004016101a5906107f2565b60008281526002602052604090819020829055517faeaea83d55e01eaf051d1585eca1a41d3755395129839dfa6678dc5997f3eb0a906103939084908490610869565b60405180910390a15050565b60008181526002602052604090205434146103cc5760405162461bcd60e51b81526004016101a5906107bb565b60005460405163020604bf60e21b815230916001600160a01b03169063081812fc906103fc908590600401610860565b60206040518083038186803b15801561041457600080fd5b505afa158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c9190610730565b6001600160a01b0316146104725760405162461bcd60e51b81526004016101a5906107f2565b60006064600154346104849190610897565b61048e9190610877565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104df57600080fd5b505afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190610730565b600080546040516331a9108f60e11b815292935090916001600160a01b0390911690636352211e9061054d908790600401610860565b60206040518083038186803b15801561056557600080fd5b505afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d9190610730565b6000546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906105d290849030908990600401610797565b600060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b50506040516001600160a01b038516925085156108fc02915085906000818181858888f1935050505015801561063a573d6000803e3d6000fd5b506001600160a01b0381166108fc61065285346108b6565b6040518115909202916000818181858888f1935050505015801561067a573d6000803e3d6000fd5b506000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906106af90309033908990600401610797565b600060405180830381600087803b1580156106c957600080fd5b505af11580156106dd573d6000803e3d6000fd5b505050507f3e32821836f4caf5b64b2c8c6b460049a9797526960d31502f7575b8da39d5ae846040516107109190610860565b60405180910390a150505050565b60026020526000908152604090205481565b600060208284031215610741578081fd5b81516001600160a01b0381168114610757578182fd5b9392505050565b60006020828403121561076f578081fd5b5035919050565b60008060408385031215610788578081fd5b50508035926020909101359150565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526017908201527f4d7573742073656e6420636f7272656374207072696365000000000000000000604082015260600190565b60208082526018908201527f54686973204e4654206973206e6f7420617070726f7665640000000000000000604082015260600190565b60208082526017908201527f596f7520646f206e6f74206f776e2074686973204e4654000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b60008261089257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156108b1576108b16108cd565b500290565b6000828210156108c8576108c86108cd565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122024139bab215a7a5908647a5da7d2dfa51fbe9b96f13f286c3c4e7896ff5bf69164736f6c63430008000033";

export class Royalty__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    cut: BigNumberish,
    addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Royalty> {
    return super.deploy(cut, addr, overrides || {}) as Promise<Royalty>;
  }
  getDeployTransaction(
    cut: BigNumberish,
    addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cut, addr, overrides || {});
  }
  attach(address: string): Royalty {
    return super.attach(address) as Royalty;
  }
  connect(signer: Signer): Royalty__factory {
    return super.connect(signer) as Royalty__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyInterface {
    return new utils.Interface(_abi) as RoyaltyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Royalty {
    return new Contract(address, _abi, signerOrProvider) as Royalty;
  }
}
